// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UITEventAPI.Application.Infrastructure.Data;

#nullable disable

namespace UITEventAPI.Application.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240621064819_UpdateSeedData3")]
    partial class UpdateSeedData3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 11,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 12,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 13,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 14,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 15,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 16,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 17,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 18,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 19,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 20,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 21,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 22,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 23,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 24,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 25,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 26,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 27,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 28,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 29,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 30,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 31,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 32,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 33,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 34,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 35,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 36,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 37,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 38,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 39,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 40,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Events.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset>("DeletedWhen")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FormUrl")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxAttendees")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(400)");

                    b.Property<int>("TrainingPoint")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UniversityUnitId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("EventId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("LastModifiedByUserId");

                    b.HasIndex("UniversityUnitId");

                    b.ToTable("Events", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedWhen = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Nước nha cái ừ một. Quê quần bàn năm thương. Nón nước đâu đập nhà bạn phá tôi. Trời leo khâu dép nón.",
                            EndDate = new DateTime(2024, 5, 24, 19, 17, 58, 955, DateTimeKind.Unspecified).AddTicks(3012),
                            FormUrl = "https://forms.gle/HkCD86Gc9UmTTZLP9",
                            IsDeleted = false,
                            IsPublished = true,
                            Location = "296 Đông Nghi Mountain, Hậu Giang, Palestine",
                            MaxAttendees = 48,
                            StartDate = new DateTime(2024, 4, 25, 1, 8, 56, 113, DateTimeKind.Unspecified).AddTicks(2745),
                            Title = "Thế tàu chết bàn.",
                            TrainingPoint = 4,
                            Type = "Workshop",
                            UniversityUnitId = 7
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedWhen = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Đã đỏ nhà. Nón mua lỗi đâu hết. Chín lỗi núi tui bàn. Nha áo chìm đồng nha ờ thôi gió quần được. Đâu á ba ba xanh ruộng khâu đang. Thôi lầu cái thương gì núi.",
                            EndDate = new DateTime(2023, 3, 8, 21, 19, 55, 305, DateTimeKind.Unspecified).AddTicks(2402),
                            FormUrl = "https://forms.gle/HkCD86Gc9UmTTZLP9",
                            IsDeleted = false,
                            IsPublished = false,
                            Location = "8350 Phương Loan Ports, Trà Vinh, Vatican",
                            MaxAttendees = 97,
                            StartDate = new DateTime(2023, 2, 24, 18, 46, 48, 897, DateTimeKind.Unspecified).AddTicks(4493),
                            Title = "Xe phá quê thế bảy bạn khoảng mượn đang.",
                            TrainingPoint = 4,
                            Type = "Webinar",
                            UniversityUnitId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedWhen = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Thôi nhà xanh tui áo ờ hết bơi thì máy. Bè mướn em xanh hết hương khoan đỏ chỉ. Xanh sáu một xanh biết áo. Tím ác máy ghế tui chỉ mây thương lầu độc.",
                            EndDate = new DateTime(2023, 9, 2, 1, 27, 33, 662, DateTimeKind.Unspecified).AddTicks(5946),
                            FormUrl = "https://forms.gle/HkCD86Gc9UmTTZLP9",
                            IsDeleted = false,
                            IsPublished = false,
                            Location = "0771 Nguyễn Squares, Cao Bằng, Bénin",
                            MaxAttendees = 88,
                            StartDate = new DateTime(2023, 8, 17, 10, 19, 47, 47, DateTimeKind.Unspecified).AddTicks(1561),
                            Title = "Áo hàng tô khâu viết.",
                            TrainingPoint = 1,
                            Type = "Webinar",
                            UniversityUnitId = 7
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedWhen = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Nhà chỉ hết vàng chỉ tàu hết. Thôi trăng ghế độc đâu nha làm phá bàn. Ghế đỏ bơi đâu á.",
                            EndDate = new DateTime(2022, 6, 30, 20, 48, 28, 964, DateTimeKind.Unspecified).AddTicks(7970),
                            FormUrl = "https://forms.gle/HkCD86Gc9UmTTZLP9",
                            IsDeleted = false,
                            IsPublished = false,
                            Location = "47036 Ðắc Trọng Stream, Kon Tum, Samoa",
                            MaxAttendees = 44,
                            StartDate = new DateTime(2022, 6, 20, 13, 16, 41, 351, DateTimeKind.Unspecified).AddTicks(2059),
                            Title = "Hương may đạp đang không áo khoan tàu ghét.",
                            TrainingPoint = 6,
                            Type = "Webinar",
                            UniversityUnitId = 9
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedWhen = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Anh thì đồng làm gì gì bè đá ruộng đâu. Một bè gì mây hết vẽ được mượn hết. Thế ờ chết bảy thế cửa đồng phá tôi tô.",
                            EndDate = new DateTime(2022, 10, 11, 2, 7, 8, 243, DateTimeKind.Unspecified).AddTicks(2383),
                            FormUrl = "https://forms.gle/HkCD86Gc9UmTTZLP9",
                            IsDeleted = false,
                            IsPublished = false,
                            Location = "056 Dương Extensions, Yên Bái, Venezuela",
                            MaxAttendees = 41,
                            StartDate = new DateTime(2022, 9, 30, 18, 43, 13, 869, DateTimeKind.Unspecified).AddTicks(842),
                            Title = "Năm ba thích thuyền chìm.",
                            TrainingPoint = 3,
                            Type = "Workshop",
                            UniversityUnitId = 3
                        });
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Events.EventImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id")
                        .HasName("EventImageId");

                    b.HasIndex("EventId");

                    b.ToTable("EventImages", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EventId = 2,
                            ImageUrl = "https://picsum.photos/640/480/?image=120"
                        },
                        new
                        {
                            Id = 2,
                            EventId = 4,
                            ImageUrl = "https://picsum.photos/640/480/?image=438"
                        },
                        new
                        {
                            Id = 3,
                            EventId = 2,
                            ImageUrl = "https://picsum.photos/640/480/?image=756"
                        },
                        new
                        {
                            Id = 4,
                            EventId = 5,
                            ImageUrl = "https://picsum.photos/640/480/?image=1075"
                        },
                        new
                        {
                            Id = 5,
                            EventId = 2,
                            ImageUrl = "https://picsum.photos/640/480/?image=308"
                        },
                        new
                        {
                            Id = 6,
                            EventId = 5,
                            ImageUrl = "https://picsum.photos/640/480/?image=626"
                        },
                        new
                        {
                            Id = 7,
                            EventId = 2,
                            ImageUrl = "https://picsum.photos/640/480/?image=945"
                        },
                        new
                        {
                            Id = 8,
                            EventId = 5,
                            ImageUrl = "https://picsum.photos/640/480/?image=178"
                        },
                        new
                        {
                            Id = 9,
                            EventId = 3,
                            ImageUrl = "https://picsum.photos/640/480/?image=497"
                        },
                        new
                        {
                            Id = 10,
                            EventId = 5,
                            ImageUrl = "https://picsum.photos/640/480/?image=815"
                        },
                        new
                        {
                            Id = 11,
                            EventId = 3,
                            ImageUrl = "https://picsum.photos/640/480/?image=48"
                        },
                        new
                        {
                            Id = 12,
                            EventId = 5,
                            ImageUrl = "https://picsum.photos/640/480/?image=367"
                        },
                        new
                        {
                            Id = 13,
                            EventId = 3,
                            ImageUrl = "https://picsum.photos/640/480/?image=685"
                        },
                        new
                        {
                            Id = 14,
                            EventId = 1,
                            ImageUrl = "https://picsum.photos/640/480/?image=1003"
                        },
                        new
                        {
                            Id = 15,
                            EventId = 3,
                            ImageUrl = "https://picsum.photos/640/480/?image=237"
                        },
                        new
                        {
                            Id = 16,
                            EventId = 1,
                            ImageUrl = "https://picsum.photos/640/480/?image=555"
                        },
                        new
                        {
                            Id = 17,
                            EventId = 4,
                            ImageUrl = "https://picsum.photos/640/480/?image=873"
                        },
                        new
                        {
                            Id = 18,
                            EventId = 1,
                            ImageUrl = "https://picsum.photos/640/480/?image=107"
                        },
                        new
                        {
                            Id = 19,
                            EventId = 4,
                            ImageUrl = "https://picsum.photos/640/480/?image=425"
                        },
                        new
                        {
                            Id = 20,
                            EventId = 1,
                            ImageUrl = "https://picsum.photos/640/480/?image=743"
                        });
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Events.EventRegistration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AttendedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAttended")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRegistered")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("EventRegistrationId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("EventId");

                    b.HasIndex("LastModifiedByUserId");

                    b.HasIndex("StudentId");

                    b.ToTable("EventRegistrations", null, t =>
                        {
                            t.HasCheckConstraint("CK_EventRegistration_AttendedDate_GreaterThan_RegistrationDate", "AttendedDate IS NULL OR RegisterDate IS NULL OR AttendedDate >= RegisterDate");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 1, 22, 6, 29, 1, 984, DateTimeKind.Unspecified).AddTicks(6480),
                            StudentId = 4
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 4, 30, 12, 18, 58, 458, DateTimeKind.Unspecified).AddTicks(2994),
                            StudentId = 12
                        },
                        new
                        {
                            Id = 3,
                            AttendedDate = new DateTime(2023, 2, 20, 17, 21, 31, 509, DateTimeKind.Unspecified).AddTicks(5342),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 2, 15, 13, 7, 14, 594, DateTimeKind.Unspecified).AddTicks(6741),
                            StudentId = 21
                        },
                        new
                        {
                            Id = 4,
                            AttendedDate = new DateTime(2022, 9, 3, 12, 18, 42, 50, DateTimeKind.Unspecified).AddTicks(6611),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 9, 3, 4, 22, 45, 871, DateTimeKind.Unspecified).AddTicks(3220),
                            StudentId = 29
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 1, 9, 19, 45, 27, 204, DateTimeKind.Unspecified).AddTicks(7002),
                            StudentId = 9
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 9, 27, 11, 0, 58, 481, DateTimeKind.Unspecified).AddTicks(3481),
                            StudentId = 17
                        },
                        new
                        {
                            Id = 7,
                            AttendedDate = new DateTime(2023, 2, 11, 1, 4, 52, 19, DateTimeKind.Unspecified).AddTicks(1513),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 2, 3, 2, 23, 39, 814, DateTimeKind.Unspecified).AddTicks(7263),
                            StudentId = 26
                        },
                        new
                        {
                            Id = 8,
                            AttendedDate = new DateTime(2022, 9, 23, 11, 43, 42, 485, DateTimeKind.Unspecified).AddTicks(8851),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 8, 21, 17, 39, 11, 91, DateTimeKind.Unspecified).AddTicks(3742),
                            StudentId = 5
                        },
                        new
                        {
                            Id = 9,
                            AttendedDate = new DateTime(2023, 7, 6, 10, 43, 11, 659, DateTimeKind.Unspecified).AddTicks(2561),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 3,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 6, 20, 23, 10, 0, 352, DateTimeKind.Unspecified).AddTicks(7001),
                            StudentId = 14
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 9, 15, 0, 17, 23, 701, DateTimeKind.Unspecified).AddTicks(4003),
                            StudentId = 22
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 3,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 7, 14, 20, 15, 7, 837, DateTimeKind.Unspecified).AddTicks(9717),
                            StudentId = 2
                        },
                        new
                        {
                            Id = 12,
                            AttendedDate = new DateTime(2022, 9, 11, 0, 51, 51, 303, DateTimeKind.Unspecified).AddTicks(3911),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 8, 9, 6, 55, 36, 311, DateTimeKind.Unspecified).AddTicks(4264),
                            StudentId = 10
                        },
                        new
                        {
                            Id = 13,
                            AttendedDate = new DateTime(2023, 8, 8, 10, 53, 34, 902, DateTimeKind.Unspecified).AddTicks(9944),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 3,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 8, 7, 17, 20, 15, 323, DateTimeKind.Unspecified).AddTicks(2433),
                            StudentId = 19
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 3, 28, 17, 24, 25, 98, DateTimeKind.Unspecified).AddTicks(3521),
                            StudentId = 27
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 3,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 7, 2, 14, 25, 22, 808, DateTimeKind.Unspecified).AddTicks(5148),
                            StudentId = 7
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 4, 21, 4, 56, 27, 458, DateTimeKind.Unspecified).AddTicks(8691),
                            StudentId = 15
                        },
                        new
                        {
                            Id = 17,
                            AttendedDate = new DateTime(2022, 6, 17, 22, 44, 22, 483, DateTimeKind.Unspecified).AddTicks(5637),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 5, 29, 14, 27, 24, 597, DateTimeKind.Unspecified).AddTicks(8362),
                            StudentId = 24
                        },
                        new
                        {
                            Id = 18,
                            AttendedDate = new DateTime(2024, 3, 29, 18, 50, 24, 787, DateTimeKind.Unspecified).AddTicks(8664),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 3, 16, 16, 28, 29, 819, DateTimeKind.Unspecified).AddTicks(3862),
                            StudentId = 3
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 4, 23, 11, 32, 32, 83, DateTimeKind.Unspecified).AddTicks(1078),
                            StudentId = 12
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 4, 9, 4, 0, 32, 179, DateTimeKind.Unspecified).AddTicks(9032),
                            StudentId = 20
                        },
                        new
                        {
                            Id = 21,
                            AttendedDate = new DateTime(2022, 6, 9, 20, 36, 22, 770, DateTimeKind.Unspecified).AddTicks(6401),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 5, 17, 8, 37, 39, 568, DateTimeKind.Unspecified).AddTicks(3794),
                            StudentId = 29
                        },
                        new
                        {
                            Id = 22,
                            AttendedDate = new DateTime(2023, 1, 10, 0, 59, 1, 599, DateTimeKind.Unspecified).AddTicks(2805),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 1, 2, 16, 10, 14, 389, DateTimeKind.Unspecified).AddTicks(9220),
                            StudentId = 8
                        },
                        new
                        {
                            Id = 23,
                            AttendedDate = new DateTime(2022, 6, 16, 7, 49, 38, 142, DateTimeKind.Unspecified).AddTicks(5250),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 6, 10, 5, 42, 47, 53, DateTimeKind.Unspecified).AddTicks(6509),
                            StudentId = 17
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 1, 26, 22, 48, 26, 999, DateTimeKind.Unspecified).AddTicks(9481),
                            StudentId = 25
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 5, 5, 2, 47, 54, 538, DateTimeKind.Unspecified).AddTicks(9225),
                            StudentId = 5
                        },
                        new
                        {
                            Id = 26,
                            AttendedDate = new DateTime(2023, 2, 24, 12, 43, 47, 499, DateTimeKind.Unspecified).AddTicks(3890),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 2, 20, 5, 26, 39, 609, DateTimeKind.Unspecified).AddTicks(9742),
                            StudentId = 13
                        },
                        new
                        {
                            Id = 27,
                            AttendedDate = new DateTime(2022, 9, 16, 22, 35, 29, 129, DateTimeKind.Unspecified).AddTicks(8292),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 9, 7, 20, 42, 10, 886, DateTimeKind.Unspecified).AddTicks(6222),
                            StudentId = 22
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 1, 14, 12, 4, 52, 220, DateTimeKind.Unspecified).AddTicks(3),
                            StudentId = 1
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 8, 2, 3, 20, 23, 496, DateTimeKind.Unspecified).AddTicks(6483),
                            StudentId = 10
                        },
                        new
                        {
                            Id = 30,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 2, 7, 18, 43, 4, 830, DateTimeKind.Unspecified).AddTicks(264),
                            StudentId = 18
                        },
                        new
                        {
                            Id = 31,
                            AttendedDate = new DateTime(2022, 9, 2, 13, 30, 0, 928, DateTimeKind.Unspecified).AddTicks(2201),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 8, 26, 9, 58, 36, 106, DateTimeKind.Unspecified).AddTicks(6744),
                            StudentId = 27
                        },
                        new
                        {
                            Id = 32,
                            AttendedDate = new DateTime(2023, 7, 30, 2, 49, 45, 595, DateTimeKind.Unspecified).AddTicks(4127),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 3,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 6, 25, 13, 38, 56, 433, DateTimeKind.Unspecified).AddTicks(3232),
                            StudentId = 6
                        },
                        new
                        {
                            Id = 33,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 9, 19, 16, 36, 48, 716, DateTimeKind.Unspecified).AddTicks(7005),
                            StudentId = 15
                        },
                        new
                        {
                            Id = 34,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 3,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 7, 19, 10, 44, 3, 918, DateTimeKind.Unspecified).AddTicks(5948),
                            StudentId = 24
                        },
                        new
                        {
                            Id = 35,
                            AttendedDate = new DateTime(2024, 3, 10, 3, 26, 12, 298, DateTimeKind.Unspecified).AddTicks(5174),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 3, 9, 18, 30, 49, 883, DateTimeKind.Unspecified).AddTicks(7811),
                            StudentId = 3
                        },
                        new
                        {
                            Id = 36,
                            AttendedDate = new DateTime(2023, 8, 14, 16, 6, 56, 8, DateTimeKind.Unspecified).AddTicks(1028),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 3,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 8, 12, 7, 49, 11, 403, DateTimeKind.Unspecified).AddTicks(8664),
                            StudentId = 12
                        },
                        new
                        {
                            Id = 37,
                            AttendedDate = new DateTime(2024, 4, 23, 0, 27, 35, 811, DateTimeKind.Unspecified).AddTicks(4509),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 4, 2, 6, 2, 52, 244, DateTimeKind.Unspecified).AddTicks(2981),
                            StudentId = 20
                        },
                        new
                        {
                            Id = 38,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 3,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 7, 7, 4, 54, 18, 889, DateTimeKind.Unspecified).AddTicks(1380),
                            StudentId = 29
                        },
                        new
                        {
                            Id = 39,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 2, 26, 17, 34, 54, 604, DateTimeKind.Unspecified).AddTicks(8152),
                            StudentId = 8
                        },
                        new
                        {
                            Id = 40,
                            AttendedDate = new DateTime(2022, 6, 7, 19, 27, 41, 727, DateTimeKind.Unspecified).AddTicks(9683),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 6, 3, 4, 56, 20, 678, DateTimeKind.Unspecified).AddTicks(4593),
                            StudentId = 17
                        },
                        new
                        {
                            Id = 41,
                            AttendedDate = new DateTime(2024, 4, 15, 4, 30, 30, 546, DateTimeKind.Unspecified).AddTicks(9325),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 3, 21, 5, 6, 56, 965, DateTimeKind.Unspecified).AddTicks(3322),
                            StudentId = 25
                        },
                        new
                        {
                            Id = 42,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 4, 28, 2, 1, 28, 163, DateTimeKind.Unspecified).AddTicks(7309),
                            StudentId = 5
                        },
                        new
                        {
                            Id = 43,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 4, 13, 16, 38, 59, 325, DateTimeKind.Unspecified).AddTicks(8493),
                            StudentId = 13
                        },
                        new
                        {
                            Id = 44,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 5, 21, 23, 6, 35, 649, DateTimeKind.Unspecified).AddTicks(25),
                            StudentId = 22
                        },
                        new
                        {
                            Id = 45,
                            AttendedDate = new DateTime(2023, 2, 1, 16, 14, 37, 204, DateTimeKind.Unspecified).AddTicks(2069),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 1, 7, 8, 29, 39, 405, DateTimeKind.Unspecified).AddTicks(2222),
                            StudentId = 1
                        },
                        new
                        {
                            Id = 46,
                            AttendedDate = new DateTime(2022, 6, 20, 9, 45, 56, 536, DateTimeKind.Unspecified).AddTicks(8180),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 6, 14, 20, 11, 43, 134, DateTimeKind.Unspecified).AddTicks(2741),
                            StudentId = 10
                        },
                        new
                        {
                            Id = 47,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 1, 31, 15, 7, 52, 15, DateTimeKind.Unspecified).AddTicks(2483),
                            StudentId = 18
                        },
                        new
                        {
                            Id = 48,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 8, 19, 6, 23, 23, 291, DateTimeKind.Unspecified).AddTicks(8963),
                            StudentId = 27
                        },
                        new
                        {
                            Id = 49,
                            AttendedDate = new DateTime(2023, 1, 14, 22, 11, 56, 607, DateTimeKind.Unspecified).AddTicks(251),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 12, 25, 21, 46, 4, 625, DateTimeKind.Unspecified).AddTicks(2744),
                            StudentId = 6
                        },
                        new
                        {
                            Id = 50,
                            AttendedDate = new DateTime(2022, 9, 26, 18, 34, 4, 763, DateTimeKind.Unspecified).AddTicks(8697),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 9, 12, 13, 1, 35, 901, DateTimeKind.Unspecified).AddTicks(9224),
                            StudentId = 15
                        });
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Students.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("LastModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("StudentCode")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("StudentId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("LastModifiedByUserId");

                    b.HasIndex("StudentCode")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Students", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1954, 11, 7, 21, 10, 55, 63, DateTimeKind.Unspecified).AddTicks(6722),
                            FirstName = "Minh Cảnh",
                            LastName = "Lâm",
                            StudentCode = 230465,
                            UserId = 19
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2003, 12, 18, 21, 50, 22, 54, DateTimeKind.Unspecified).AddTicks(1337),
                            FirstName = "Ðông Nguyên",
                            LastName = "Hà",
                            StudentCode = 197741,
                            UserId = 34
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2002, 10, 30, 0, 55, 36, 490, DateTimeKind.Unspecified).AddTicks(5745),
                            FirstName = "Tú Tâm",
                            LastName = "Hoàng",
                            StudentCode = 134950,
                            UserId = 20
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1985, 3, 21, 1, 44, 32, 796, DateTimeKind.Unspecified).AddTicks(1942),
                            FirstName = "Phương An",
                            LastName = "Bùi",
                            StudentCode = 206711,
                            UserId = 36
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2000, 10, 20, 4, 40, 17, 917, DateTimeKind.Unspecified).AddTicks(4770),
                            FirstName = "Hải Hà",
                            LastName = "Đoàn",
                            StudentCode = 143920,
                            UserId = 22
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1995, 3, 30, 10, 54, 34, 131, DateTimeKind.Unspecified).AddTicks(7127),
                            FirstName = "Ái Nhân",
                            LastName = "Phùng",
                            StudentCode = 111196,
                            UserId = 37
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1998, 10, 11, 8, 24, 59, 344, DateTimeKind.Unspecified).AddTicks(3794),
                            FirstName = "Thanh Trang",
                            LastName = "Nguyễn",
                            StudentCode = 248405,
                            UserId = 23
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1975, 3, 31, 6, 46, 21, 588, DateTimeKind.Unspecified).AddTicks(8266),
                            FirstName = "Hữu Minh",
                            LastName = "Phan",
                            StudentCode = 215681,
                            UserId = 38
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1996, 10, 1, 12, 9, 40, 771, DateTimeKind.Unspecified).AddTicks(2818),
                            FirstName = "Bình Quân",
                            LastName = "Hồ",
                            StudentCode = 152890,
                            UserId = 24
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1970, 9, 27, 2, 2, 1, 484, DateTimeKind.Unspecified).AddTicks(7330),
                            FirstName = "Thư Sương",
                            LastName = "Trịnh",
                            StudentCode = 224651,
                            UserId = 40
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1994, 9, 22, 15, 54, 22, 198, DateTimeKind.Unspecified).AddTicks(1842),
                            FirstName = "Mạnh Dũng",
                            LastName = "Tô",
                            StudentCode = 257376,
                            UserId = 25
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1960, 3, 27, 17, 21, 15, 764, DateTimeKind.Unspecified).AddTicks(4364),
                            FirstName = "Ðình Quảng",
                            LastName = "Lê",
                            StudentCode = 120166,
                            UserId = 39
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1992, 9, 12, 19, 39, 3, 625, DateTimeKind.Unspecified).AddTicks(867),
                            FirstName = "Tâm Ðoan",
                            LastName = "Tăng",
                            StudentCode = 161860,
                            UserId = 26
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1991, 6, 29, 21, 15, 26, 506, DateTimeKind.Unspecified).AddTicks(4968),
                            FirstName = "Nhật Linh",
                            LastName = "Dương",
                            StudentCode = 299070,
                            UserId = 12
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1980, 4, 3, 4, 17, 37, 688, DateTimeKind.Unspecified).AddTicks(7247),
                            FirstName = "Gia Thịnh",
                            LastName = "Đinh",
                            StudentCode = 170830,
                            UserId = 28
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1972, 9, 30, 1, 9, 37, 248, DateTimeKind.Unspecified).AddTicks(5574),
                            FirstName = "Yến Nhi",
                            LastName = "Hà",
                            StudentCode = 108039,
                            UserId = 14
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1988, 8, 25, 3, 8, 26, 478, DateTimeKind.Unspecified).AddTicks(8916),
                            FirstName = "Thanh Ngân",
                            LastName = "Lý",
                            StudentCode = 275316,
                            UserId = 29
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2004, 1, 2, 5, 3, 47, 990, DateTimeKind.Unspecified).AddTicks(6179),
                            FirstName = "Hữu Ðạt",
                            LastName = "Bùi",
                            StudentCode = 212525,
                            UserId = 15
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1986, 8, 16, 6, 53, 7, 905, DateTimeKind.Unspecified).AddTicks(7940),
                            FirstName = "Bảo Thạch",
                            LastName = "Đào",
                            StudentCode = 284286,
                            UserId = 31
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1985, 4, 4, 8, 57, 58, 732, DateTimeKind.Unspecified).AddTicks(6784),
                            FirstName = "Thúy Minh",
                            LastName = "Phùng",
                            StudentCode = 117009,
                            UserId = 16
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1984, 8, 6, 10, 37, 49, 332, DateTimeKind.Unspecified).AddTicks(6964),
                            FirstName = "Mỹ Hiệp",
                            LastName = "Nguyễn",
                            StudentCode = 188771,
                            UserId = 32
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1966, 7, 6, 12, 52, 9, 474, DateTimeKind.Unspecified).AddTicks(7390),
                            FirstName = "Ðình Hợp",
                            LastName = "Phan",
                            StudentCode = 221495,
                            UserId = 17
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1982, 7, 28, 14, 22, 30, 759, DateTimeKind.Unspecified).AddTicks(5989),
                            FirstName = "Tuệ Mẫn",
                            LastName = "Hồ",
                            StudentCode = 293256,
                            UserId = 33
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1997, 10, 7, 16, 46, 20, 216, DateTimeKind.Unspecified).AddTicks(7995),
                            FirstName = "Như Ngọc",
                            LastName = "Vương",
                            StudentCode = 125979,
                            UserId = 18
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1980, 7, 18, 18, 7, 12, 186, DateTimeKind.Unspecified).AddTicks(5013),
                            FirstName = "Gia Huy",
                            LastName = "Tô",
                            StudentCode = 179800,
                            UserId = 30
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1954, 7, 14, 7, 59, 32, 899, DateTimeKind.Unspecified).AddTicks(9526),
                            FirstName = "Việt Hoàng",
                            LastName = "Trần",
                            StudentCode = 239435,
                            UserId = 21
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1978, 7, 9, 21, 51, 53, 613, DateTimeKind.Unspecified).AddTicks(4037),
                            FirstName = "Thanh Hạnh",
                            LastName = "Tăng",
                            StudentCode = 102225,
                            UserId = 35
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2002, 7, 5, 11, 44, 14, 326, DateTimeKind.Unspecified).AddTicks(8550),
                            FirstName = "Hướng Dương",
                            LastName = "Ngô",
                            StudentCode = 203554,
                            UserId = 13
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1976, 6, 30, 1, 36, 35, 40, DateTimeKind.Unspecified).AddTicks(3063),
                            FirstName = "Bảo Hiển",
                            LastName = "Đinh",
                            StudentCode = 266346,
                            UserId = 27
                        });
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.UniversityUnit.UniversityUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LastModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("UniversityUnitId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("LastModifiedByUserId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UniversityUnits", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bàn độc việc nước nha cái ừ một tám.",
                            Name = "Trần and Sons",
                            UserId = 10
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bảy bạn khoảng.",
                            Name = "Bùi, Lý and Hà",
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khâu viết một nước.",
                            Name = "Trịnh Group",
                            UserId = 4
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Không áo khoan.",
                            Name = "Hà, Dương and Bùi",
                            UserId = 6
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Thuyền chìm đá nước anh thì đồng làm.",
                            Name = "Vũ - Phan",
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bạn anh khoan giày lầu dép đá giết em viết.",
                            Name = "Đào, Hà and Phùng",
                            UserId = 8
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Nghỉ tủ á.",
                            Name = "Mai - Vương",
                            UserId = 9
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chỉ lầu khoan ruộng mượn vẽ dép là con.",
                            Name = "Lý, Đặng and Phan",
                            UserId = 5
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ba ác xuồng ngọt đâu anh.",
                            Name = "Đỗ - Nguyễn",
                            UserId = 7
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sáu nhà thuyền mướn ruộng bàn bốn đỏ.",
                            Name = "Đinh, Đinh and Trịnh",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AvatarUrl")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id")
                        .HasName("UserId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=419",
                            ConcurrencyStamp = "408286d0-e497-95a3-cfff-46699c73c4a1",
                            Email = "149733@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "149733@GM.UIT.EDU.VN",
                            NormalizedUserName = "149733",
                            PasswordHash = "AQAAAAIAAYagAAAAEDncxb0AWsuxq6tyGxBI/2pdWxmxwV5gfonCk4a9jJLEWCxN/1YDcmZQXWajWyk3rw==",
                            PhoneNumber = "029 8805 5296",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "133410cd-4e5b-6fa3-84a5-4adf7a0ea09c",
                            TwoFactorEnabled = false,
                            UserName = "149733"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=542",
                            ConcurrencyStamp = "2495c693-e3b9-7c6f-3898-b7dd200bc116",
                            Email = "254219@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "254219@GM.UIT.EDU.VN",
                            NormalizedUserName = "254219",
                            PasswordHash = "AQAAAAIAAYagAAAAELgdmxBHPVnkzqEVAOmNpj60qvexkfS1hGi+W7ObgGg6W3o9FKfzRgD4GNMqpx1Muw==",
                            PhoneNumber = "023 8676 0022",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "f02eec1e-16bd-f246-a9e6-936c626933ef",
                            TwoFactorEnabled = false,
                            UserName = "254219"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=665",
                            ConcurrencyStamp = "07a90556-e3db-633a-a032-2750a4a3bd8c",
                            Email = "158704@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "158704@GM.UIT.EDU.VN",
                            NormalizedUserName = "158704",
                            PasswordHash = "AQAAAAIAAYagAAAAEOu57UPTWbR9mPkH5IEOZhjSiWoJwzFhLkWZoYK0zJv5wbu0MUsuGrfuYd05R8HeLw==",
                            PhoneNumber = "026 8548 6858",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "cc27c86e-de1f-75ea-cf27-ddf84ac5c741",
                            TwoFactorEnabled = false,
                            UserName = "158704"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=787",
                            ConcurrencyStamp = "ebbc4519-e2fd-4a06-08cc-98c4273aba01",
                            Email = "263189@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "263189@GM.UIT.EDU.VN",
                            NormalizedUserName = "263189",
                            PasswordHash = "AQAAAAIAAYagAAAAEH+W56anKdK+4Hxv4x0iZyEQ08quOuCNcw6sKuvuJkIT6cJZIiRpqjIBJsZav2FeoQ==",
                            PhoneNumber = "020 9310 2584",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "a820a4bf-a681-f98d-f568-278432205a93",
                            TwoFactorEnabled = false,
                            UserName = "263189"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=910",
                            ConcurrencyStamp = "cecf85dd-e21e-31d1-7165-0938abd2b776",
                            Email = "167674@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "167674@GM.UIT.EDU.VN",
                            NormalizedUserName = "167674",
                            PasswordHash = "AQAAAAIAAYagAAAAEM+zy5NUfAUX5pbj08fhS38Cn/V0ocJE+YnqA44mL10yKzNgwdj8fSiKTw8qPrhv8A==",
                            PhoneNumber = "023 9171 7319",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "841a8010-6ee4-7c30-1aa9-70101a7cede6",
                            TwoFactorEnabled = false,
                            UserName = "167674"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=1033",
                            ConcurrencyStamp = "b1e2c4a0-e140-189d-d9ff-7aab2e6ab3ec",
                            Email = "272159@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "272159@GM.UIT.EDU.VN",
                            NormalizedUserName = "272159",
                            PasswordHash = "AQAAAAIAAYagAAAAEInsgWM1k68+jYW7OZ/p+FpEazPG7jGiljyesBHuIEkJMPdHKKMEsXNWsd+pHhRwkQ==",
                            PhoneNumber = "027 0043 3135",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "60135c60-3746-ffd4-40ea-ba9d01d78138",
                            TwoFactorEnabled = false,
                            UserName = "272159"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=71",
                            ConcurrencyStamp = "95f60463-e162-ff68-4199-ea1fb201b061",
                            Email = "176644@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "176644@GM.UIT.EDU.VN",
                            NormalizedUserName = "176644",
                            PasswordHash = "AQAAAAIAAYagAAAAED5kv4PysuQEc+0I18iEhUgpO5AEYjU67rit8WF6CDtoaOJgX/bJm0jMoktjSY+qLw==",
                            PhoneNumber = "020 0815 9861",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "3c0d38b1-ffa8-8277-662a-0429e932148b",
                            TwoFactorEnabled = false,
                            UserName = "176644"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=193",
                            ConcurrencyStamp = "78094427-e084-e634-aa33-5b933599add7",
                            Email = "281130@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "281130@GM.UIT.EDU.VN",
                            NormalizedUserName = "281130",
                            PasswordHash = "AQAAAAIAAYagAAAAEJhomxwjHrTgOWnPW3Ywqv7hV4oXn8nRzx1KEURwje4OCYhkZrMLv6Y5PXxlh1zQRg==",
                            PhoneNumber = "024 1687 4696",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "18061401-c70a-051a-8b6b-4db5d18ea7dd",
                            TwoFactorEnabled = false,
                            UserName = "281130"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=316",
                            ConcurrencyStamp = "5c1c84ea-dfa6-ceff-12cc-cc06b931a94c",
                            Email = "185614@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "185614@GM.UIT.EDU.VN",
                            NormalizedUserName = "185614",
                            PasswordHash = "AQAAAAIAAYagAAAAEHd3W8+pG598ZsjojkMCNey7psxJuu4oGTP9s71ILL69XS0UpJRBeY6fTWUokEsUUQ==",
                            PhoneNumber = "027 1458 0422",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "f5fff052-8f6d-88be-b1ac-9742b9e93a2f",
                            TwoFactorEnabled = false,
                            UserName = "185614"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=439",
                            ConcurrencyStamp = "3f2fc3ad-dfc8-b5cb-7a66-3d7a3cc8a6c2",
                            Email = "290100@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "290100@GM.UIT.EDU.VN",
                            NormalizedUserName = "290100",
                            PasswordHash = "AQAAAAIAAYagAAAAELxCrd6zljrUfRpR9n/RUQApNRhwvlBzn4G/vdT1p21zhsL9arTgD1M7HWVO4foILQ==",
                            PhoneNumber = "021 1310 6148",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "d1f9cca3-57cf-0b61-d6ed-e0cea144ce82",
                            TwoFactorEnabled = false,
                            UserName = "290100"
                        },
                        new
                        {
                            Id = 11,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=562",
                            ConcurrencyStamp = "23420371-deea-9c96-e300-aeeec060a237",
                            Email = "194584@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "194584@GM.UIT.EDU.VN",
                            NormalizedUserName = "194584",
                            PasswordHash = "AQAAAAIAAYagAAAAEPk9jpCE5Cl6e3c5jcckLEhZ/wiKxsypIxe6/8BtyWESDIt2mT7r1NkwZrTxisnHAg==",
                            PhoneNumber = "024 2182 2974",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "adf2a8f3-1f31-8e04-fc2e-2a5a88a061d4",
                            TwoFactorEnabled = false,
                            UserName = "194584"
                        },
                        new
                        {
                            Id = 12,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=685",
                            ConcurrencyStamp = "06564334-de0c-8362-4b9a-1e6143f89fac",
                            Email = "299070@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "299070@GM.UIT.EDU.VN",
                            NormalizedUserName = "299070",
                            PasswordHash = "AQAAAAIAAYagAAAAEJbwhlBdZVcvyMIPf3i1aDX8U8Z/fk36zm2GGpry1ww10FSmLEV0FlC7Tn2sFztndg==",
                            PhoneNumber = "028 2953 7709",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "89eb8544-e893-11a8-226f-74e670fbf427",
                            TwoFactorEnabled = false,
                            UserName = "299070"
                        },
                        new
                        {
                            Id = 13,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=807",
                            ConcurrencyStamp = "ea6982f7-dd2d-6a2d-b433-8fd5c7909c22",
                            Email = "203554@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "203554@GM.UIT.EDU.VN",
                            NormalizedUserName = "203554",
                            PasswordHash = "AQAAAAIAAYagAAAAEKsHkwr4XcErWbfmiKZXd+2xOdAP2BxjSZ2mOsZ59zaJfSfr0yCDfHpMAPCbJ8q6+w==",
                            PhoneNumber = "021 3725 3435",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "65e56195-b0f6-944b-47b0-bd7358568779",
                            TwoFactorEnabled = false,
                            UserName = "203554"
                        },
                        new
                        {
                            Id = 14,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=930",
                            ConcurrencyStamp = "cd7cc2ba-dd4f-51f9-1ccd-00494a279897",
                            Email = "108039@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "108039@GM.UIT.EDU.VN",
                            NormalizedUserName = "108039",
                            PasswordHash = "AQAAAAIAAYagAAAAEETJDuM7j6lQumWHhB/8l/PfOextvUKCAmn/j0i2ir6bvQACtR0tN2m6O2/3aKUsFw==",
                            PhoneNumber = "025 3697 9261",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "41de3de5-7858-18ee-6df0-07ff40b21bcb",
                            TwoFactorEnabled = false,
                            UserName = "108039"
                        },
                        new
                        {
                            Id = 15,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=1053",
                            ConcurrencyStamp = "b08f027e-dc71-38c4-8467-71bccebf950d",
                            Email = "212525@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "212525@GM.UIT.EDU.VN",
                            NormalizedUserName = "212525",
                            PasswordHash = "AQAAAAIAAYagAAAAEAWKOQaN3vBo2PHlvrz3zwCWNCIW2WQVyGouo8z6HmopZvLO/M3dl/imlvLYYMEIZQ==",
                            PhoneNumber = "028 4469 4087",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "1dd81936-40ba-9b92-9331-508b280dae1e",
                            TwoFactorEnabled = false,
                            UserName = "212525"
                        },
                        new
                        {
                            Id = 16,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=91",
                            ConcurrencyStamp = "94a24141-dc93-1f90-ed01-e13051579282",
                            Email = "117009@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "117009@GM.UIT.EDU.VN",
                            NormalizedUserName = "117009",
                            PasswordHash = "AQAAAAIAAYagAAAAEJbCpRtcB1zAB5YQ+04N9hkFjY7z4Mm1QSI/5eRZYypQt8kXuX0sAGHFqB1VXqjEFw==",
                            PhoneNumber = "022 4220 0712",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "f9d1f586-081c-1e35-b872-9a170f694170",
                            TwoFactorEnabled = false,
                            UserName = "117009"
                        },
                        new
                        {
                            Id = 17,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=214",
                            ConcurrencyStamp = "77b68104-dbb5-075b-559a-52a4d5ee8ef8",
                            Email = "221495@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "221495@GM.UIT.EDU.VN",
                            NormalizedUserName = "221495",
                            PasswordHash = "AQAAAAIAAYagAAAAEJDbnZoRE7usrh8xPWsi+8VA824XARMz6Xs70V2SHc8pwhpjZ/5TKGuFoKCRaR5h/A==",
                            PhoneNumber = "025 4192 6548",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "d6cad1d7-d07f-a1d8-deb3-e4a4f7c4d4c3",
                            TwoFactorEnabled = false,
                            UserName = "221495"
                        },
                        new
                        {
                            Id = 18,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=336",
                            ConcurrencyStamp = "5bc9c1c8-dad7-ee27-bd34-c31858868b6d",
                            Email = "125979@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "125979@GM.UIT.EDU.VN",
                            NormalizedUserName = "125979",
                            PasswordHash = "AQAAAAIAAYagAAAAECrrQJ6sqW+jBRjveNbpccaOeQc93DpuaILtX59MgsUmbAwNNRa9lIN7+a6u3ezlXw==",
                            PhoneNumber = "029 5964 1374",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "b2c4ad28-99e1-247c-04f4-2d30df1f6815",
                            TwoFactorEnabled = false,
                            UserName = "125979"
                        },
                        new
                        {
                            Id = 19,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=459",
                            ConcurrencyStamp = "3edc018b-daf9-d5f2-26ce-348bdc1e87e2",
                            Email = "230465@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "230465@GM.UIT.EDU.VN",
                            NormalizedUserName = "230465",
                            PasswordHash = "AQAAAAIAAYagAAAAEIQO9Z1S5WhIVyRxLxerJpdZX0E/L0RlmxA9GBGfLHXJtq0yr5bq+pjC1cxD1eWwog==",
                            PhoneNumber = "022 5735 7099",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "8ebd8978-6143-a71f-2935-77bcc77bfb67",
                            TwoFactorEnabled = false,
                            UserName = "230465"
                        },
                        new
                        {
                            Id = 20,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=582",
                            ConcurrencyStamp = "22ef404e-d91b-bcbe-8e68-a5ff5fb58458",
                            Email = "134950@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "134950@GM.UIT.EDU.VN",
                            NormalizedUserName = "134950",
                            PasswordHash = "AQAAAAIAAYagAAAAEDnrY7EIzIUVdMdwnr24F9+Li0HSrDX/QX/Btf9ymJf4AhOT1EQUm3Hs1kzc65KiGw==",
                            PhoneNumber = "026 6507 3825",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "6ab765c9-29a5-2ac3-4f76-c149afd68eba",
                            TwoFactorEnabled = false,
                            UserName = "134950"
                        },
                        new
                        {
                            Id = 21,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=1062",
                            ConcurrencyStamp = "05038011-d93c-a389-f701-1573e34d81cd",
                            Email = "239435@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "239435@GM.UIT.EDU.VN",
                            NormalizedUserName = "239435",
                            PasswordHash = "AQAAAAIAAYagAAAAEOOp01D9U8axTT5j06/9ona6d0yvI0BiLnCSBmjWjCxjJYBbGz0Dj2nbuD3oAMSmiw==",
                            PhoneNumber = "0296 4698 6516",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "46b0411a-f108-ad66-75b6-0ad59631210c",
                            TwoFactorEnabled = false,
                            UserName = "239435"
                        },
                        new
                        {
                            Id = 22,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=549",
                            ConcurrencyStamp = "e916c0d5-d85e-8a55-5f9b-86e666e57d43",
                            Email = "143920@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "143920@GM.UIT.EDU.VN",
                            NormalizedUserName = "143920",
                            PasswordHash = "AQAAAAIAAYagAAAAEJFTw4pVnNtDNw2MMwTSWjz86QIsV4KVXgF85eUf0GN/4ascSzvWsZqTaIZCnd29pA==",
                            PhoneNumber = "0237 2314 3877",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "22a91d6a-b96a-3009-9af7-54617e8db55f",
                            TwoFactorEnabled = false,
                            UserName = "143920"
                        },
                        new
                        {
                            Id = 23,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=36",
                            ConcurrencyStamp = "cc29ff98-d880-7120-c735-f75aea7d7ab8",
                            Email = "248405@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "248405@GM.UIT.EDU.VN",
                            NormalizedUserName = "248405",
                            PasswordHash = "AQAAAAIAAYagAAAAENHs0uEOsPylZS3OtOpf52Wp6Hy8UYR3VXRoOaUKlFKyNjmbfYWjrzYLjWIerxUWfA==",
                            PhoneNumber = "0267 0020 1128",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "fea3f9bb-81cc-b3ad-c038-9ded66e848b1",
                            TwoFactorEnabled = false,
                            UserName = "248405"
                        },
                        new
                        {
                            Id = 24,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=608",
                            ConcurrencyStamp = "b03c3f5b-d7a2-58ec-30ce-68ce6d14772d",
                            Email = "152890@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "152890@GM.UIT.EDU.VN",
                            NormalizedUserName = "152890",
                            PasswordHash = "AQAAAAIAAYagAAAAECR60tqtVK7u0fUX7tbmOap1F/X50+HperpZtcNt8DOEaPBRWXXzxXySLJeDQPg1IQ==",
                            PhoneNumber = "0208 9745 9389",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "db9cd50b-4a2e-3750-e579-e77a4e44db03",
                            TwoFactorEnabled = false,
                            UserName = "152890"
                        },
                        new
                        {
                            Id = 25,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=95",
                            ConcurrencyStamp = "934f7f1f-d7c4-40b7-9868-d841f1ac73a3",
                            Email = "257376@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "257376@GM.UIT.EDU.VN",
                            NormalizedUserName = "257376",
                            PasswordHash = "AQAAAAIAAYagAAAAEKsWdgZURW51suzp0xFA2ku88fNG9V3EjyoNZOjrP7+7I1aEwkjg4Y812X3o9O7MGQ==",
                            PhoneNumber = "0238 7461 6641",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "b795b15c-1290-baf3-0bba-3106369f6f56",
                            TwoFactorEnabled = false,
                            UserName = "257376"
                        },
                        new
                        {
                            Id = 26,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=667",
                            ConcurrencyStamp = "7663bee2-d6e6-2783-0002-49b574447018",
                            Email = "161860@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "161860@GM.UIT.EDU.VN",
                            NormalizedUserName = "161860",
                            PasswordHash = "AQAAAAIAAYagAAAAEFOR+i3IWQuG/omYpMtTYccWN8AN38BjdXcncdRz0Izp3Vm9nrqcqztgPFg2/VXKZA==",
                            PhoneNumber = "0278 5077 4992",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "938f8dad-daf3-3d97-31fb-7a921efa02a8",
                            TwoFactorEnabled = false,
                            UserName = "161860"
                        },
                        new
                        {
                            Id = 27,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=154",
                            ConcurrencyStamp = "5a76fea5-d608-0e4e-699c-ba29f8db6c8e",
                            Email = "266346@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "266346@GM.UIT.EDU.VN",
                            NormalizedUserName = "266346",
                            PasswordHash = "AQAAAAIAAYagAAAAEHe3PZ6qEQ06SeeMoAxz6/jyxBtH/5bzAWMXpL8KbBjlSf2R6LLbFVQoj49CHsvKSg==",
                            PhoneNumber = "0209 3792 2253",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "6f8869fd-a255-c03a-563c-c41f055695fb",
                            TwoFactorEnabled = false,
                            UserName = "266346"
                        },
                        new
                        {
                            Id = 28,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=726",
                            ConcurrencyStamp = "3d893e69-d52a-f51a-d135-2b9c7c736903",
                            Email = "170830@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "170830@GM.UIT.EDU.VN",
                            NormalizedUserName = "170830",
                            PasswordHash = "AQAAAAIAAYagAAAAEElYlDLipe88C342ZWRQnIULtIl8Et2fDqkCTmySlPQnsKwgKEU4MVm6/Op9uKyAKg==",
                            PhoneNumber = "0249 2418 0414",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "4b82454e-6ab7-43dd-7c7d-0eabedb1284d",
                            TwoFactorEnabled = false,
                            UserName = "170830"
                        },
                        new
                        {
                            Id = 29,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=213",
                            ConcurrencyStamp = "219c7e2c-d44b-dce5-39cf-9c10ff0b6679",
                            Email = "275316@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "275316@GM.UIT.EDU.VN",
                            NormalizedUserName = "275316",
                            PasswordHash = "AQAAAAIAAYagAAAAEAjXh49jhBKj1OjgILTGGgFVfi/vFZQk7Zk5gqr1aqOW08b6sy+c5BdHeXUXLzcXeQ==",
                            PhoneNumber = "0270 0134 7775",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "277b219e-3219-c681-a2bd-5737d50cbc9f",
                            TwoFactorEnabled = false,
                            UserName = "275316"
                        },
                        new
                        {
                            Id = 30,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=785",
                            ConcurrencyStamp = "04afbdef-d46d-c3b1-a269-0c8483a262ee",
                            Email = "179800@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "179800@GM.UIT.EDU.VN",
                            NormalizedUserName = "179800",
                            PasswordHash = "AQAAAAIAAYagAAAAECwWZKer6UNJh9W90mPCfSsJdxT4pItBkB2+5UASj/Ew/7Wdm/jCgSNEtJ679snk9w==",
                            PhoneNumber = "0210 8849 5026",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "0374fdef-fb7c-4924-c7fe-a1c3bd684ff2",
                            TwoFactorEnabled = false,
                            UserName = "179800"
                        },
                        new
                        {
                            Id = 31,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=272",
                            ConcurrencyStamp = "e8c3fdb2-d38f-aa7c-0a03-7df7063a5f63",
                            Email = "284286@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "284286@GM.UIT.EDU.VN",
                            NormalizedUserName = "284286",
                            PasswordHash = "AQAAAAIAAYagAAAAECxkfv2ScpuNz5x/K0hxkLXs3uMFHvR7spiUYTmVd4UjDDrvyHzljHQ5xbvhEx/BEQ==",
                            PhoneNumber = "0241 7565 3387",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "df6ed940-c3de-ccc7-ed3f-ea50a5c3e244",
                            TwoFactorEnabled = false,
                            UserName = "284286"
                        },
                        new
                        {
                            Id = 32,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=844",
                            ConcurrencyStamp = "cbd63d76-d3b1-9148-739c-ee6b8ad25cd9",
                            Email = "188771@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "188771@GM.UIT.EDU.VN",
                            NormalizedUserName = "188771",
                            PasswordHash = "AQAAAAIAAYagAAAAEC4vVdlgdXcOXRDEYhIrQjYybtJyrf/LCUP8D7idK4IdBpzqX5a9TQiKXWr48uaaOw==",
                            PhoneNumber = "0281 5181 0648",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "bc67b590-8b40-4f6b-1380-34dc8c1f7597",
                            TwoFactorEnabled = false,
                            UserName = "188771"
                        },
                        new
                        {
                            Id = 33,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=331",
                            ConcurrencyStamp = "afe97c39-d2d3-7913-db36-5fdf0d6a584e",
                            Email = "293256@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "293256@GM.UIT.EDU.VN",
                            NormalizedUserName = "293256",
                            PasswordHash = "AQAAAAIAAYagAAAAEF4Rc1g9f9z52KxY93J3ZitqNgkZYEEgJSe3ZROxAbjk1QHBuIzhN/wq6c47O4sPIQ==",
                            PhoneNumber = "0211 3896 8890",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "986191e1-53a2-d20e-38c1-7e68747a09e9",
                            TwoFactorEnabled = false,
                            UserName = "293256"
                        },
                        new
                        {
                            Id = 34,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=903",
                            ConcurrencyStamp = "92fcbcfc-d2f5-60df-43d0-d053910155c4",
                            Email = "197741@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "197741@GM.UIT.EDU.VN",
                            NormalizedUserName = "197741",
                            PasswordHash = "AQAAAAIAAYagAAAAEGIMcO07q14JitJrJciRs/iCNmGYDcAPOHqZfVufHj6XzTIRG8zy0+FPGRYmroXQZg==",
                            PhoneNumber = "0252 1512 6151",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "745a6d32-1b05-56b1-5e02-c7f45cd59c3b",
                            TwoFactorEnabled = false,
                            UserName = "197741"
                        },
                        new
                        {
                            Id = 35,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=390",
                            ConcurrencyStamp = "7610fcc0-d117-47ab-ac6a-40c614995139",
                            Email = "102225@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "102225@GM.UIT.EDU.VN",
                            NormalizedUserName = "102225",
                            PasswordHash = "AQAAAAIAAYagAAAAEKA5fvXaKyMI3uUpxENT3iTcpDPWdO7M7V5rARWsCaT3oEh7Zxrv6PAqYthHAu4q7w==",
                            PhoneNumber = "0282 0238 3412",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "50534982-e367-d955-8443-118144312f8e",
                            TwoFactorEnabled = false,
                            UserName = "102225"
                        },
                        new
                        {
                            Id = 36,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=963",
                            ConcurrencyStamp = "59233b83-d139-2e76-1403-b13a98314eae",
                            Email = "206711@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "206711@GM.UIT.EDU.VN",
                            NormalizedUserName = "206711",
                            PasswordHash = "AQAAAAIAAYagAAAAEIv/xQRxHb0xijv6tJJ2MgXbhKp1jADek1ixe8M7NJbkBUXBfimoMMZEahsmnfbseg==",
                            PhoneNumber = "0223 8953 1773",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "2c4d25d3-acc9-5cf8-a983-5a0d2c8cc2e0",
                            TwoFactorEnabled = false,
                            UserName = "206711"
                        },
                        new
                        {
                            Id = 37,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=450",
                            ConcurrencyStamp = "3c367b46-d05a-1542-7c9d-22ae1bc84b24",
                            Email = "111196@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "111196@GM.UIT.EDU.VN",
                            NormalizedUserName = "111196",
                            PasswordHash = "AQAAAAIAAYagAAAAEJfv7FYr++9iMYHImvNd64K4OOlizrjaCLTrGqQ9T4JKe5Va0FXcE6YtWuD5C4Ys6w==",
                            PhoneNumber = "0253 6569 9924",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "08460123-742b-df9b-cfc4-a49913e75633",
                            TwoFactorEnabled = false,
                            UserName = "111196"
                        },
                        new
                        {
                            Id = 38,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=1022",
                            ConcurrencyStamp = "2049bb09-cf7c-fc0d-e537-93219f604799",
                            Email = "215681@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "215681@GM.UIT.EDU.VN",
                            NormalizedUserName = "215681",
                            PasswordHash = "AQAAAAIAAYagAAAAEIdprF8+ikgYZM7NTjE7lr/HyO+KWxOkuel2T+YSBvqA2rDPucFme7hjRH6juK/94A==",
                            PhoneNumber = "0294 5285 6285",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "e440dd74-3c8e-623f-f405-ee26fb43e985",
                            TwoFactorEnabled = false,
                            UserName = "215681"
                        },
                        new
                        {
                            Id = 39,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=509",
                            ConcurrencyStamp = "035cfbcd-cf9e-e3d9-4dd1-039522f8440f",
                            Email = "120166@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "120166@GM.UIT.EDU.VN",
                            NormalizedUserName = "120166",
                            PasswordHash = "AQAAAAIAAYagAAAAEA9EYfb7CUB2PmscJHE3QBbJkybxikmpk/XzBudwRkpGPbCQ56twwHRP6j/HtWGWfA==",
                            PhoneNumber = "0224 3901 4546",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "c039b9c5-04f0-e5e2-1a46-37b2e39e7cd7",
                            TwoFactorEnabled = false,
                            UserName = "120166"
                        },
                        new
                        {
                            Id = 40,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=1081",
                            ConcurrencyStamp = "e7703a90-cec0-caa4-b66a-7409a68f4184",
                            Email = "224651@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "224651@GM.UIT.EDU.VN",
                            NormalizedUserName = "224651",
                            PasswordHash = "AQAAAAIAAYagAAAAED2bUI4N/sndTtI8jMSpelk9fFY1iPiEQGTNtbtwyiDLr8Oc5Luo5k8bdHtAkNG2vA==",
                            PhoneNumber = "0264 1616 2808",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "9d329515-cc52-6886-4087-813ecbf90f2a",
                            TwoFactorEnabled = false,
                            UserName = "224651"
                        });
                });

            modelBuilder.Entity("UITEventAPI.Application.Infrastructure.Identity.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RefreshTokenId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("ExpiryDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UITEventAPI.Application.Domain.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Events.Event", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "LastModifiedByUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UITEventAPI.Application.Domain.UniversityUnit.UniversityUnit", "UniversityUnit")
                        .WithMany("HostedEvents")
                        .HasForeignKey("UniversityUnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("LastModifiedByUser");

                    b.Navigation("UniversityUnit");
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Events.EventImage", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Events.Event", "Event")
                        .WithMany("Images")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Events.EventRegistration", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UITEventAPI.Application.Domain.Events.Event", "Event")
                        .WithMany("Registrations")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "LastModifiedByUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UITEventAPI.Application.Domain.Students.Student", "Student")
                        .WithMany("RegisteredEvents")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("Event");

                    b.Navigation("LastModifiedByUser");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Students.Student", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "LastModifiedByUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "User")
                        .WithOne()
                        .HasForeignKey("UITEventAPI.Application.Domain.Students.Student", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("LastModifiedByUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.UniversityUnit.UniversityUnit", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "LastModifiedByUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "User")
                        .WithOne()
                        .HasForeignKey("UITEventAPI.Application.Domain.UniversityUnit.UniversityUnit", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("LastModifiedByUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UITEventAPI.Application.Infrastructure.Identity.RefreshToken", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("User");
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Events.Event", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Registrations");
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Students.Student", b =>
                {
                    b.Navigation("RegisteredEvents");
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.UniversityUnit.UniversityUnit", b =>
                {
                    b.Navigation("HostedEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
