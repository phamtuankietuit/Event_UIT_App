// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UITEventAPI.Application.Infrastructure.Data;

#nullable disable

namespace UITEventAPI.Application.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240621054827_UpdateSeedData1")]
    partial class UpdateSeedData1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 11,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 12,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 13,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 14,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 15,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 16,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 17,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 18,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 19,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 20,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 21,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 22,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 23,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 24,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 25,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 26,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 27,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 28,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 29,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 30,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 31,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 32,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 33,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 34,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 35,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 36,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 37,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 38,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 39,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 40,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Events.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset>("DeletedWhen")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FormUrl")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxAttendees")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(400)");

                    b.Property<int>("TrainingPoint")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UniversityUnitId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("EventId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("LastModifiedByUserId");

                    b.HasIndex("UniversityUnitId");

                    b.ToTable("Events", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedWhen = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Nước nha cái ừ một. Quê quần bàn năm thương. Nón nước đâu đập nhà bạn phá tôi. Trời leo khâu dép nón.",
                            EndDate = new DateTime(2024, 7, 11, 8, 6, 24, 788, DateTimeKind.Local).AddTicks(6519),
                            FormUrl = "http://thiênthêu.info",
                            IsDeleted = false,
                            IsPublished = true,
                            Location = "296 Đông Nghi Mountain, Hậu Giang, Palestine",
                            MaxAttendees = 48,
                            StartDate = new DateTime(2024, 6, 11, 13, 57, 21, 946, DateTimeKind.Local).AddTicks(6252),
                            Title = "Thế tàu chết bàn.",
                            TrainingPoint = 5,
                            Type = "Workshop",
                            UniversityUnitId = 7
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedWhen = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Đã đỏ nhà. Nón mua lỗi đâu hết. Chín lỗi núi tui bàn. Nha áo chìm đồng nha ờ thôi gió quần được. Đâu á ba ba xanh ruộng khâu đang. Thôi lầu cái thương gì núi.",
                            EndDate = new DateTime(2023, 4, 26, 6, 53, 34, 453, DateTimeKind.Local).AddTicks(6923),
                            FormUrl = "https://tùngquang.info",
                            IsDeleted = false,
                            IsPublished = false,
                            Location = "8350 Phương Loan Ports, Trà Vinh, Vatican",
                            MaxAttendees = 23,
                            StartDate = new DateTime(2023, 4, 13, 7, 35, 14, 731, DateTimeKind.Local).AddTicks(592),
                            Title = "Xe phá quê thế bảy bạn khoảng mượn đang.",
                            TrainingPoint = 5,
                            Type = "Webinar",
                            UniversityUnitId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedWhen = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Thôi nhà xanh tui áo ờ hết bơi thì máy. Bè mướn em xanh hết hương khoan đỏ chỉ. Xanh sáu một xanh biết áo. Tím ác máy ghế tui chỉ mây thương lầu độc.",
                            EndDate = new DateTime(2023, 10, 19, 14, 15, 59, 496, DateTimeKind.Local).AddTicks(2641),
                            FormUrl = "https://sơnquân.com",
                            IsDeleted = false,
                            IsPublished = false,
                            Location = "0771 Nguyễn Squares, Cao Bằng, Bénin",
                            MaxAttendees = 44,
                            StartDate = new DateTime(2023, 10, 3, 23, 8, 12, 880, DateTimeKind.Local).AddTicks(8256),
                            Title = "Áo hàng tô khâu viết.",
                            TrainingPoint = 4,
                            Type = "Workshop",
                            UniversityUnitId = 7
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedWhen = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Nhà chỉ hết vàng chỉ tàu hết. Thôi trăng ghế độc đâu nha làm phá bàn. Ghế đỏ bơi đâu á.",
                            EndDate = new DateTime(2022, 8, 17, 17, 51, 58, 385, DateTimeKind.Local).AddTicks(6372),
                            FormUrl = "https://phươngtrang.com.vn",
                            IsDeleted = false,
                            IsPublished = false,
                            Location = "47036 Ðắc Trọng Stream, Kon Tum, Samoa",
                            MaxAttendees = 46,
                            StartDate = new DateTime(2022, 8, 7, 2, 5, 7, 184, DateTimeKind.Local).AddTicks(9264),
                            Title = "Hương may đạp đang không áo khoan tàu ghét.",
                            TrainingPoint = 1,
                            Type = "Other",
                            UniversityUnitId = 9
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedWhen = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Anh thì đồng làm gì gì bè đá ruộng đâu. Một bè gì mây hết vẽ được mượn hết. Thế ờ chết bảy thế cửa đồng phá tôi tô.",
                            EndDate = new DateTime(2022, 11, 27, 14, 55, 34, 76, DateTimeKind.Local).AddTicks(9997),
                            FormUrl = "http://ngọcquyên.info",
                            IsDeleted = false,
                            IsPublished = false,
                            Location = "056 Dương Extensions, Yên Bái, Venezuela",
                            MaxAttendees = 55,
                            StartDate = new DateTime(2022, 11, 17, 7, 31, 39, 702, DateTimeKind.Local).AddTicks(8456),
                            Title = "Năm ba thích thuyền chìm.",
                            TrainingPoint = 5,
                            Type = "Seminar",
                            UniversityUnitId = 3
                        });
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Events.EventImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id")
                        .HasName("EventImageId");

                    b.HasIndex("EventId");

                    b.ToTable("EventImages", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EventId = 2,
                            ImageUrl = "https://picsum.photos/640/480/?image=120"
                        },
                        new
                        {
                            Id = 2,
                            EventId = 4,
                            ImageUrl = "https://picsum.photos/640/480/?image=438"
                        },
                        new
                        {
                            Id = 3,
                            EventId = 2,
                            ImageUrl = "https://picsum.photos/640/480/?image=756"
                        },
                        new
                        {
                            Id = 4,
                            EventId = 5,
                            ImageUrl = "https://picsum.photos/640/480/?image=1075"
                        },
                        new
                        {
                            Id = 5,
                            EventId = 2,
                            ImageUrl = "https://picsum.photos/640/480/?image=308"
                        },
                        new
                        {
                            Id = 6,
                            EventId = 5,
                            ImageUrl = "https://picsum.photos/640/480/?image=626"
                        },
                        new
                        {
                            Id = 7,
                            EventId = 2,
                            ImageUrl = "https://picsum.photos/640/480/?image=945"
                        },
                        new
                        {
                            Id = 8,
                            EventId = 5,
                            ImageUrl = "https://picsum.photos/640/480/?image=178"
                        },
                        new
                        {
                            Id = 9,
                            EventId = 3,
                            ImageUrl = "https://picsum.photos/640/480/?image=497"
                        },
                        new
                        {
                            Id = 10,
                            EventId = 5,
                            ImageUrl = "https://picsum.photos/640/480/?image=815"
                        },
                        new
                        {
                            Id = 11,
                            EventId = 3,
                            ImageUrl = "https://picsum.photos/640/480/?image=48"
                        },
                        new
                        {
                            Id = 12,
                            EventId = 5,
                            ImageUrl = "https://picsum.photos/640/480/?image=367"
                        },
                        new
                        {
                            Id = 13,
                            EventId = 3,
                            ImageUrl = "https://picsum.photos/640/480/?image=685"
                        },
                        new
                        {
                            Id = 14,
                            EventId = 1,
                            ImageUrl = "https://picsum.photos/640/480/?image=1003"
                        },
                        new
                        {
                            Id = 15,
                            EventId = 3,
                            ImageUrl = "https://picsum.photos/640/480/?image=237"
                        },
                        new
                        {
                            Id = 16,
                            EventId = 1,
                            ImageUrl = "https://picsum.photos/640/480/?image=555"
                        },
                        new
                        {
                            Id = 17,
                            EventId = 4,
                            ImageUrl = "https://picsum.photos/640/480/?image=873"
                        },
                        new
                        {
                            Id = 18,
                            EventId = 1,
                            ImageUrl = "https://picsum.photos/640/480/?image=107"
                        },
                        new
                        {
                            Id = 19,
                            EventId = 4,
                            ImageUrl = "https://picsum.photos/640/480/?image=425"
                        },
                        new
                        {
                            Id = 20,
                            EventId = 1,
                            ImageUrl = "https://picsum.photos/640/480/?image=743"
                        });
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Events.EventRegistration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AttendedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAttended")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRegistered")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("EventRegistrationId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("EventId");

                    b.HasIndex("LastModifiedByUserId");

                    b.HasIndex("StudentId");

                    b.ToTable("EventRegistrations", null, t =>
                        {
                            t.HasCheckConstraint("CK_EventRegistration_AttendedDate_GreaterThan_RegistrationDate", "AttendedDate IS NULL OR RegisterDate IS NULL OR AttendedDate >= RegisterDate");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 3, 12, 9, 39, 58, 650, DateTimeKind.Local).AddTicks(350),
                            StudentId = 4
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 6, 17, 1, 7, 24, 292, DateTimeKind.Local).AddTicks(199),
                            StudentId = 12
                        },
                        new
                        {
                            Id = 3,
                            AttendedDate = new DateTime(2023, 4, 9, 10, 26, 18, 183, DateTimeKind.Local).AddTicks(6115),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 4, 4, 11, 38, 55, 885, DateTimeKind.Local).AddTicks(7975),
                            StudentId = 21
                        },
                        new
                        {
                            Id = 4,
                            AttendedDate = new DateTime(2022, 10, 21, 11, 27, 29, 303, DateTimeKind.Local).AddTicks(3503),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 10, 21, 3, 39, 4, 295, DateTimeKind.Local).AddTicks(2107),
                            StudentId = 29
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 2, 28, 13, 37, 53, 121, DateTimeKind.Local).AddTicks(5600),
                            StudentId = 9
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 11, 14, 0, 44, 11, 780, DateTimeKind.Local).AddTicks(4823),
                            StudentId = 17
                        },
                        new
                        {
                            Id = 7,
                            AttendedDate = new DateTime(2023, 3, 31, 5, 21, 18, 674, DateTimeKind.Local).AddTicks(9685),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 3, 23, 15, 36, 50, 357, DateTimeKind.Local).AddTicks(3226),
                            StudentId = 26
                        },
                        new
                        {
                            Id = 8,
                            AttendedDate = new DateTime(2022, 11, 10, 3, 19, 57, 821, DateTimeKind.Local).AddTicks(1388),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 10, 8, 21, 49, 19, 265, DateTimeKind.Local).AddTicks(7538),
                            StudentId = 5
                        },
                        new
                        {
                            Id = 9,
                            AttendedDate = new DateTime(2023, 8, 22, 23, 31, 37, 492, DateTimeKind.Local).AddTicks(9256),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 3,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 8, 7, 11, 58, 26, 186, DateTimeKind.Local).AddTicks(3696),
                            StudentId = 14
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 11, 1, 18, 54, 26, 751, DateTimeKind.Local).AddTicks(254),
                            StudentId = 22
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 3,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 8, 31, 9, 3, 33, 671, DateTimeKind.Local).AddTicks(6412),
                            StudentId = 2
                        },
                        new
                        {
                            Id = 12,
                            AttendedDate = new DateTime(2022, 10, 28, 21, 17, 29, 665, DateTimeKind.Local).AddTicks(7622),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 9, 26, 15, 59, 34, 236, DateTimeKind.Local).AddTicks(2970),
                            StudentId = 10
                        },
                        new
                        {
                            Id = 13,
                            AttendedDate = new DateTime(2023, 9, 24, 23, 42, 0, 736, DateTimeKind.Local).AddTicks(6639),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 3,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 9, 24, 6, 8, 41, 156, DateTimeKind.Local).AddTicks(9128),
                            StudentId = 19
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 5, 14, 19, 30, 23, 965, DateTimeKind.Local).AddTicks(3482),
                            StudentId = 27
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 3,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 8, 19, 3, 13, 48, 642, DateTimeKind.Local).AddTicks(1843),
                            StudentId = 7
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 6, 7, 16, 35, 31, 450, DateTimeKind.Local).AddTicks(6197),
                            StudentId = 15
                        },
                        new
                        {
                            Id = 17,
                            AttendedDate = new DateTime(2022, 8, 4, 11, 32, 48, 317, DateTimeKind.Local).AddTicks(2842),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 7, 16, 3, 15, 50, 431, DateTimeKind.Local).AddTicks(5567),
                            StudentId = 24
                        },
                        new
                        {
                            Id = 18,
                            AttendedDate = new DateTime(2024, 5, 15, 21, 14, 8, 193, DateTimeKind.Local).AddTicks(8883),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 5, 2, 13, 40, 38, 935, DateTimeKind.Local).AddTicks(8913),
                            StudentId = 3
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 6, 10, 0, 20, 57, 916, DateTimeKind.Local).AddTicks(8283),
                            StudentId = 12
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 5, 26, 10, 45, 46, 421, DateTimeKind.Local).AddTicks(1629),
                            StudentId = 20
                        },
                        new
                        {
                            Id = 21,
                            AttendedDate = new DateTime(2022, 7, 27, 9, 24, 48, 604, DateTimeKind.Local).AddTicks(3606),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 7, 3, 21, 26, 5, 402, DateTimeKind.Local).AddTicks(999),
                            StudentId = 29
                        },
                        new
                        {
                            Id = 22,
                            AttendedDate = new DateTime(2023, 2, 28, 18, 45, 51, 661, DateTimeKind.Local).AddTicks(9145),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 2, 21, 18, 28, 59, 625, DateTimeKind.Local).AddTicks(5415),
                            StudentId = 8
                        },
                        new
                        {
                            Id = 23,
                            AttendedDate = new DateTime(2022, 8, 2, 20, 38, 3, 976, DateTimeKind.Local).AddTicks(2455),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 7, 27, 18, 31, 12, 887, DateTimeKind.Local).AddTicks(3714),
                            StudentId = 17
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 3, 16, 20, 27, 56, 861, DateTimeKind.Local).AddTicks(3040),
                            StudentId = 25
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 6, 21, 15, 36, 20, 372, DateTimeKind.Local).AddTicks(6430),
                            StudentId = 5
                        },
                        new
                        {
                            Id = 26,
                            AttendedDate = new DateTime(2023, 4, 13, 1, 46, 9, 409, DateTimeKind.Local).AddTicks(8043),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 4, 8, 22, 26, 54, 97, DateTimeKind.Local).AddTicks(665),
                            StudentId = 13
                        },
                        new
                        {
                            Id = 27,
                            AttendedDate = new DateTime(2022, 11, 3, 16, 36, 20, 733, DateTimeKind.Local).AddTicks(576),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 10, 25, 18, 8, 0, 375, DateTimeKind.Local).AddTicks(8338),
                            StudentId = 22
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 3, 5, 0, 25, 51, 332, DateTimeKind.Local).AddTicks(8290),
                            StudentId = 1
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 9, 19, 15, 13, 7, 861, DateTimeKind.Local).AddTicks(1054),
                            StudentId = 10
                        },
                        new
                        {
                            Id = 30,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 3, 28, 2, 24, 48, 568, DateTimeKind.Local).AddTicks(5916),
                            StudentId = 18
                        },
                        new
                        {
                            Id = 31,
                            AttendedDate = new DateTime(2022, 10, 20, 13, 5, 43, 706, DateTimeKind.Local).AddTicks(4202),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 10, 13, 12, 18, 15, 346, DateTimeKind.Local).AddTicks(3769),
                            StudentId = 27
                        },
                        new
                        {
                            Id = 32,
                            AttendedDate = new DateTime(2023, 9, 15, 15, 38, 11, 429, DateTimeKind.Local).AddTicks(822),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 3,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 8, 12, 2, 27, 22, 266, DateTimeKind.Local).AddTicks(9927),
                            StudentId = 6
                        },
                        new
                        {
                            Id = 33,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 11, 6, 9, 23, 22, 831, DateTimeKind.Local).AddTicks(6485),
                            StudentId = 15
                        },
                        new
                        {
                            Id = 34,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 3,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 9, 4, 23, 32, 29, 752, DateTimeKind.Local).AddTicks(2643),
                            StudentId = 24
                        },
                        new
                        {
                            Id = 35,
                            AttendedDate = new DateTime(2024, 4, 25, 21, 58, 27, 658, DateTimeKind.Local).AddTicks(322),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 4, 25, 12, 54, 12, 560, DateTimeKind.Local).AddTicks(6997),
                            StudentId = 3
                        },
                        new
                        {
                            Id = 36,
                            AttendedDate = new DateTime(2023, 10, 1, 4, 55, 21, 841, DateTimeKind.Local).AddTicks(7723),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 3,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 9, 28, 20, 37, 37, 237, DateTimeKind.Local).AddTicks(5359),
                            StudentId = 12
                        },
                        new
                        {
                            Id = 37,
                            AttendedDate = new DateTime(2024, 6, 9, 12, 28, 41, 116, DateTimeKind.Local).AddTicks(3403),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 5, 19, 9, 59, 20, 45, DateTimeKind.Local).AddTicks(9713),
                            StudentId = 20
                        },
                        new
                        {
                            Id = 38,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 3,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 8, 23, 17, 42, 44, 722, DateTimeKind.Local).AddTicks(8075),
                            StudentId = 29
                        },
                        new
                        {
                            Id = 39,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 4, 13, 7, 4, 27, 531, DateTimeKind.Local).AddTicks(2428),
                            StudentId = 8
                        },
                        new
                        {
                            Id = 40,
                            AttendedDate = new DateTime(2022, 7, 25, 8, 16, 7, 561, DateTimeKind.Local).AddTicks(6888),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 7, 20, 17, 44, 46, 512, DateTimeKind.Local).AddTicks(1798),
                            StudentId = 17
                        },
                        new
                        {
                            Id = 41,
                            AttendedDate = new DateTime(2024, 6, 1, 13, 25, 11, 805, DateTimeKind.Local).AddTicks(4460),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 5, 7, 4, 9, 35, 16, DateTimeKind.Local).AddTicks(5144),
                            StudentId = 25
                        },
                        new
                        {
                            Id = 42,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 6, 14, 14, 49, 53, 997, DateTimeKind.Local).AddTicks(4514),
                            StudentId = 5
                        },
                        new
                        {
                            Id = 43,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 5, 31, 1, 14, 42, 501, DateTimeKind.Local).AddTicks(7860),
                            StudentId = 13
                        },
                        new
                        {
                            Id = 44,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 7, 8, 11, 55, 1, 482, DateTimeKind.Local).AddTicks(7230),
                            StudentId = 22
                        },
                        new
                        {
                            Id = 45,
                            AttendedDate = new DateTime(2023, 3, 22, 7, 45, 35, 964, DateTimeKind.Local).AddTicks(7328),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 2, 26, 5, 16, 57, 836, DateTimeKind.Local).AddTicks(8105),
                            StudentId = 1
                        },
                        new
                        {
                            Id = 46,
                            AttendedDate = new DateTime(2022, 8, 6, 22, 34, 22, 370, DateTimeKind.Local).AddTicks(5385),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 8, 1, 9, 0, 8, 967, DateTimeKind.Local).AddTicks(9946),
                            StudentId = 10
                        },
                        new
                        {
                            Id = 47,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 3, 21, 7, 15, 55, 72, DateTimeKind.Local).AddTicks(5730),
                            StudentId = 18
                        },
                        new
                        {
                            Id = 48,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 10, 6, 11, 31, 48, 971, DateTimeKind.Local).AddTicks(1853),
                            StudentId = 27
                        },
                        new
                        {
                            Id = 49,
                            AttendedDate = new DateTime(2023, 3, 5, 10, 26, 21, 633, DateTimeKind.Local).AddTicks(2318),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 2, 14, 9, 14, 52, 308, DateTimeKind.Local).AddTicks(3355),
                            StudentId = 6
                        },
                        new
                        {
                            Id = 50,
                            AttendedDate = new DateTime(2022, 11, 13, 8, 51, 54, 20, DateTimeKind.Local).AddTicks(164),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 10, 30, 8, 36, 56, 456, DateTimeKind.Local).AddTicks(4569),
                            StudentId = 15
                        });
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Students.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("LastModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("StudentCode")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("StudentId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("LastModifiedByUserId");

                    b.HasIndex("StudentCode")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Students", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1954, 12, 25, 9, 59, 20, 890, DateTimeKind.Local).AddTicks(2034),
                            FirstName = "Minh Cảnh",
                            LastName = "Lâm",
                            StudentCode = 230465,
                            UserId = 19
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2004, 2, 4, 10, 38, 47, 881, DateTimeKind.Local).AddTicks(453),
                            FirstName = "Ðông Nguyên",
                            LastName = "Hà",
                            StudentCode = 197741,
                            UserId = 34
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2002, 12, 16, 13, 44, 2, 317, DateTimeKind.Local).AddTicks(6026),
                            FirstName = "Tú Tâm",
                            LastName = "Hoàng",
                            StudentCode = 134950,
                            UserId = 20
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1985, 5, 7, 14, 32, 58, 623, DateTimeKind.Local).AddTicks(3169),
                            FirstName = "Phương An",
                            LastName = "Bùi",
                            StudentCode = 206711,
                            UserId = 36
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2000, 12, 6, 17, 28, 43, 744, DateTimeKind.Local).AddTicks(6970),
                            FirstName = "Hải Hà",
                            LastName = "Đoàn",
                            StudentCode = 143920,
                            UserId = 22
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1995, 5, 16, 23, 42, 59, 959, DateTimeKind.Local).AddTicks(439),
                            FirstName = "Ái Nhân",
                            LastName = "Phùng",
                            StudentCode = 111196,
                            UserId = 37
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1998, 11, 27, 21, 13, 25, 171, DateTimeKind.Local).AddTicks(8520),
                            FirstName = "Thanh Trang",
                            LastName = "Nguyễn",
                            StudentCode = 248405,
                            UserId = 23
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1975, 5, 17, 19, 34, 47, 416, DateTimeKind.Local).AddTicks(3993),
                            FirstName = "Hữu Minh",
                            LastName = "Phan",
                            StudentCode = 215681,
                            UserId = 38
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1996, 11, 18, 0, 58, 6, 598, DateTimeKind.Local).AddTicks(9536),
                            FirstName = "Bình Quân",
                            LastName = "Hồ",
                            StudentCode = 152890,
                            UserId = 24
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1970, 11, 13, 14, 50, 27, 312, DateTimeKind.Local).AddTicks(5117),
                            FirstName = "Thư Sương",
                            LastName = "Trịnh",
                            StudentCode = 224651,
                            UserId = 40
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1994, 11, 9, 4, 42, 48, 26, DateTimeKind.Local).AddTicks(714),
                            FirstName = "Mạnh Dũng",
                            LastName = "Tô",
                            StudentCode = 257376,
                            UserId = 25
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1960, 5, 14, 6, 9, 41, 592, DateTimeKind.Local).AddTicks(4184),
                            FirstName = "Ðình Quảng",
                            LastName = "Lê",
                            StudentCode = 120166,
                            UserId = 39
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1992, 10, 30, 8, 27, 29, 453, DateTimeKind.Local).AddTicks(1598),
                            FirstName = "Tâm Ðoan",
                            LastName = "Tăng",
                            StudentCode = 161860,
                            UserId = 26
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1991, 8, 16, 10, 3, 52, 334, DateTimeKind.Local).AddTicks(6732),
                            FirstName = "Nhật Linh",
                            LastName = "Dương",
                            StudentCode = 299070,
                            UserId = 12
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1980, 5, 20, 17, 6, 3, 516, DateTimeKind.Local).AddTicks(9992),
                            FirstName = "Gia Thịnh",
                            LastName = "Đinh",
                            StudentCode = 170830,
                            UserId = 28
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1972, 11, 16, 13, 58, 3, 76, DateTimeKind.Local).AddTicks(9185),
                            FirstName = "Yến Nhi",
                            LastName = "Hà",
                            StudentCode = 108039,
                            UserId = 14
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1988, 10, 11, 15, 56, 52, 307, DateTimeKind.Local).AddTicks(3432),
                            FirstName = "Thanh Ngân",
                            LastName = "Lý",
                            StudentCode = 275316,
                            UserId = 29
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2004, 2, 18, 17, 52, 13, 819, DateTimeKind.Local).AddTicks(1711),
                            FirstName = "Hữu Ðạt",
                            LastName = "Bùi",
                            StudentCode = 212525,
                            UserId = 15
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1986, 10, 2, 19, 41, 33, 734, DateTimeKind.Local).AddTicks(4310),
                            FirstName = "Bảo Thạch",
                            LastName = "Đào",
                            StudentCode = 284286,
                            UserId = 31
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1985, 5, 21, 21, 46, 24, 561, DateTimeKind.Local).AddTicks(4238),
                            FirstName = "Thúy Minh",
                            LastName = "Phùng",
                            StudentCode = 117009,
                            UserId = 16
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1984, 9, 22, 23, 26, 15, 161, DateTimeKind.Local).AddTicks(5346),
                            FirstName = "Mỹ Hiệp",
                            LastName = "Nguyễn",
                            StudentCode = 188771,
                            UserId = 32
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1966, 8, 23, 1, 40, 35, 303, DateTimeKind.Local).AddTicks(6749),
                            FirstName = "Ðình Hợp",
                            LastName = "Phan",
                            StudentCode = 221495,
                            UserId = 17
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1982, 9, 14, 3, 10, 56, 588, DateTimeKind.Local).AddTicks(6336),
                            FirstName = "Tuệ Mẫn",
                            LastName = "Hồ",
                            StudentCode = 293256,
                            UserId = 33
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1997, 11, 24, 5, 34, 46, 45, DateTimeKind.Local).AddTicks(9292),
                            FirstName = "Như Ngọc",
                            LastName = "Vương",
                            StudentCode = 125979,
                            UserId = 18
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1980, 9, 4, 6, 55, 38, 15, DateTimeKind.Local).AddTicks(7187),
                            FirstName = "Gia Huy",
                            LastName = "Tô",
                            StudentCode = 179800,
                            UserId = 30
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1954, 8, 30, 20, 47, 58, 729, DateTimeKind.Local).AddTicks(2735),
                            FirstName = "Việt Hoàng",
                            LastName = "Trần",
                            StudentCode = 239435,
                            UserId = 21
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1978, 8, 26, 10, 40, 19, 442, DateTimeKind.Local).AddTicks(8149),
                            FirstName = "Thanh Hạnh",
                            LastName = "Tăng",
                            StudentCode = 102225,
                            UserId = 35
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2002, 8, 22, 0, 32, 40, 156, DateTimeKind.Local).AddTicks(3574),
                            FirstName = "Hướng Dương",
                            LastName = "Ngô",
                            StudentCode = 203554,
                            UserId = 13
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1976, 8, 16, 14, 25, 0, 869, DateTimeKind.Local).AddTicks(8951),
                            FirstName = "Bảo Hiển",
                            LastName = "Đinh",
                            StudentCode = 266346,
                            UserId = 27
                        });
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.UniversityUnit.UniversityUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LastModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("UniversityUnitId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("LastModifiedByUserId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UniversityUnits", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bàn độc việc nước nha cái ừ một tám.",
                            Name = "Trần and Sons",
                            UserId = 10
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bảy bạn khoảng.",
                            Name = "Bùi, Lý and Hà",
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khâu viết một nước.",
                            Name = "Trịnh Group",
                            UserId = 4
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Không áo khoan.",
                            Name = "Hà, Dương and Bùi",
                            UserId = 6
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Thuyền chìm đá nước anh thì đồng làm.",
                            Name = "Vũ - Phan",
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bạn anh khoan giày lầu dép đá giết em viết.",
                            Name = "Đào, Hà and Phùng",
                            UserId = 8
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Nghỉ tủ á.",
                            Name = "Mai - Vương",
                            UserId = 9
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chỉ lầu khoan ruộng mượn vẽ dép là con.",
                            Name = "Lý, Đặng and Phan",
                            UserId = 5
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ba ác xuồng ngọt đâu anh.",
                            Name = "Đỗ - Nguyễn",
                            UserId = 7
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sáu nhà thuyền mướn ruộng bàn bốn đỏ.",
                            Name = "Đinh, Đinh and Trịnh",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AvatarUrl")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id")
                        .HasName("UserId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=306",
                            ConcurrencyStamp = "72db281a-f527-4982-84fc-2c1aeec198d1",
                            Email = "149733_Ho43@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "149733_HO43@GMAIL.COM",
                            NormalizedUserName = "149733",
                            PasswordHash = "AQAAAAIAAYagAAAAEEZmQVrawlccZ9LwL5xCKT6TMcJ04SbMxxQHwOCjzYxrUc/6XRSrXH+CRQZj4z9XAg==",
                            PhoneNumber = "029 1602 3966",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "15c6f87f-cbf6-4ed6-9b90-09863507097d",
                            TwoFactorEnabled = false,
                            UserName = "149733"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=255",
                            ConcurrencyStamp = "8231e84e-93c5-4e8c-86df-b34cc7a28436",
                            Email = "254219.Ly30@yahoo.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "254219.LY30@YAHOO.COM",
                            NormalizedUserName = "254219",
                            PasswordHash = "AQAAAAIAAYagAAAAEJKxo5os1I68wDvYUapEw3hkBepGpVzK07dHxmB9IXBvGsr3fGKJKHlGc6lLc1UM2g==",
                            PhoneNumber = "0242 0700 5327",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "0d9418dd-fea9-4051-9c9d-35ede859e339",
                            TwoFactorEnabled = false,
                            UserName = "254219"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=980",
                            ConcurrencyStamp = "ae4f1583-3e7b-4308-b095-44c03be9fe2d",
                            Email = "15870456@hotmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "15870456@HOTMAIL.COM",
                            NormalizedUserName = "158704",
                            PasswordHash = "AQAAAAIAAYagAAAAEIyBkU4XG7QJdE5DZoBps6KKNzBcp8/f7fouNpPkrG5+hLxHT2yNUDc9vhtY1Dx6/Q==",
                            PhoneNumber = "022 9335 8600",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "c7f48391-ce69-483a-9753-362fc7393411",
                            TwoFactorEnabled = false,
                            UserName = "158704"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=573",
                            ConcurrencyStamp = "8e6c71f0-6e0d-420d-a80d-11e9c9fa27c2",
                            Email = "263189.Duong@hotmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "263189.DUONG@HOTMAIL.COM",
                            NormalizedUserName = "263189",
                            PasswordHash = "AQAAAAIAAYagAAAAEFfaCesi9SnF4gnuwvb7n0AVSgYp0tngVNDRllwE67mMFoD88VW57A/ZRYb+lHrKoQ==",
                            PhoneNumber = "026 4472 5357",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "9049cd76-c548-4834-a64c-fd073ce1911c",
                            TwoFactorEnabled = false,
                            UserName = "263189"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=1046",
                            ConcurrencyStamp = "e44ce964-600b-4211-8aff-291663e203a8",
                            Email = "167674.Phan@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "167674.PHAN@GMAIL.COM",
                            NormalizedUserName = "167674",
                            PasswordHash = "AQAAAAIAAYagAAAAEF8RYHYPw0v/CRcqcN4bRYdPY18k35vj+wUWJEQcq6nh320tVCvf4c2pXhD61tnQxg==",
                            PhoneNumber = "0219 5193 0041",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "9efc1376-7c94-4b3e-8a3b-aaf7fd4ba169",
                            TwoFactorEnabled = false,
                            UserName = "167674"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=776",
                            ConcurrencyStamp = "3b26fd81-7d00-4a69-8123-5001ae703dd0",
                            Email = "272159_Ha80@yahoo.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "272159_HA80@YAHOO.COM",
                            NormalizedUserName = "272159",
                            PasswordHash = "AQAAAAIAAYagAAAAEOYGCWlHBPvEwZqQcYYEAe0upDU4SzgAeYIRykFQMT1neFlDL3ox1NljR5qfPoITKA==",
                            PhoneNumber = "0247 4717 5173",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "be92af10-58b1-4db0-aa0f-b05599703821",
                            TwoFactorEnabled = false,
                            UserName = "272159"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=873",
                            ConcurrencyStamp = "7ff69c66-5740-47c8-8a00-1773cb5c0acb",
                            Email = "17664436@hotmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "17664436@HOTMAIL.COM",
                            NormalizedUserName = "176644",
                            PasswordHash = "AQAAAAIAAYagAAAAEDnyeeu23N2pODOc80boSkNnQA6/BOOlMC/0KeF8OMbjlkSyZGaelhLZuaqWQNaIAQ==",
                            PhoneNumber = "0209 8849 4184",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "c1639db4-257f-4063-91fd-0e7e0e7f9f42",
                            TwoFactorEnabled = false,
                            UserName = "176644"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=244",
                            ConcurrencyStamp = "8866fec0-c4fe-488f-8a7d-5aca6705b53a",
                            Email = "28113081@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "28113081@GMAIL.COM",
                            NormalizedUserName = "281130",
                            PasswordHash = "AQAAAAIAAYagAAAAENmYbTYrXg914qvKloc4UejmrlzhuI4Xdf/74JYwOmbGWncAArspbRvgNZ74w4vkFg==",
                            PhoneNumber = "0244 9217 1650",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "91925fdf-6b5e-4f03-8536-b2322c018cd9",
                            TwoFactorEnabled = false,
                            UserName = "281130"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=706",
                            ConcurrencyStamp = "437a16c9-3012-48b2-9d71-fae1eb424fdc",
                            Email = "185614.Nguyen@yahoo.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "185614.NGUYEN@YAHOO.COM",
                            NormalizedUserName = "185614",
                            PasswordHash = "AQAAAAIAAYagAAAAEHSHCr8gi0tELfsXKOxzX/hsccIh0ERnOYDykx0R2h9wYt5TBEDQcPHEZF4FztpudA==",
                            PhoneNumber = "029 9059 4812",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "d755f949-3f39-49d8-ab69-709a1106b053",
                            TwoFactorEnabled = false,
                            UserName = "185614"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=71",
                            ConcurrencyStamp = "3c9cb399-f4e6-457b-b01e-b7edcf503c7e",
                            Email = "290100_Dinh29@hotmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "290100_DINH29@HOTMAIL.COM",
                            NormalizedUserName = "290100",
                            PasswordHash = "AQAAAAIAAYagAAAAEOzqU+6I7bTqP9poZljMpkJ/xvyml4b2tNnx9RSnncJI+dyw5mYFMzx5iJZn4W8F+A==",
                            PhoneNumber = "024 2962 5692",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "8ede3247-bea5-45a0-978a-e289888fb853",
                            TwoFactorEnabled = false,
                            UserName = "290100"
                        },
                        new
                        {
                            Id = 11,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=884",
                            ConcurrencyStamp = "cc6bc6d3-dc2f-4ddc-b8cb-cc39f31fa6f9",
                            Email = "194584.Do17@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "194584.DO17@GMAIL.COM",
                            NormalizedUserName = "194584",
                            PasswordHash = "AQAAAAIAAYagAAAAELixvsgd1PAejErUyJWQMt3Sfc9dX5p/CqhU3He8iXGg3IkqR3HlbO/Hwj5JoLwWrg==",
                            PhoneNumber = "0293 3301 1694",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "21f5f5b3-a20d-4725-b83f-5932f91e5819",
                            TwoFactorEnabled = false,
                            UserName = "194584"
                        },
                        new
                        {
                            Id = 12,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=569",
                            ConcurrencyStamp = "c1f3f1dd-5e98-4a83-850c-7757c8e71473",
                            Email = "29907062@yahoo.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "29907062@YAHOO.COM",
                            NormalizedUserName = "299070",
                            PasswordHash = "AQAAAAIAAYagAAAAEMBjRNtwGR9DEa9FVh8z8v+LZt4AL7ApLckSU2i+2m7Wal7aex2KDyVDdxJ41BwoIw==",
                            PhoneNumber = "022 4461 8873",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "37e69fc0-c034-495b-b668-3647e0cb5f0a",
                            TwoFactorEnabled = false,
                            UserName = "299070"
                        },
                        new
                        {
                            Id = 13,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=354",
                            ConcurrencyStamp = "1e3e848a-e3db-47d9-8658-5efd654bb8bf",
                            Email = "2035547@yahoo.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "2035547@YAHOO.COM",
                            NormalizedUserName = "203554",
                            PasswordHash = "AQAAAAIAAYagAAAAEKmhuqp81agjUjmHCS7F5a2OD83r9kMXfQOC8YX2xaVxFZ36Fxe/ozCrL4D2GcEqrA==",
                            PhoneNumber = "0279 5086 5201",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "7d7d035c-357f-40ed-ad13-81133e8e2f11",
                            TwoFactorEnabled = false,
                            UserName = "203554"
                        },
                        new
                        {
                            Id = 14,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=810",
                            ConcurrencyStamp = "48130760-cde8-4e87-a661-b0e4c72ffb96",
                            Email = "108039_Duong@hotmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "108039_DUONG@HOTMAIL.COM",
                            NormalizedUserName = "108039",
                            PasswordHash = "AQAAAAIAAYagAAAAEHEkU1FMhG6rqppeYrxxXoAjhvMtP6JN5Ovh+kI0kgsmDl1uiijLUSCj4HrSM8MBQw==",
                            PhoneNumber = "0214 7463 2777",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "b331eb89-fa61-4e7c-aaf6-ed47a0191353",
                            TwoFactorEnabled = false,
                            UserName = "108039"
                        },
                        new
                        {
                            Id = 15,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=320",
                            ConcurrencyStamp = "ac4f3209-8756-4521-a31b-fc8e30a28336",
                            Email = "212525_Phan66@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "212525_PHAN66@GMAIL.COM",
                            NormalizedUserName = "212525",
                            PasswordHash = "AQAAAAIAAYagAAAAEHGvXMPPZrNeJGWu3mROo/FzC68aTQeayxx42R5jvNJyxxI1gFB+iLhtnj1INGwbbA==",
                            PhoneNumber = "0298 8319 2431",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "1fdbb03c-baa0-49de-bf47-f1df63e67846",
                            TwoFactorEnabled = false,
                            UserName = "212525"
                        },
                        new
                        {
                            Id = 16,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=638",
                            ConcurrencyStamp = "d1a9e1f4-0484-40e7-81f5-87379fd8800a",
                            Email = "117009.Truong54@yahoo.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "117009.TRUONG54@YAHOO.COM",
                            NormalizedUserName = "117009",
                            PasswordHash = "AQAAAAIAAYagAAAAEHEiJRTzeda21Rt32MMWIzMkC/I/wNvCtPfxbcHP1VO+AWEMyIMGKGVQba3mH2fOSg==",
                            PhoneNumber = "024 9109 6710",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "132e3b21-28be-41ff-a1e9-e648d63063b3",
                            TwoFactorEnabled = false,
                            UserName = "117009"
                        },
                        new
                        {
                            Id = 17,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=702",
                            ConcurrencyStamp = "6de88fd7-f33c-4964-8947-9d97e6f98577",
                            Email = "22149588@hotmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "22149588@HOTMAIL.COM",
                            NormalizedUserName = "221495",
                            PasswordHash = "AQAAAAIAAYagAAAAEKesUrrnQDnO0HE5KPw3lKKum4qpp6U4DRTu4Ijy3jjM7vqAJoTAEiXGfVFYxQlfxQ==",
                            PhoneNumber = "025 9058 7338",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "59e39624-68c5-4ae7-9562-2597489f8e01",
                            TwoFactorEnabled = false,
                            UserName = "221495"
                        },
                        new
                        {
                            Id = 18,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=294",
                            ConcurrencyStamp = "4529b21d-e780-4212-bba4-dff1549129a6",
                            Email = "125979.Dang@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "125979.DANG@GMAIL.COM",
                            NormalizedUserName = "125979",
                            PasswordHash = "AQAAAAIAAYagAAAAENUgctdvbLJGWXWtkx/Gv5Keycw9Py5J+FQBhsrCRXlYWL5Aubj0nmC/SkUdrBGABQ==",
                            PhoneNumber = "029 4295 5085",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "4f4ab061-9dfb-48b2-b400-d07fca2db15a",
                            TwoFactorEnabled = false,
                            UserName = "125979"
                        },
                        new
                        {
                            Id = 19,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=972",
                            ConcurrencyStamp = "4e14541c-647f-4f66-b12b-7f7ad760d0d2",
                            Email = "230465_Nguyen@yahoo.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "230465_NGUYEN@YAHOO.COM",
                            NormalizedUserName = "230465",
                            PasswordHash = "AQAAAAIAAYagAAAAEN08uLmFufpHq9ac2Za8uVCWYb6JFj7ytaTBxmFY8Q3x1MoTRVZuebc6y1X6/T0ZLA==",
                            PhoneNumber = "024 9322 3632",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "3a7b8175-1091-4a3e-a3d4-ed8c39742bd8",
                            TwoFactorEnabled = false,
                            UserName = "230465"
                        },
                        new
                        {
                            Id = 20,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=428",
                            ConcurrencyStamp = "91599246-af1a-43ef-a81e-1f043d86a668",
                            Email = "134950.Dinh3@hotmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "134950.DINH3@HOTMAIL.COM",
                            NormalizedUserName = "134950",
                            PasswordHash = "AQAAAAIAAYagAAAAEOiM/tUJo4JCW4bRttRc/ybgBfu2q3tafISnlcbwo3oCyfe4xQ23YEt1QbuhVC83Jg==",
                            PhoneNumber = "0244 6003 8952",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "da288257-b9ca-4372-b3e3-d23907b38bf2",
                            TwoFactorEnabled = false,
                            UserName = "134950"
                        },
                        new
                        {
                            Id = 21,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=748",
                            ConcurrencyStamp = "1606c7ec-4f5b-4d33-9435-2b6887e06365",
                            Email = "23943568@hotmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "23943568@HOTMAIL.COM",
                            NormalizedUserName = "239435",
                            PasswordHash = "AQAAAAIAAYagAAAAEDU3UVChWXDSKjpnavudufb9dTQIC+Gn5jJKWhAkgI5OCWl7lv0fzMWdSgHVY32sbg==",
                            PhoneNumber = "0239 5078 0361",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "725ccca3-2870-4e11-9cd8-c4eccdddab46",
                            TwoFactorEnabled = false,
                            UserName = "239435"
                        },
                        new
                        {
                            Id = 22,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=119",
                            ConcurrencyStamp = "9bac9e8f-f0c7-4f21-b2dc-ec477137e545",
                            Email = "14392013@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "14392013@GMAIL.COM",
                            NormalizedUserName = "143920",
                            PasswordHash = "AQAAAAIAAYagAAAAEGMgIZA+7PMHAIqKSVqUKvyN9vruHE89+5Zjm+6rwdQg4Dh8sOpaWGLBC1Wqc2C+eA==",
                            PhoneNumber = "0274 6346 7937",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "92ece6ad-e27a-45d1-ad1c-85d9f8b3825e",
                            TwoFactorEnabled = false,
                            UserName = "143920"
                        },
                        new
                        {
                            Id = 23,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=575",
                            ConcurrencyStamp = "5acfe29c-086f-4ed8-9e51-133a1f7b11b6",
                            Email = "248405_Phung@yahoo.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "248405_PHUNG@YAHOO.COM",
                            NormalizedUserName = "248405",
                            PasswordHash = "AQAAAAIAAYagAAAAEJzbB/Iit2/A43JeeMW4fTvmh7RAUpR8xy33Ol3H64mAv7B0kds4oWaDdLQCUWEULg==",
                            PhoneNumber = "0229 8724 4403",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "3bdd125b-906d-4168-ad18-25750ea339cc",
                            TwoFactorEnabled = false,
                            UserName = "248405"
                        },
                        new
                        {
                            Id = 24,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=949",
                            ConcurrencyStamp = "9beddd62-3724-42bd-8f5a-59c1579ab5f5",
                            Email = "152890.Duong53@hotmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "152890.DUONG53@HOTMAIL.COM",
                            NormalizedUserName = "152890",
                            PasswordHash = "AQAAAAIAAYagAAAAENtmmy7ZgMYPCKmQT8yZI7Be5dU6UT9RnT57Yh62Gtj8hFF5czgQ1i02HjiDOnos4A==",
                            PhoneNumber = "0249 1921 9709",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "6a7eae19-710c-4339-bf27-9f37469cd43e",
                            TwoFactorEnabled = false,
                            UserName = "152890"
                        },
                        new
                        {
                            Id = 25,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=402",
                            ConcurrencyStamp = "3add5d2f-7e76-4c5f-bd54-8414e9f8c40e",
                            Email = "257376.Phan40@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "257376.PHAN40@GMAIL.COM",
                            NormalizedUserName = "257376",
                            PasswordHash = "AQAAAAIAAYagAAAAEGkLY/DOJLUo2QI52EYCohRuLUIK9B9MY19yIxwevd6Wjeb4iolTq2EjayIF1Ntffw==",
                            PhoneNumber = "029 0479 8446",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "9802ac36-1ecc-4203-af1f-1714331f844b",
                            TwoFactorEnabled = false,
                            UserName = "257376"
                        },
                        new
                        {
                            Id = 26,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=290",
                            ConcurrencyStamp = "81fb08d5-7c63-48c2-9d85-d3ebf651d2cc",
                            Email = "16186094@yahoo.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "16186094@YAHOO.COM",
                            NormalizedUserName = "161860",
                            PasswordHash = "AQAAAAIAAYagAAAAEA+Zvm9QCzs+rE209vfHu9dJORorm8V9wgXGsNJpmmCVPG5HNq2qoijKB+/s6LoF/Q==",
                            PhoneNumber = "025 4184 7591",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "4a34b9f2-3f3f-4d7c-82c5-c51014a6ff59",
                            TwoFactorEnabled = false,
                            UserName = "161860"
                        },
                        new
                        {
                            Id = 27,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=968",
                            ConcurrencyStamp = "ec556642-d53c-410f-b609-453aad223bc1",
                            Email = "26634639@hotmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "26634639@HOTMAIL.COM",
                            NormalizedUserName = "266346",
                            PasswordHash = "AQAAAAIAAYagAAAAECLQfmipCsC4yYhtwWtTYEWxx0QYGopmTZM4tdNNWu4/l3JeE/pSvH2DUlRUiH0BnQ==",
                            PhoneNumber = "020 9321 5158",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "ef62714a-7a3a-4f7d-a2f7-63c8a5303d4e",
                            TwoFactorEnabled = false,
                            UserName = "266346"
                        },
                        new
                        {
                            Id = 28,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=560",
                            ConcurrencyStamp = "4bc618c9-fa9c-495e-88ce-f011ff0a7ef2",
                            Email = "170830_Tang@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "170830_TANG@GMAIL.COM",
                            NormalizedUserName = "170830",
                            PasswordHash = "AQAAAAIAAYagAAAAEJScunOMwTUU3l/GJn7quJSN0ltDEuHtRexZw/bWiOnbZFUVj+ZXGdSEgNEN3XbYSA==",
                            PhoneNumber = "024 4459 3805",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "ac180f2b-cdd1-4dbc-ad2b-5f866eb9aa7d",
                            TwoFactorEnabled = false,
                            UserName = "170830"
                        },
                        new
                        {
                            Id = 29,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=1058",
                            ConcurrencyStamp = "465648a3-ae98-459f-b062-e25cbb05b8dc",
                            Email = "275316.Nguyen90@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "275316.NGUYEN90@GMAIL.COM",
                            NormalizedUserName = "275316",
                            PasswordHash = "AQAAAAIAAYagAAAAEH6nh5xaf8f8togS0tIG0s9ChR5EjO/kuXFESVGKLKyebO5CwZ2kQoHrpkKPQ877SA==",
                            PhoneNumber = "0295 9615 5210",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "ad87d85a-f300-4a02-b4a1-39fcaba78078",
                            TwoFactorEnabled = false,
                            UserName = "275316"
                        },
                        new
                        {
                            Id = 30,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=513",
                            ConcurrencyStamp = "c307ab9d-e865-45d6-80c5-d43cf84cee92",
                            Email = "179800_Dinh77@yahoo.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "179800_DINH77@YAHOO.COM",
                            NormalizedUserName = "179800",
                            PasswordHash = "AQAAAAIAAYagAAAAEM3Z+xRzilY0nswucY5zVtEqf+vdamqKrKCMOdwZYs1JsmxRdkVynBop4v4u9LRBVg==",
                            PhoneNumber = "024 6338 2097",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "c48ccc32-4756-4848-944e-6847c0ecafef",
                            TwoFactorEnabled = false,
                            UserName = "179800"
                        },
                        new
                        {
                            Id = 31,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=969",
                            ConcurrencyStamp = "04fb92bc-7901-49f9-a0b0-5fc2b9bb470b",
                            Email = "28428620@hotmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "28428620@HOTMAIL.COM",
                            NormalizedUserName = "284286",
                            PasswordHash = "AQAAAAIAAYagAAAAEBNOjI5wA0OOYZihuv1zoDFcqTxpz1cStoohf87a+cPCsuHgVW1t32Jn3iMLD50XBw==",
                            PhoneNumber = "0279 8716 9563",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "121e3f08-bef0-45ad-bc99-c508543961b6",
                            TwoFactorEnabled = false,
                            UserName = "284286"
                        },
                        new
                        {
                            Id = 32,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=340",
                            ConcurrencyStamp = "fcf398c9-7ea1-47c1-8c82-86c757f28ba1",
                            Email = "188771_Le@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "188771_LE@GMAIL.COM",
                            NormalizedUserName = "188771",
                            PasswordHash = "AQAAAAIAAYagAAAAEEYV2Ks65BXI+vrTzQYgQ/mmQj4HLCpJkUKVDTsoJZUyXm1Fwy+Ss0cli2SoEFFIYw==",
                            PhoneNumber = "0224 9084 6130",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "0963a550-47e1-4394-b19c-31c8ab3986e4",
                            TwoFactorEnabled = false,
                            UserName = "188771"
                        },
                        new
                        {
                            Id = 33,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=693",
                            ConcurrencyStamp = "7e5441e4-6c3f-4db3-96d3-87dfdaa5ced2",
                            Email = "293256.Phung@yahoo.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "293256.PHUNG@YAHOO.COM",
                            NormalizedUserName = "293256",
                            PasswordHash = "AQAAAAIAAYagAAAAEGy5z5cg00yWJZUZIOP83kZSJJ5thQXQEkmnJ+wk2gOJ+xFNDOn+V1JEWQccCzeJjg==",
                            PhoneNumber = "026 9046 2360",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "44ce8a92-7393-475e-91fc-9b7181890de7",
                            TwoFactorEnabled = false,
                            UserName = "293256"
                        },
                        new
                        {
                            Id = 34,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=167",
                            ConcurrencyStamp = "327c049f-6639-40f0-93fa-7ea8096838e1",
                            Email = "197741_Ngo27@hotmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "197741_NGO27@HOTMAIL.COM",
                            NormalizedUserName = "197741",
                            PasswordHash = "AQAAAAIAAYagAAAAEL7NDYqOKPcgQPAvHZV+FWQ8LNSVBlmX/ZuFnlRAjKBPreRjzl+py2fgAihZn9e0rg==",
                            PhoneNumber = "024 1830 0172",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "124f3515-8a51-4470-96cd-87ae45869a2c",
                            TwoFactorEnabled = false,
                            UserName = "197741"
                        },
                        new
                        {
                            Id = 35,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=964",
                            ConcurrencyStamp = "6f0fb00c-41c3-41f0-91ca-53c35aa1ed24",
                            Email = "1022250@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "1022250@GMAIL.COM",
                            NormalizedUserName = "102225",
                            PasswordHash = "AQAAAAIAAYagAAAAEF03HGQaKcW12laKPODrI0Pdx+44eU+k20GWpEfBojZFaxpTEdX4hx85vV/ecRx5ig==",
                            PhoneNumber = "025 0310 7664",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "57ee9129-bdd2-4fb4-bf5a-dfff22693a3f",
                            TwoFactorEnabled = false,
                            UserName = "102225"
                        },
                        new
                        {
                            Id = 36,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=556",
                            ConcurrencyStamp = "07bbea1f-3296-45c5-8034-562d664afa55",
                            Email = "20671145@yahoo.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "20671145@YAHOO.COM",
                            NormalizedUserName = "206711",
                            PasswordHash = "AQAAAAIAAYagAAAAEAboiXZ0WCK5DKPHi+UUpfCljERpyc8THALItJTNZnNz3znVwbB69YhGSIENdHYT8Q==",
                            PhoneNumber = "020 5458 5311",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "c9607497-d610-427c-9b07-62bbb7e08954",
                            TwoFactorEnabled = false,
                            UserName = "206711"
                        },
                        new
                        {
                            Id = 37,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=450",
                            ConcurrencyStamp = "f6b59a95-2012-48a7-8084-0a26c9205013",
                            Email = "111196_Doan@hotmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "111196_DOAN@HOTMAIL.COM",
                            NormalizedUserName = "111196",
                            PasswordHash = "AQAAAAIAAYagAAAAEK/tVgtC9Y+EdCKB2sSch4E2r5vDA1l/xS1VkRncWk/zBh7weGwHppfD/4HuzrF6YQ==",
                            PhoneNumber = "0240 5953 0781",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "52253010-d747-4e4d-b95c-c32eb2ae61ca",
                            TwoFactorEnabled = false,
                            UserName = "111196"
                        },
                        new
                        {
                            Id = 38,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=602",
                            ConcurrencyStamp = "85131c3a-096e-4d6a-8219-e5696c717608",
                            Email = "215681.Tang76@hotmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "215681.TANG76@HOTMAIL.COM",
                            NormalizedUserName = "215681",
                            PasswordHash = "AQAAAAIAAYagAAAAEA3aPL7v58rlM/difEbKZLChB//ZCpGJhrekf7gq3/eLR2lJufRurLKX6ZxDfFMtTg==",
                            PhoneNumber = "0256 2217 2578",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "b18fc853-f492-4193-a9c1-f3d0e2d33634",
                            TwoFactorEnabled = false,
                            UserName = "215681"
                        },
                        new
                        {
                            Id = 39,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=278",
                            ConcurrencyStamp = "5a634852-dba6-4360-a94e-5d1845aaeed5",
                            Email = "120166_Pham64@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "120166_PHAM64@GMAIL.COM",
                            NormalizedUserName = "120166",
                            PasswordHash = "AQAAAAIAAYagAAAAEDhAzhxbQjg5epJlsyK0XtEzV6FRgybaOlRBm8vrnGZqbgZTxFtHJ7Q9QFJgYACNLg==",
                            PhoneNumber = "020 8609 4723",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "1799fa9a-03fc-4f94-92fe-8dc2eabc474a",
                            TwoFactorEnabled = false,
                            UserName = "120166"
                        },
                        new
                        {
                            Id = 40,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=734",
                            ConcurrencyStamp = "65868502-5823-444b-960c-14cabdb7adb9",
                            Email = "22465126@yahoo.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "22465126@YAHOO.COM",
                            NormalizedUserName = "224651",
                            PasswordHash = "AQAAAAIAAYagAAAAEP25/KxYYR+5fPxgSsjf3CiGCzpcc55NtyNrzDxN3BqPJHk87QO+ZfmD3v+/IFmURQ==",
                            PhoneNumber = "0285 9076 1290",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "088a7397-f627-46b1-9e40-d278953d5358",
                            TwoFactorEnabled = false,
                            UserName = "224651"
                        });
                });

            modelBuilder.Entity("UITEventAPI.Application.Infrastructure.Identity.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RefreshTokenId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("ExpiryDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UITEventAPI.Application.Domain.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Events.Event", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "LastModifiedByUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UITEventAPI.Application.Domain.UniversityUnit.UniversityUnit", "UniversityUnit")
                        .WithMany("HostedEvents")
                        .HasForeignKey("UniversityUnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("LastModifiedByUser");

                    b.Navigation("UniversityUnit");
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Events.EventImage", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Events.Event", "Event")
                        .WithMany("Images")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Events.EventRegistration", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UITEventAPI.Application.Domain.Events.Event", "Event")
                        .WithMany("Registrations")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "LastModifiedByUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UITEventAPI.Application.Domain.Students.Student", "Student")
                        .WithMany("RegisteredEvents")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("Event");

                    b.Navigation("LastModifiedByUser");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Students.Student", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "LastModifiedByUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "User")
                        .WithOne()
                        .HasForeignKey("UITEventAPI.Application.Domain.Students.Student", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("LastModifiedByUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.UniversityUnit.UniversityUnit", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "LastModifiedByUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "User")
                        .WithOne()
                        .HasForeignKey("UITEventAPI.Application.Domain.UniversityUnit.UniversityUnit", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("LastModifiedByUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UITEventAPI.Application.Infrastructure.Identity.RefreshToken", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("User");
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Events.Event", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Registrations");
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Students.Student", b =>
                {
                    b.Navigation("RegisteredEvents");
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.UniversityUnit.UniversityUnit", b =>
                {
                    b.Navigation("HostedEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
