// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UITEventAPI.Application.Infrastructure.Data;

#nullable disable

namespace UITEventAPI.Application.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240620214921_AddSeedData")]
    partial class AddSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 11,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 12,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 13,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 14,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 15,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 16,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 17,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 18,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 19,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 20,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 21,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 22,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 23,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 24,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 25,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 26,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 27,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 28,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 29,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 30,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 31,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 32,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 33,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 34,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 35,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 36,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 37,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 38,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 39,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 40,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Events.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset>("DeletedWhen")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FormUrl")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxAttendees")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(400)");

                    b.Property<int>("TrainingPoint")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UniversityUnitId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("EventId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("LastModifiedByUserId");

                    b.HasIndex("UniversityUnitId");

                    b.ToTable("Events", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedWhen = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Nước nha cái ừ một. Quê quần bàn năm thương. Nón nước đâu đập nhà bạn phá tôi. Trời leo khâu dép nón.",
                            EndDate = new DateTime(2024, 7, 11, 0, 7, 19, 808, DateTimeKind.Local).AddTicks(3303),
                            FormUrl = "http://thiênthêu.info",
                            IsDeleted = false,
                            IsPublished = true,
                            Location = "296 Đông Nghi Mountain, Hậu Giang, Palestine",
                            MaxAttendees = 48,
                            StartDate = new DateTime(2024, 6, 11, 5, 58, 16, 966, DateTimeKind.Local).AddTicks(3036),
                            Title = "Thế tàu chết bàn.",
                            TrainingPoint = 5,
                            Type = "Workshop",
                            UniversityUnitId = 7
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedWhen = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Đã đỏ nhà. Nón mua lỗi đâu hết. Chín lỗi núi tui bàn. Nha áo chìm đồng nha ờ thôi gió quần được. Đâu á ba ba xanh ruộng khâu đang. Thôi lầu cái thương gì núi.",
                            EndDate = new DateTime(2023, 4, 25, 22, 54, 29, 473, DateTimeKind.Local).AddTicks(3920),
                            FormUrl = "https://tùngquang.info",
                            IsDeleted = false,
                            IsPublished = false,
                            Location = "8350 Phương Loan Ports, Trà Vinh, Vatican",
                            MaxAttendees = 23,
                            StartDate = new DateTime(2023, 4, 12, 23, 36, 9, 750, DateTimeKind.Local).AddTicks(7589),
                            Title = "Xe phá quê thế bảy bạn khoảng mượn đang.",
                            TrainingPoint = 5,
                            Type = "Webinar",
                            UniversityUnitId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedWhen = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Thôi nhà xanh tui áo ờ hết bơi thì máy. Bè mướn em xanh hết hương khoan đỏ chỉ. Xanh sáu một xanh biết áo. Tím ác máy ghế tui chỉ mây thương lầu độc.",
                            EndDate = new DateTime(2023, 10, 19, 6, 16, 54, 515, DateTimeKind.Local).AddTicks(9757),
                            FormUrl = "https://sơnquân.com",
                            IsDeleted = false,
                            IsPublished = false,
                            Location = "0771 Nguyễn Squares, Cao Bằng, Bénin",
                            MaxAttendees = 44,
                            StartDate = new DateTime(2023, 10, 3, 15, 9, 7, 900, DateTimeKind.Local).AddTicks(5372),
                            Title = "Áo hàng tô khâu viết.",
                            TrainingPoint = 4,
                            Type = "Workshop",
                            UniversityUnitId = 7
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedWhen = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Nhà chỉ hết vàng chỉ tàu hết. Thôi trăng ghế độc đâu nha làm phá bàn. Ghế đỏ bơi đâu á.",
                            EndDate = new DateTime(2022, 8, 17, 9, 52, 53, 405, DateTimeKind.Local).AddTicks(3609),
                            FormUrl = "https://phươngtrang.com.vn",
                            IsDeleted = false,
                            IsPublished = false,
                            Location = "47036 Ðắc Trọng Stream, Kon Tum, Samoa",
                            MaxAttendees = 46,
                            StartDate = new DateTime(2022, 8, 6, 18, 6, 2, 204, DateTimeKind.Local).AddTicks(6501),
                            Title = "Hương may đạp đang không áo khoan tàu ghét.",
                            TrainingPoint = 1,
                            Type = "Other",
                            UniversityUnitId = 9
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedWhen = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Anh thì đồng làm gì gì bè đá ruộng đâu. Một bè gì mây hết vẽ được mượn hết. Thế ờ chết bảy thế cửa đồng phá tôi tô.",
                            EndDate = new DateTime(2022, 11, 27, 6, 56, 29, 96, DateTimeKind.Local).AddTicks(7455),
                            FormUrl = "http://ngọcquyên.info",
                            IsDeleted = false,
                            IsPublished = false,
                            Location = "056 Dương Extensions, Yên Bái, Venezuela",
                            MaxAttendees = 55,
                            StartDate = new DateTime(2022, 11, 16, 23, 32, 34, 722, DateTimeKind.Local).AddTicks(5914),
                            Title = "Năm ba thích thuyền chìm.",
                            TrainingPoint = 5,
                            Type = "Seminar",
                            UniversityUnitId = 3
                        });
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Events.EventImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id")
                        .HasName("EventImageId");

                    b.HasIndex("EventId");

                    b.ToTable("EventImages", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EventId = 2,
                            ImageUrl = "https://picsum.photos/640/480/?image=120"
                        },
                        new
                        {
                            Id = 2,
                            EventId = 4,
                            ImageUrl = "https://picsum.photos/640/480/?image=438"
                        },
                        new
                        {
                            Id = 3,
                            EventId = 2,
                            ImageUrl = "https://picsum.photos/640/480/?image=756"
                        },
                        new
                        {
                            Id = 4,
                            EventId = 5,
                            ImageUrl = "https://picsum.photos/640/480/?image=1075"
                        },
                        new
                        {
                            Id = 5,
                            EventId = 2,
                            ImageUrl = "https://picsum.photos/640/480/?image=308"
                        },
                        new
                        {
                            Id = 6,
                            EventId = 5,
                            ImageUrl = "https://picsum.photos/640/480/?image=626"
                        },
                        new
                        {
                            Id = 7,
                            EventId = 2,
                            ImageUrl = "https://picsum.photos/640/480/?image=945"
                        },
                        new
                        {
                            Id = 8,
                            EventId = 5,
                            ImageUrl = "https://picsum.photos/640/480/?image=178"
                        },
                        new
                        {
                            Id = 9,
                            EventId = 3,
                            ImageUrl = "https://picsum.photos/640/480/?image=497"
                        },
                        new
                        {
                            Id = 10,
                            EventId = 5,
                            ImageUrl = "https://picsum.photos/640/480/?image=815"
                        },
                        new
                        {
                            Id = 11,
                            EventId = 3,
                            ImageUrl = "https://picsum.photos/640/480/?image=48"
                        },
                        new
                        {
                            Id = 12,
                            EventId = 5,
                            ImageUrl = "https://picsum.photos/640/480/?image=367"
                        },
                        new
                        {
                            Id = 13,
                            EventId = 3,
                            ImageUrl = "https://picsum.photos/640/480/?image=685"
                        },
                        new
                        {
                            Id = 14,
                            EventId = 1,
                            ImageUrl = "https://picsum.photos/640/480/?image=1003"
                        },
                        new
                        {
                            Id = 15,
                            EventId = 3,
                            ImageUrl = "https://picsum.photos/640/480/?image=237"
                        },
                        new
                        {
                            Id = 16,
                            EventId = 1,
                            ImageUrl = "https://picsum.photos/640/480/?image=555"
                        },
                        new
                        {
                            Id = 17,
                            EventId = 4,
                            ImageUrl = "https://picsum.photos/640/480/?image=873"
                        },
                        new
                        {
                            Id = 18,
                            EventId = 1,
                            ImageUrl = "https://picsum.photos/640/480/?image=107"
                        },
                        new
                        {
                            Id = 19,
                            EventId = 4,
                            ImageUrl = "https://picsum.photos/640/480/?image=425"
                        },
                        new
                        {
                            Id = 20,
                            EventId = 1,
                            ImageUrl = "https://picsum.photos/640/480/?image=743"
                        });
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Events.EventRegistration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AttendedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAttended")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRegistered")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("EventRegistrationId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("EventId");

                    b.HasIndex("LastModifiedByUserId");

                    b.HasIndex("StudentId");

                    b.ToTable("EventRegistrations", null, t =>
                        {
                            t.HasCheckConstraint("CK_EventRegistration_AttendedDate_GreaterThan_RegistrationDate", "AttendedDate IS NULL OR RegisterDate IS NULL OR AttendedDate >= RegisterDate");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 3, 12, 1, 40, 53, 669, DateTimeKind.Local).AddTicks(7347),
                            StudentId = 4
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 6, 16, 17, 8, 19, 311, DateTimeKind.Local).AddTicks(7436),
                            StudentId = 12
                        },
                        new
                        {
                            Id = 3,
                            AttendedDate = new DateTime(2023, 4, 9, 2, 27, 13, 203, DateTimeKind.Local).AddTicks(3112),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 4, 4, 3, 39, 50, 905, DateTimeKind.Local).AddTicks(4972),
                            StudentId = 21
                        },
                        new
                        {
                            Id = 4,
                            AttendedDate = new DateTime(2022, 10, 21, 3, 28, 24, 323, DateTimeKind.Local).AddTicks(961),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 10, 20, 19, 39, 59, 314, DateTimeKind.Local).AddTicks(9565),
                            StudentId = 29
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 2, 28, 5, 38, 48, 141, DateTimeKind.Local).AddTicks(2597),
                            StudentId = 9
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 11, 13, 16, 45, 6, 800, DateTimeKind.Local).AddTicks(2281),
                            StudentId = 17
                        },
                        new
                        {
                            Id = 7,
                            AttendedDate = new DateTime(2023, 3, 30, 21, 22, 13, 694, DateTimeKind.Local).AddTicks(6682),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 3, 23, 7, 37, 45, 377, DateTimeKind.Local).AddTicks(223),
                            StudentId = 26
                        },
                        new
                        {
                            Id = 8,
                            AttendedDate = new DateTime(2022, 11, 9, 19, 20, 52, 840, DateTimeKind.Local).AddTicks(8846),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 10, 8, 13, 50, 14, 285, DateTimeKind.Local).AddTicks(4996),
                            StudentId = 5
                        },
                        new
                        {
                            Id = 9,
                            AttendedDate = new DateTime(2023, 8, 22, 15, 32, 32, 512, DateTimeKind.Local).AddTicks(6372),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 3,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 8, 7, 3, 59, 21, 206, DateTimeKind.Local).AddTicks(812),
                            StudentId = 14
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 11, 1, 10, 55, 21, 770, DateTimeKind.Local).AddTicks(7712),
                            StudentId = 22
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 3,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 8, 31, 1, 4, 28, 691, DateTimeKind.Local).AddTicks(3528),
                            StudentId = 2
                        },
                        new
                        {
                            Id = 12,
                            AttendedDate = new DateTime(2022, 10, 28, 13, 18, 24, 685, DateTimeKind.Local).AddTicks(5080),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 9, 26, 8, 0, 29, 256, DateTimeKind.Local).AddTicks(428),
                            StudentId = 10
                        },
                        new
                        {
                            Id = 13,
                            AttendedDate = new DateTime(2023, 9, 24, 15, 42, 55, 756, DateTimeKind.Local).AddTicks(3755),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 3,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 9, 23, 22, 9, 36, 176, DateTimeKind.Local).AddTicks(6244),
                            StudentId = 19
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 5, 14, 11, 31, 18, 985, DateTimeKind.Local).AddTicks(266),
                            StudentId = 27
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 3,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 8, 18, 19, 14, 43, 661, DateTimeKind.Local).AddTicks(8959),
                            StudentId = 7
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 6, 7, 8, 36, 26, 470, DateTimeKind.Local).AddTicks(2981),
                            StudentId = 15
                        },
                        new
                        {
                            Id = 17,
                            AttendedDate = new DateTime(2022, 8, 4, 3, 33, 43, 337, DateTimeKind.Local).AddTicks(79),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 7, 15, 19, 16, 45, 451, DateTimeKind.Local).AddTicks(2804),
                            StudentId = 24
                        },
                        new
                        {
                            Id = 18,
                            AttendedDate = new DateTime(2024, 5, 15, 13, 15, 3, 213, DateTimeKind.Local).AddTicks(5667),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 5, 2, 5, 41, 33, 955, DateTimeKind.Local).AddTicks(5697),
                            StudentId = 3
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 6, 9, 16, 21, 52, 936, DateTimeKind.Local).AddTicks(5520),
                            StudentId = 12
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 5, 26, 2, 46, 41, 440, DateTimeKind.Local).AddTicks(8413),
                            StudentId = 20
                        },
                        new
                        {
                            Id = 21,
                            AttendedDate = new DateTime(2022, 7, 27, 1, 25, 43, 624, DateTimeKind.Local).AddTicks(843),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 7, 3, 13, 27, 0, 421, DateTimeKind.Local).AddTicks(8236),
                            StudentId = 29
                        },
                        new
                        {
                            Id = 22,
                            AttendedDate = new DateTime(2023, 2, 28, 10, 46, 46, 681, DateTimeKind.Local).AddTicks(6142),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 2, 21, 10, 29, 54, 645, DateTimeKind.Local).AddTicks(2412),
                            StudentId = 8
                        },
                        new
                        {
                            Id = 23,
                            AttendedDate = new DateTime(2022, 8, 2, 12, 38, 58, 995, DateTimeKind.Local).AddTicks(9692),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 7, 27, 10, 32, 7, 907, DateTimeKind.Local).AddTicks(951),
                            StudentId = 17
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 3, 16, 12, 28, 51, 881, DateTimeKind.Local).AddTicks(37),
                            StudentId = 25
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 6, 21, 7, 37, 15, 392, DateTimeKind.Local).AddTicks(3667),
                            StudentId = 5
                        },
                        new
                        {
                            Id = 26,
                            AttendedDate = new DateTime(2023, 4, 12, 17, 47, 4, 429, DateTimeKind.Local).AddTicks(5040),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 4, 8, 14, 27, 49, 116, DateTimeKind.Local).AddTicks(7662),
                            StudentId = 13
                        },
                        new
                        {
                            Id = 27,
                            AttendedDate = new DateTime(2022, 11, 3, 8, 37, 15, 752, DateTimeKind.Local).AddTicks(8034),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 10, 25, 10, 8, 55, 395, DateTimeKind.Local).AddTicks(5796),
                            StudentId = 22
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 3, 4, 16, 26, 46, 352, DateTimeKind.Local).AddTicks(5287),
                            StudentId = 1
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 9, 19, 7, 14, 2, 880, DateTimeKind.Local).AddTicks(8512),
                            StudentId = 10
                        },
                        new
                        {
                            Id = 30,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 3, 27, 18, 25, 43, 588, DateTimeKind.Local).AddTicks(2913),
                            StudentId = 18
                        },
                        new
                        {
                            Id = 31,
                            AttendedDate = new DateTime(2022, 10, 20, 5, 6, 38, 726, DateTimeKind.Local).AddTicks(1660),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 10, 13, 4, 19, 10, 366, DateTimeKind.Local).AddTicks(1227),
                            StudentId = 27
                        },
                        new
                        {
                            Id = 32,
                            AttendedDate = new DateTime(2023, 9, 15, 7, 39, 6, 448, DateTimeKind.Local).AddTicks(7938),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 3,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 8, 11, 18, 28, 17, 286, DateTimeKind.Local).AddTicks(7043),
                            StudentId = 6
                        },
                        new
                        {
                            Id = 33,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 11, 6, 1, 24, 17, 851, DateTimeKind.Local).AddTicks(3943),
                            StudentId = 15
                        },
                        new
                        {
                            Id = 34,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 3,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 9, 4, 15, 33, 24, 771, DateTimeKind.Local).AddTicks(9759),
                            StudentId = 24
                        },
                        new
                        {
                            Id = 35,
                            AttendedDate = new DateTime(2024, 4, 25, 13, 59, 22, 677, DateTimeKind.Local).AddTicks(7106),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 4, 25, 4, 55, 7, 580, DateTimeKind.Local).AddTicks(3781),
                            StudentId = 3
                        },
                        new
                        {
                            Id = 36,
                            AttendedDate = new DateTime(2023, 9, 30, 20, 56, 16, 861, DateTimeKind.Local).AddTicks(4839),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 3,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 9, 28, 12, 38, 32, 257, DateTimeKind.Local).AddTicks(2475),
                            StudentId = 12
                        },
                        new
                        {
                            Id = 37,
                            AttendedDate = new DateTime(2024, 6, 9, 4, 29, 36, 136, DateTimeKind.Local).AddTicks(187),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 5, 19, 2, 0, 15, 65, DateTimeKind.Local).AddTicks(6497),
                            StudentId = 20
                        },
                        new
                        {
                            Id = 38,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 3,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 8, 23, 9, 43, 39, 742, DateTimeKind.Local).AddTicks(5191),
                            StudentId = 29
                        },
                        new
                        {
                            Id = 39,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 4, 12, 23, 5, 22, 550, DateTimeKind.Local).AddTicks(9212),
                            StudentId = 8
                        },
                        new
                        {
                            Id = 40,
                            AttendedDate = new DateTime(2022, 7, 25, 0, 17, 2, 581, DateTimeKind.Local).AddTicks(4125),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 7, 20, 9, 45, 41, 531, DateTimeKind.Local).AddTicks(9035),
                            StudentId = 17
                        },
                        new
                        {
                            Id = 41,
                            AttendedDate = new DateTime(2024, 6, 1, 5, 26, 6, 825, DateTimeKind.Local).AddTicks(1244),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 5, 6, 20, 10, 30, 36, DateTimeKind.Local).AddTicks(1928),
                            StudentId = 25
                        },
                        new
                        {
                            Id = 42,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 6, 14, 6, 50, 49, 17, DateTimeKind.Local).AddTicks(1751),
                            StudentId = 5
                        },
                        new
                        {
                            Id = 43,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 5, 30, 17, 15, 37, 521, DateTimeKind.Local).AddTicks(4644),
                            StudentId = 13
                        },
                        new
                        {
                            Id = 44,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 7, 8, 3, 55, 56, 502, DateTimeKind.Local).AddTicks(4467),
                            StudentId = 22
                        },
                        new
                        {
                            Id = 45,
                            AttendedDate = new DateTime(2023, 3, 21, 23, 46, 30, 984, DateTimeKind.Local).AddTicks(4325),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 2, 25, 21, 17, 52, 856, DateTimeKind.Local).AddTicks(5102),
                            StudentId = 1
                        },
                        new
                        {
                            Id = 46,
                            AttendedDate = new DateTime(2022, 8, 6, 14, 35, 17, 390, DateTimeKind.Local).AddTicks(2622),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 8, 1, 1, 1, 3, 987, DateTimeKind.Local).AddTicks(7183),
                            StudentId = 10
                        },
                        new
                        {
                            Id = 47,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 3, 20, 23, 16, 50, 92, DateTimeKind.Local).AddTicks(2727),
                            StudentId = 18
                        },
                        new
                        {
                            Id = 48,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 10, 6, 3, 32, 43, 990, DateTimeKind.Local).AddTicks(9311),
                            StudentId = 27
                        },
                        new
                        {
                            Id = 49,
                            AttendedDate = new DateTime(2023, 3, 5, 2, 27, 16, 652, DateTimeKind.Local).AddTicks(9315),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 2, 14, 1, 15, 47, 328, DateTimeKind.Local).AddTicks(352),
                            StudentId = 6
                        },
                        new
                        {
                            Id = 50,
                            AttendedDate = new DateTime(2022, 11, 13, 0, 52, 49, 39, DateTimeKind.Local).AddTicks(7622),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 10, 30, 0, 37, 51, 476, DateTimeKind.Local).AddTicks(2027),
                            StudentId = 15
                        });
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Students.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("LastModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("StudentCode")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("StudentId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("LastModifiedByUserId");

                    b.HasIndex("StudentCode")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Students", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1954, 12, 25, 2, 0, 15, 906, DateTimeKind.Local).AddTicks(6436),
                            FirstName = "Minh Cảnh",
                            LastName = "Lâm",
                            StudentCode = 117008,
                            UserId = 19
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2004, 2, 4, 2, 39, 42, 897, DateTimeKind.Local).AddTicks(6163),
                            FirstName = "Ðông Nguyên",
                            LastName = "Hà",
                            StudentCode = 114850,
                            UserId = 34
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2002, 12, 16, 5, 44, 57, 334, DateTimeKind.Local).AddTicks(1939),
                            FirstName = "Tú Tâm",
                            LastName = "Hoàng",
                            StudentCode = 256865,
                            UserId = 20
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1985, 5, 7, 6, 33, 53, 639, DateTimeKind.Local).AddTicks(9411),
                            FirstName = "Phương An",
                            LastName = "Bùi",
                            StudentCode = 282592,
                            UserId = 36
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2000, 12, 6, 9, 29, 38, 761, DateTimeKind.Local).AddTicks(3607),
                            FirstName = "Hải Hà",
                            LastName = "Đoàn",
                            StudentCode = 189498,
                            UserId = 22
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1995, 5, 16, 15, 43, 54, 975, DateTimeKind.Local).AddTicks(7158),
                            FirstName = "Ái Nhân",
                            LastName = "Phùng",
                            StudentCode = 205913,
                            UserId = 37
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1998, 11, 27, 13, 14, 20, 188, DateTimeKind.Local).AddTicks(5190),
                            FirstName = "Thanh Trang",
                            LastName = "Nguyễn",
                            StudentCode = 233256,
                            UserId = 23
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1975, 5, 17, 11, 35, 42, 433, DateTimeKind.Local).AddTicks(968),
                            FirstName = "Hữu Minh",
                            LastName = "Phan",
                            StudentCode = 256344,
                            UserId = 38
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1996, 11, 17, 16, 59, 1, 615, DateTimeKind.Local).AddTicks(6787),
                            FirstName = "Bình Quân",
                            LastName = "Hồ",
                            StudentCode = 279431,
                            UserId = 24
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1970, 11, 13, 6, 51, 22, 329, DateTimeKind.Local).AddTicks(2463),
                            FirstName = "Thư Sương",
                            LastName = "Trịnh",
                            StudentCode = 102518,
                            UserId = 40
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1994, 11, 8, 20, 43, 43, 42, DateTimeKind.Local).AddTicks(8207),
                            FirstName = "Mạnh Dũng",
                            LastName = "Tô",
                            StudentCode = 214216,
                            UserId = 25
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1960, 5, 13, 22, 10, 36, 609, DateTimeKind.Local).AddTicks(1957),
                            FirstName = "Ðình Quảng",
                            LastName = "Lê",
                            StudentCode = 175876,
                            UserId = 39
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1992, 10, 30, 0, 28, 24, 469, DateTimeKind.Local).AddTicks(9666),
                            FirstName = "Tâm Ðoan",
                            LastName = "Tăng",
                            StudentCode = 188560,
                            UserId = 26
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1991, 8, 16, 2, 4, 47, 351, DateTimeKind.Local).AddTicks(5053),
                            FirstName = "Nhật Linh",
                            LastName = "Dương",
                            StudentCode = 226078,
                            UserId = 12
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1980, 5, 20, 9, 6, 58, 533, DateTimeKind.Local).AddTicks(8575),
                            FirstName = "Gia Thịnh",
                            LastName = "Đinh",
                            StudentCode = 296006,
                            UserId = 28
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1972, 11, 16, 5, 58, 58, 93, DateTimeKind.Local).AddTicks(8068),
                            FirstName = "Yến Nhi",
                            LastName = "Hà",
                            StudentCode = 165934,
                            UserId = 14
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1988, 10, 11, 7, 57, 47, 324, DateTimeKind.Local).AddTicks(2568),
                            FirstName = "Thanh Ngân",
                            LastName = "Lý",
                            StudentCode = 264131,
                            UserId = 29
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2004, 2, 18, 9, 53, 8, 836, DateTimeKind.Local).AddTicks(914),
                            FirstName = "Hữu Ðạt",
                            LastName = "Bùi",
                            StudentCode = 287218,
                            UserId = 15
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1986, 10, 2, 11, 42, 28, 751, DateTimeKind.Local).AddTicks(3828),
                            FirstName = "Bảo Thạch",
                            LastName = "Đào",
                            StudentCode = 175719,
                            UserId = 31
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1985, 5, 21, 13, 47, 19, 578, DateTimeKind.Local).AddTicks(3816),
                            FirstName = "Thúy Minh",
                            LastName = "Phùng",
                            StudentCode = 245648,
                            UserId = 16
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1984, 9, 22, 15, 27, 10, 178, DateTimeKind.Local).AddTicks(5172),
                            FirstName = "Mỹ Hiệp",
                            LastName = "Nguyễn",
                            StudentCode = 115576,
                            UserId = 32
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1966, 8, 22, 17, 41, 30, 320, DateTimeKind.Local).AddTicks(6751),
                            FirstName = "Ðình Hợp",
                            LastName = "Phan",
                            StudentCode = 185505,
                            UserId = 17
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1982, 9, 13, 19, 11, 51, 605, DateTimeKind.Local).AddTicks(6483),
                            FirstName = "Tuệ Mẫn",
                            LastName = "Hồ",
                            StudentCode = 202655,
                            UserId = 33
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1997, 11, 23, 21, 35, 41, 62, DateTimeKind.Local).AddTicks(9659),
                            FirstName = "Như Ngọc",
                            LastName = "Vương",
                            StudentCode = 125361,
                            UserId = 18
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1980, 9, 3, 22, 56, 33, 32, DateTimeKind.Local).AddTicks(7837),
                            FirstName = "Gia Huy",
                            LastName = "Tô",
                            StudentCode = 195290,
                            UserId = 30
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1954, 8, 30, 12, 48, 53, 746, DateTimeKind.Local).AddTicks(3461),
                            FirstName = "Việt Hoàng",
                            LastName = "Trần",
                            StudentCode = 271918,
                            UserId = 21
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1978, 8, 26, 2, 41, 14, 459, DateTimeKind.Local).AddTicks(9120),
                            FirstName = "Thanh Hạnh",
                            LastName = "Tăng",
                            StudentCode = 200785,
                            UserId = 35
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2002, 8, 21, 16, 33, 35, 173, DateTimeKind.Local).AddTicks(4775),
                            FirstName = "Hướng Dương",
                            LastName = "Ngô",
                            StudentCode = 162445,
                            UserId = 13
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1976, 8, 16, 6, 25, 55, 887, DateTimeKind.Local).AddTicks(412),
                            FirstName = "Bảo Hiển",
                            LastName = "Đinh",
                            StudentCode = 141179,
                            UserId = 27
                        });
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Units.UniversityUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LastModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("UniversityUnitId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("LastModifiedByUserId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UniversityUnits", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bàn độc việc nước nha cái ừ một tám.",
                            Name = "Trần and Sons",
                            UserId = 10
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bảy bạn khoảng.",
                            Name = "Bùi, Lý and Hà",
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khâu viết một nước.",
                            Name = "Trịnh Group",
                            UserId = 4
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Không áo khoan.",
                            Name = "Hà, Dương and Bùi",
                            UserId = 6
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Thuyền chìm đá nước anh thì đồng làm.",
                            Name = "Vũ - Phan",
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bạn anh khoan giày lầu dép đá giết em viết.",
                            Name = "Đào, Hà and Phùng",
                            UserId = 8
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Nghỉ tủ á.",
                            Name = "Mai - Vương",
                            UserId = 9
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chỉ lầu khoan ruộng mượn vẽ dép là con.",
                            Name = "Lý, Đặng and Phan",
                            UserId = 5
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ba ác xuồng ngọt đâu anh.",
                            Name = "Đỗ - Nguyễn",
                            UserId = 7
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sáu nhà thuyền mướn ruộng bàn bốn đỏ.",
                            Name = "Đinh, Đinh and Trịnh",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AvatarUrl")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id")
                        .HasName("UserId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=764",
                            ConcurrencyStamp = "e89a4d07-ccb0-469a-b349-29cd63345a94",
                            Email = "NguyetAnh_Tran_Do@yahoo.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "NGUYETANH_TRAN_DO@YAHOO.COM",
                            NormalizedUserName = "NGUYETANH_TRAN",
                            PasswordHash = "AQAAAAIAAYagAAAAEDj/V75yrAxJaJGVi+77dr5lFtH7lCRawtrfiqHxy/7vB7Ag5FM4hYI+DVhBHfpB0g==",
                            PhoneNumber = "026 0239 6626",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "5d6c7bcf-4978-4cf4-8fef-b7954bd11be9",
                            TwoFactorEnabled = false,
                            UserName = "NguyetAnh_Tran"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=96",
                            ConcurrencyStamp = "960eafdd-0c88-46f8-8f8f-dab896c028d7",
                            Email = "NghiQuyen98.Vu22@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "NGHIQUYEN98.VU22@GMAIL.COM",
                            NormalizedUserName = "NGHIQUYEN98",
                            PasswordHash = "AQAAAAIAAYagAAAAEIdnlldOMW2RCYww5Lox4RTcqGtHxQcaFS6amYphE3uPOjPsyFK6rHf4TxYRWGtfaQ==",
                            PhoneNumber = "027 0053 2727",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "6d782594-73b3-428f-a9b4-128f3622775b",
                            TwoFactorEnabled = false,
                            UserName = "NghiQuyen98"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=633",
                            ConcurrencyStamp = "05e75069-5ca8-4177-99ef-47be626b487b",
                            Email = "PhuongGiang.Trinh56.Phan37@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "PHUONGGIANG.TRINH56.PHAN37@GMAIL.COM",
                            NormalizedUserName = "PHUONGGIANG.TRINH56",
                            PasswordHash = "AQAAAAIAAYagAAAAEB1aJlCdno3BNnvj4D5TVVq464BA04u2eLaKsnMrl+aEVgEs9cfS6GmcqfcRoEkn+A==",
                            PhoneNumber = "0286 0091 8742",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "a3a103fe-540f-4cf8-8088-d7b16ee3ceb5",
                            TwoFactorEnabled = false,
                            UserName = "PhuongGiang.Trinh56"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=378",
                            ConcurrencyStamp = "55d2ad22-d6cc-4993-8962-4050afe6a8bb",
                            Email = "QuangDanh.Ha.Nguyen47@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "QUANGDANH.HA.NGUYEN47@GMAIL.COM",
                            NormalizedUserName = "QUANGDANH.HA",
                            PasswordHash = "AQAAAAIAAYagAAAAEK6eBxttM+9qAR2f2e7uE0x80Up0pw1tQknXvbQY4dhHSLV3ly1FkROkO9kE1AdkYw==",
                            PhoneNumber = "0225 3575 5478",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "1da0f84f-740b-4cdb-93f1-3b779d9fc456",
                            TwoFactorEnabled = false,
                            UserName = "QuangDanh.Ha"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=271",
                            ConcurrencyStamp = "8f658ec8-9623-4ded-a8fc-34e2d973ce2c",
                            Email = "ThanhPhuong6295@yahoo.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "THANHPHUONG6295@YAHOO.COM",
                            NormalizedUserName = "THANHPHUONG62",
                            PasswordHash = "AQAAAAIAAYagAAAAELRNvSnjdxHDuX1HiaxURUOY+RaZQ68ManvBl1nPXotLnoaF8XjVuKUCVp1WlGH+7Q==",
                            PhoneNumber = "0219 3004 1908",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "08e637f1-0c21-43e2-8aee-33710b822204",
                            TwoFactorEnabled = false,
                            UserName = "ThanhPhuong62"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=692",
                            ConcurrencyStamp = "bc35357c-3967-49c9-a0f5-4feeed68863c",
                            Email = "TanThanh_Dao91_Dao@hotmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "TANTHANH_DAO91_DAO@HOTMAIL.COM",
                            NormalizedUserName = "TANTHANH_DAO91",
                            PasswordHash = "AQAAAAIAAYagAAAAELe1WQ3UK9zAWn9sPxUISD/OP5yuFOj2dt37q0M+soDo1aTWxkSgQICjjWmLABpPwg==",
                            PhoneNumber = "027 1751 7378",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "502bd6ca-df72-438d-832b-c3f022dba566",
                            TwoFactorEnabled = false,
                            UserName = "TanThanh_Dao91"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=27",
                            ConcurrencyStamp = "00a7100d-c79d-4829-bce6-c01ffa1900d6",
                            Email = "ThuyHuong.Mai95@yahoo.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "THUYHUONG.MAI95@YAHOO.COM",
                            NormalizedUserName = "THUYHUONG.MAI",
                            PasswordHash = "AQAAAAIAAYagAAAAEDCglsOSJEJ05p/yoPBKcwfjUtZDqG+yxKaWSQaT+G0j+ihMXv5OnMfe5YgcTYMgkA==",
                            PhoneNumber = "0284 9418 4838",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "53276056-9d60-4109-b6a8-6434ab6665d4",
                            TwoFactorEnabled = false,
                            UserName = "ThuyHuong.Mai"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=447",
                            ConcurrencyStamp = "142b7a27-0c34-44a6-84e3-8728cf1f822e",
                            Email = "ThienPhuoc.Ly.Duong@hotmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "THIENPHUOC.LY.DUONG@HOTMAIL.COM",
                            NormalizedUserName = "THIENPHUOC.LY",
                            PasswordHash = "AQAAAAIAAYagAAAAEMlyjkmND1BdWOJQUJVQj73vKqcwZS6QOscO/u/5bABaBXBVDl+IEspD21ywMNE87g==",
                            PhoneNumber = "0221 7165 0298",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "09720120-1e4f-4597-9cab-bbede1b735db",
                            TwoFactorEnabled = false,
                            UserName = "ThienPhuoc.Ly"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=13",
                            ConcurrencyStamp = "74394116-bb3f-4cb4-98e7-9ff19c1cb9dd",
                            Email = "TuyetHoa47_Do9@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "TUYETHOA47_DO9@GMAIL.COM",
                            NormalizedUserName = "TUYETHOA47",
                            PasswordHash = "AQAAAAIAAYagAAAAEH+s9kSa9OFctQcqzI6V/je5i4diC7jjAh1BY6O2cC1MBCazbN7769O987BEFeQNhQ==",
                            PhoneNumber = "0294 8126 6597",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "363561a8-2fe7-477c-a179-85271561e14e",
                            TwoFactorEnabled = false,
                            UserName = "TuyetHoa47"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=157",
                            ConcurrencyStamp = "00bcfbc3-8dc3-474c-b1e3-fdd5ddcaf589",
                            Email = "TuanHoang_Dinh72.Bui@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "TUANHOANG_DINH72.BUI@GMAIL.COM",
                            NormalizedUserName = "TUANHOANG_DINH72",
                            PasswordHash = "AQAAAAIAAYagAAAAEFgidT4VhiO0yqhRjhzZNbpyG582RN0oBvnnwQ/cNsHyBjAD65OOnEKvFt6TQwGpIQ==",
                            PhoneNumber = "0262 5692 0191",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "641e8ec5-5b53-48b5-a391-d43077b2220f",
                            TwoFactorEnabled = false,
                            UserName = "TuanHoang_Dinh72"
                        },
                        new
                        {
                            Id = 11,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=622",
                            ConcurrencyStamp = "d8daadca-a4fe-419e-84b5-4b4fd0cd7e3b",
                            Email = "VanThanh_Nguyen_Ly33@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "VANTHANH_NGUYEN_LY33@GMAIL.COM",
                            NormalizedUserName = "VANTHANH_NGUYEN",
                            PasswordHash = "AQAAAAIAAYagAAAAEGeMPMbeGqX6cV7M4/g4IUqyAwNx45djYIK4rTIslGYjsRJVYVp0wCrUobb+XhwGSA==",
                            PhoneNumber = "023 0116 9489",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "68818ab0-1010-4166-a510-62cbaf0dc3f8",
                            TwoFactorEnabled = false,
                            UserName = "VanThanh_Nguyen"
                        },
                        new
                        {
                            Id = 12,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=2",
                            ConcurrencyStamp = "4192881a-7a31-4e38-b7bc-304a099721e6",
                            Email = "XuanQuy1146@yahoo.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "XUANQUY1146@YAHOO.COM",
                            NormalizedUserName = "XUANQUY11",
                            PasswordHash = "AQAAAAIAAYagAAAAEN6K2LqPVQVM4jFcLndnpYgwGuBpTu9zpHKTyO25HVxQ3c3IznJ3t5iNys0dNzyi8w==",
                            PhoneNumber = "026 1887 3594",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "ad9b0ed8-2c9b-4346-84d1-aae1cda746fb",
                            TwoFactorEnabled = false,
                            UserName = "XuanQuy11"
                        },
                        new
                        {
                            Id = 13,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=40",
                            ConcurrencyStamp = "6dbcbece-7bc9-44da-a9ef-72093fc8155b",
                            Email = "AnLai.Doan7_Trinh6@hotmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ANLAI.DOAN7_TRINH6@HOTMAIL.COM",
                            NormalizedUserName = "ANLAI.DOAN7",
                            PasswordHash = "AQAAAAIAAYagAAAAEOnU/eC5x8686JBySdsVG7M2vbAjzv5V4fD3kT83VqncjVuZP+5lMM6QV2yr2hIlSQ==",
                            PhoneNumber = "0265 2013 0035",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "3788d094-b93a-4abf-9a99-a6d6e386f5d6",
                            TwoFactorEnabled = false,
                            UserName = "AnLai.Doan7"
                        },
                        new
                        {
                            Id = 14,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=797",
                            ConcurrencyStamp = "f4a69218-2b61-4073-8b2e-198c8547f9ad",
                            Email = "CamHuong_Truong46@yahoo.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "CAMHUONG_TRUONG46@YAHOO.COM",
                            NormalizedUserName = "CAMHUONG_TRUONG",
                            PasswordHash = "AQAAAAIAAYagAAAAECdzOmGX9j7f5F6Mxzs3B3WOOA/DSI9w3/gSFlgtMto1CylCFA7UfQ1ZswjNtPVCCQ==",
                            PhoneNumber = "0246 3277 7760",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "becf8cf5-a870-442a-8bd0-6b114c57594a",
                            TwoFactorEnabled = false,
                            UserName = "CamHuong_Truong"
                        },
                        new
                        {
                            Id = 15,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=133",
                            ConcurrencyStamp = "09875e1d-77af-476f-9942-40b99e51db00",
                            Email = "ChinhTruc75_Vuong@hotmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "CHINHTRUC75_VUONG@HOTMAIL.COM",
                            NormalizedUserName = "CHINHTRUC75",
                            PasswordHash = "AQAAAAIAAYagAAAAEH///90gKppfZd1UkIuTTIfhNHyEb3EvKgLl5ZjTYZH0GsLjADyK2MKb43UoCyY/sA==",
                            PhoneNumber = "0283 1924 3120",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "3cb19a5b-cb0c-4743-b73a-750002151d9d",
                            TwoFactorEnabled = false,
                            UserName = "ChinhTruc75"
                        },
                        new
                        {
                            Id = 16,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=553",
                            ConcurrencyStamp = "3fb1c046-e4a8-4dac-8214-3773227252ab",
                            Email = "HoangLan_Ngo42_Nguyen@yahoo.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "HOANGLAN_NGO42_NGUYEN@YAHOO.COM",
                            NormalizedUserName = "HOANGLAN_NGO42",
                            PasswordHash = "AQAAAAIAAYagAAAAEMRTu6ERl63QCO7uctvkQursQllL4UHJDFGvFFTZKeZC1tR4SlqXEwPmXdyScPIOoA==",
                            PhoneNumber = "020 9671 0591",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "33eebe9a-0b83-47b5-a2ca-97b3463e0bd2",
                            TwoFactorEnabled = false,
                            UserName = "HoangLan_Ngo42"
                        },
                        new
                        {
                            Id = 17,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=149",
                            ConcurrencyStamp = "daf599d6-f886-4b36-a9f4-d94bf4d5594b",
                            Email = "DucPhi.Lam_Bui@hotmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "DUCPHI.LAM_BUI@HOTMAIL.COM",
                            NormalizedUserName = "DUCPHI.LAM",
                            PasswordHash = "AQAAAAIAAYagAAAAEC37AlBufL4mhiGcTbZGVjO77iyn7DXE3DhLnrB1tMhBowXcIk6YJ50O1uE1aY9XDg==",
                            PhoneNumber = "025 8733 8605",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "9d198391-a5be-48c1-8690-e72c7522e208",
                            TwoFactorEnabled = false,
                            UserName = "DucPhi.Lam"
                        },
                        new
                        {
                            Id = 18,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=226",
                            ConcurrencyStamp = "b5b9744e-c9d7-4836-aaa3-5d5230e679af",
                            Email = "HongKhoi.Tran.Vu20@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "HONGKHOI.TRAN.VU20@GMAIL.COM",
                            NormalizedUserName = "HONGKHOI.TRAN",
                            PasswordHash = "AQAAAAIAAYagAAAAEBi5vKt7t+4KQjE82a+nx6DWCOJOmdNS+eQqCsNH6KP0Zc1WoijMkY8IvqBg7KvATQ==",
                            PhoneNumber = "0255 0852 4112",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "c42a3470-a4ae-4260-ba10-69164d2323b8",
                            TwoFactorEnabled = false,
                            UserName = "HongKhoi.Tran"
                        },
                        new
                        {
                            Id = 19,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=207",
                            ConcurrencyStamp = "46fb884c-18e6-4d6c-abd6-d53f499aa475",
                            Email = "HieuHoc61_Ly@hotmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "HIEUHOC61_LY@HOTMAIL.COM",
                            NormalizedUserName = "HIEUHOC61",
                            PasswordHash = "AQAAAAIAAYagAAAAELVCShepxPr8TJgvT7/VT5Rz8z3N9bvUjoTkycD3TeK1xoBPsMfDggPoOVi7dqr+rQ==",
                            PhoneNumber = "022 2363 2887",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "e68bb1f2-1e4d-4f9f-908e-e50f9280b4b1",
                            TwoFactorEnabled = false,
                            UserName = "HieuHoc61"
                        },
                        new
                        {
                            Id = 20,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=514",
                            ConcurrencyStamp = "c667645b-4354-4639-b7b1-b4ad0f6e2ae1",
                            Email = "KieuTrinh_Vuong23.Mai@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "KIEUTRINH_VUONG23.MAI@GMAIL.COM",
                            NormalizedUserName = "KIEUTRINH_VUONG23",
                            PasswordHash = "AQAAAAIAAYagAAAAEDd3itO6Splor4KsKbh7YlBWufWaIrLX4nn84GxIUSe11AOx9r9RnuGziATeC99b3w==",
                            PhoneNumber = "0200 3895 2320",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "5d4aa056-0d83-4623-b79c-b249a5e1267b",
                            TwoFactorEnabled = false,
                            UserName = "KieuTrinh_Vuong23"
                        },
                        new
                        {
                            Id = 21,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=483",
                            ConcurrencyStamp = "89a2d7f1-61db-42c0-b84e-42343aee8157",
                            Email = "HuuTu.Ha97@hotmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "HUUTU.HA97@HOTMAIL.COM",
                            NormalizedUserName = "HUUTU.HA",
                            PasswordHash = "AQAAAAIAAYagAAAAEDs2OeXUqHernG1WlOXUYJH7WkXmAQB/t/RvmTDbOOfeSmm6B/BFUesBKXWi5YadOw==",
                            PhoneNumber = "0207 8036 1602",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "3d095317-407d-4f78-9bea-949caa19b7db",
                            TwoFactorEnabled = false,
                            UserName = "HuuTu.Ha"
                        },
                        new
                        {
                            Id = 22,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=903",
                            ConcurrencyStamp = "316494e5-2aa1-40fb-8c0a-746c44a936fb",
                            Email = "MinhTuyet25.Lam69@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "MINHTUYET25.LAM69@GMAIL.COM",
                            NormalizedUserName = "MINHTUYET25",
                            PasswordHash = "AQAAAAIAAYagAAAAEMQ7tHmDttKr8GVwn465xtnWb18XqgUSVeM6Mefz9pa3lYwwm+6ti0D+2a3W5p/6jw==",
                            PhoneNumber = "024 6793 7162",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "d3f5d1b3-d460-43a2-93cf-10fcddcd33f9",
                            TwoFactorEnabled = false,
                            UserName = "MinhTuyet25"
                        },
                        new
                        {
                            Id = 23,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=947",
                            ConcurrencyStamp = "3754708e-aec0-4f0a-a009-68aa8a8b3dc6",
                            Email = "MinhAnh.Duong59_Hoang75@yahoo.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "MINHANH.DUONG59_HOANG75@YAHOO.COM",
                            NormalizedUserName = "MINHANH.DUONG59",
                            PasswordHash = "AQAAAAIAAYagAAAAEKLbVPdk2DfIGrN4szbhzbPcy/TKCheo3L4gyylrzORrbc2gyUboqrTbU8WZXL5Udw==",
                            PhoneNumber = "024 4403 5222",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "0996f3d5-e792-4f78-90a8-ff6c3c282833",
                            TwoFactorEnabled = false,
                            UserName = "MinhAnh.Duong59"
                        },
                        new
                        {
                            Id = 24,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=659",
                            ConcurrencyStamp = "f23b5f76-fcfb-416c-b4e9-e29251174f1e",
                            Email = "NgocQuynh_Mai.Ngo@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "NGOCQUYNH_MAI.NGO@GMAIL.COM",
                            NormalizedUserName = "NGOCQUYNH_MAI",
                            PasswordHash = "AQAAAAIAAYagAAAAEBff9kw+iNSG63XJ2/XOUGm4aZcNqTpXX5dv+Qf9cIYpY3IcCwOt+CPGc//iJkIW+A==",
                            PhoneNumber = "0219 2197 0983",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "82214693-e3b1-4951-b3ec-271ebdcc9045",
                            TwoFactorEnabled = false,
                            UserName = "NgocQuynh_Mai"
                        },
                        new
                        {
                            Id = 25,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=384",
                            ConcurrencyStamp = "00109bb6-8817-45c0-9382-63dd13a5fccd",
                            Email = "NguyenSu8998@yahoo.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "NGUYENSU8998@YAHOO.COM",
                            NormalizedUserName = "NGUYENSU89",
                            PasswordHash = "AQAAAAIAAYagAAAAENkoFSu7Lie04ZJ43+7c4UpZHlM7J7n7c0wdJ9scZOx+VBg1k21V1a8RJgekNmwMIg==",
                            PhoneNumber = "024 7984 4634",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "1a6e33ea-6fa5-47af-a286-18a778b060ca",
                            TwoFactorEnabled = false,
                            UserName = "NguyenSu89"
                        },
                        new
                        {
                            Id = 26,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=294",
                            ConcurrencyStamp = "2f331f30-b6ff-4a06-9088-4480c85603d2",
                            Email = "PhuongVy.Do94.Duong@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "PHUONGVY.DO94.DUONG@GMAIL.COM",
                            NormalizedUserName = "PHUONGVY.DO94",
                            PasswordHash = "AQAAAAIAAYagAAAAEEZWd4daKGDptRNpQCusGOLPJ/wsi6q11ypm8Ahq7Nlrw1nrHknXFX+NqTS5UBi/gg==",
                            PhoneNumber = "0247 5912 7133",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "fd199b5e-c2bb-4dd1-b01b-bf4f21ec48ca",
                            TwoFactorEnabled = false,
                            UserName = "PhuongVy.Do94"
                        },
                        new
                        {
                            Id = 27,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=442",
                            ConcurrencyStamp = "15d71969-09b3-4fb6-9d21-5668acfe8e37",
                            Email = "QuangVu.Dinh98@yahoo.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "QUANGVU.DINH98@YAHOO.COM",
                            NormalizedUserName = "QUANGVU.DINH",
                            PasswordHash = "AQAAAAIAAYagAAAAEAgyvnpMrP+RYJ9KwRsDx3BAaZe/iD9XEo5TJm+SV7/HtWi07U4co4zfytyMDvX8fw==",
                            PhoneNumber = "022 1515 8827",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "a57c3065-0882-47eb-a7de-1d6ffc0dfb06",
                            TwoFactorEnabled = false,
                            UserName = "QuangVu.Dinh"
                        },
                        new
                        {
                            Id = 28,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=472",
                            ConcurrencyStamp = "deaa9353-8e9b-48cd-a93b-b6b1237a1280",
                            Email = "ThienThu_Pham.Pham@hotmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "THIENTHU_PHAM.PHAM@HOTMAIL.COM",
                            NormalizedUserName = "THIENTHU_PHAM",
                            PasswordHash = "AQAAAAIAAYagAAAAEChHw6DWuS4BiNT5w1SG8X9IDZ5dciz4Fgg7itORlCtdOOhi96cu/jWu9kXXj3H++w==",
                            PhoneNumber = "025 9380 5563",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "71ba5f77-e1b0-4b87-a5fe-32c6811614df",
                            TwoFactorEnabled = false,
                            UserName = "ThienThu_Pham"
                        },
                        new
                        {
                            Id = 29,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=727",
                            ConcurrencyStamp = "789f171c-af15-47ac-ac0f-b1c16894e81d",
                            Email = "ThanhKien74_To56@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "THANHKIEN74_TO56@GMAIL.COM",
                            NormalizedUserName = "THANHKIEN74",
                            PasswordHash = "AQAAAAIAAYagAAAAEAGbUlvxCzwF0HnVpoe0M+a2bddPkCO4GiMdaW5BQxOs/dT639dk4Mi7ELa1tKtKkA==",
                            PhoneNumber = "0261 5521 0945",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "d9a2e67d-d245-444a-8f67-894bcbd2fe6d",
                            TwoFactorEnabled = false,
                            UserName = "ThanhKien74"
                        },
                        new
                        {
                            Id = 30,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=1009",
                            ConcurrencyStamp = "4a11ed07-3b86-4626-b51f-f7932660d179",
                            Email = "ThaoVy_Doan75_Dang@hotmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "THAOVY_DOAN75_DANG@HOTMAIL.COM",
                            NormalizedUserName = "THAOVY_DOAN75",
                            PasswordHash = "AQAAAAIAAYagAAAAEPtcvtr9vAQ1G6QvX6JW3MAi2Z5uun4nrUV0IOPZ0rUuGQdai/DYH3HsQ5fVFETu8Q==",
                            PhoneNumber = "023 8209 7454",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "898d20a0-1a34-4b64-9f51-286a3acadc96",
                            TwoFactorEnabled = false,
                            UserName = "ThaoVy_Doan75"
                        },
                        new
                        {
                            Id = 31,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=1015",
                            ConcurrencyStamp = "4fda3d59-46cd-40ba-9cb3-57112ca23b67",
                            Email = "TienHiep.To_Doan81@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "TIENHIEP.TO_DOAN81@GMAIL.COM",
                            NormalizedUserName = "TIENHIEP.TO",
                            PasswordHash = "AQAAAAIAAYagAAAAELGtY6lR475OT2gqSFF4pdUm9gQGkIOCHPjUSz/F64inxG/69s8SvPcwWa6+Y50U2A==",
                            PhoneNumber = "0216 9563 8253",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "48dbb949-ad82-45f5-899c-fda436b66bb9",
                            TwoFactorEnabled = false,
                            UserName = "TienHiep.To"
                        },
                        new
                        {
                            Id = 32,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=765",
                            ConcurrencyStamp = "6a6761c1-ed1d-4df9-9ac9-46ed1535d906",
                            Email = "TuyLinh3849@yahoo.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "TUYLINH3849@YAHOO.COM",
                            NormalizedUserName = "TUYLINH38",
                            PasswordHash = "AQAAAAIAAYagAAAAECB3arIWNOXib7//t7Q3vce5l9CGxEJsa2j1utoQWXwFpEzLaH9bfk9nsJapSgQlVQ==",
                            PhoneNumber = "0208 4613 0385",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "e7e6632e-493e-4949-b4ab-29b2504c136d",
                            TwoFactorEnabled = false,
                            UserName = "TuyLinh38"
                        },
                        new
                        {
                            Id = 33,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=1024",
                            ConcurrencyStamp = "04d35dd0-3ad2-4689-9fc4-2921fa9fc704",
                            Email = "VanTuyen_Ngo10.Vuong44@yahoo.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "VANTUYEN_NGO10.VUONG44@YAHOO.COM",
                            NormalizedUserName = "VANTUYEN_NGO10",
                            PasswordHash = "AQAAAAIAAYagAAAAEBoccC2M6EK1U9p6tXuU/w8H8xHUMX2f0EkTPkpMk0uMFk4auIxBQgpbGwVuSLE/Yg==",
                            PhoneNumber = "0223 6067 4502",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "4812c55f-6721-4fe8-b40a-a39f621a7a6b",
                            TwoFactorEnabled = false,
                            UserName = "VanTuyen_Ngo10"
                        },
                        new
                        {
                            Id = 34,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=648",
                            ConcurrencyStamp = "63570aec-f461-4843-97aa-d17ce292ae45",
                            Email = "YenNhi_Lam49@yahoo.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "YENNHI_LAM49@YAHOO.COM",
                            NormalizedUserName = "YENNHI_LAM",
                            PasswordHash = "AQAAAAIAAYagAAAAEEVeRwa1WQ1dUH1lpBxV4IiOqrDpo4t/CITomQcPb0gF72fyc/tUC8MplKsK4Y6YXg==",
                            PhoneNumber = "028 3001 7210",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "1f6eaf36-d603-494e-a8a2-68dd86a1c9ac",
                            TwoFactorEnabled = false,
                            UserName = "YenNhi_Lam"
                        },
                        new
                        {
                            Id = 35,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=677",
                            ConcurrencyStamp = "e4d8b552-4777-4484-aba9-f979b9df643c",
                            Email = "BichHai2.Le@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "BICHHAI2.LE@GMAIL.COM",
                            NormalizedUserName = "BICHHAI2",
                            PasswordHash = "AQAAAAIAAYagAAAAEApmLUtvGaZeRc4SifXPvvkFTH9KH7F3gJyBVKLWRuvHXh3Mta0HeK1UJgYOh5q/ng==",
                            PhoneNumber = "021 0766 4856",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "e4967879-13a7-4b7f-aaba-7fbac94a77ee",
                            TwoFactorEnabled = false,
                            UserName = "BichHai2"
                        },
                        new
                        {
                            Id = 36,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=651",
                            ConcurrencyStamp = "77714fe6-a8e8-4274-9418-1891d4a0da85",
                            Email = "BaoBao.Dang45.Pham@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "BAOBAO.DANG45.PHAM@GMAIL.COM",
                            NormalizedUserName = "BAOBAO.DANG45",
                            PasswordHash = "AQAAAAIAAYagAAAAEEaZBBCZcuSM+SGm7mPiOCloQqi9zKPi0LI5qskkbTSMaVvVLLUvbYYnW5CuyLTi2w==",
                            PhoneNumber = "0285 3115 9362",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "315f09d5-4a43-427f-acd2-0483834a79a3",
                            TwoFactorEnabled = false,
                            UserName = "BaoBao.Dang45"
                        },
                        new
                        {
                            Id = 37,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=695",
                            ConcurrencyStamp = "4dda4457-3a77-4d62-bd21-418391c4de05",
                            Email = "DieuHuyen.Vuong.To@hotmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "DIEUHUYEN.VUONG.TO@HOTMAIL.COM",
                            NormalizedUserName = "DIEUHUYEN.VUONG",
                            PasswordHash = "AQAAAAIAAYagAAAAEO0lfjP+WYfdzSAwIH8JCbvV6Hel81Ldx+wCBytldbJldVB3ZezdnTD0+KA/LO49tw==",
                            PhoneNumber = "0295 3078 1496",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "3c015efd-3ac1-42e3-a6b5-78f65e134cab",
                            TwoFactorEnabled = false,
                            UserName = "DieuHuyen.Vuong"
                        },
                        new
                        {
                            Id = 38,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=30",
                            ConcurrencyStamp = "7a2e8a7f-e0ef-4e95-9249-f26b77416dff",
                            Email = "DanQue66_Dinh67@yahoo.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "DANQUE66_DINH67@YAHOO.COM",
                            NormalizedUserName = "DANQUE66",
                            PasswordHash = "AQAAAAIAAYagAAAAEPz45b6R8sTffGCNeE66enwYOmUFvQpM5TqSk9AjsxoS+xm/iLFdyh2CAre1OvqZ6w==",
                            PhoneNumber = "022 1725 7857",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "ca2d3e6a-bfe2-4cf8-8a80-2fbbfcc6443c",
                            TwoFactorEnabled = false,
                            UserName = "DanQue66"
                        },
                        new
                        {
                            Id = 39,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=450",
                            ConcurrencyStamp = "b9801334-520b-46bb-ad13-fc7babc6278c",
                            Email = "HamNghi88.Doan@hotmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "HAMNGHI88.DOAN@HOTMAIL.COM",
                            NormalizedUserName = "HAMNGHI88",
                            PasswordHash = "AQAAAAIAAYagAAAAEFiH8yqMaXFxPewUHLVTcrF74Gup8nN7vmQnJbRhooPbciBpoim5jDhXETEdS5e6BA==",
                            PhoneNumber = "0260 9472 3217",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "b4dfe8ae-8e4f-4718-99e4-c6dcf1a4dcfe",
                            TwoFactorEnabled = false,
                            UserName = "HamNghi88"
                        },
                        new
                        {
                            Id = 40,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=871",
                            ConcurrencyStamp = "c5765091-40b2-4c6c-b798-52c8436feec1",
                            Email = "DuyNgon.Duong26_Phung@yahoo.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "DUYNGON.DUONG26_PHUNG@YAHOO.COM",
                            NormalizedUserName = "DUYNGON.DUONG26",
                            PasswordHash = "AQAAAAIAAYagAAAAELkAEl7LXdwQRYnMbdyx1YeLSeZg8D7P+yr6qCwIGHhQsnoGrXeIzJLYSexPbJFBOw==",
                            PhoneNumber = "027 6129 0677",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "3e05a530-17c6-4333-b54a-b33181160317",
                            TwoFactorEnabled = false,
                            UserName = "DuyNgon.Duong26"
                        });
                });

            modelBuilder.Entity("UITEventAPI.Application.Infrastructure.Identity.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RefreshTokenId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("ExpiryDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UITEventAPI.Application.Domain.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Events.Event", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "LastModifiedByUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UITEventAPI.Application.Domain.Units.UniversityUnit", "UniversityUnit")
                        .WithMany("HostedEvents")
                        .HasForeignKey("UniversityUnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("LastModifiedByUser");

                    b.Navigation("UniversityUnit");
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Events.EventImage", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Events.Event", "Event")
                        .WithMany("Images")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Events.EventRegistration", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UITEventAPI.Application.Domain.Events.Event", "Event")
                        .WithMany("Registrations")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "LastModifiedByUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UITEventAPI.Application.Domain.Students.Student", "Student")
                        .WithMany("RegisteredEvents")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("Event");

                    b.Navigation("LastModifiedByUser");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Students.Student", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "LastModifiedByUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "User")
                        .WithOne()
                        .HasForeignKey("UITEventAPI.Application.Domain.Students.Student", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("LastModifiedByUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Units.UniversityUnit", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "LastModifiedByUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "User")
                        .WithOne()
                        .HasForeignKey("UITEventAPI.Application.Domain.Units.UniversityUnit", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("LastModifiedByUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UITEventAPI.Application.Infrastructure.Identity.RefreshToken", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("User");
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Events.Event", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Registrations");
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Students.Student", b =>
                {
                    b.Navigation("RegisteredEvents");
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Units.UniversityUnit", b =>
                {
                    b.Navigation("HostedEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
