// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UITEventAPI.Application.Infrastructure.Data;

#nullable disable

namespace UITEventAPI.Application.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240621055101_UpdateSeedData2")]
    partial class UpdateSeedData2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 11,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 12,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 13,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 14,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 15,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 16,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 17,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 18,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 19,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 20,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 21,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 22,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 23,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 24,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 25,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 26,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 27,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 28,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 29,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 30,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 31,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 32,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 33,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 34,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 35,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 36,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 37,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 38,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 39,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 40,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Events.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset>("DeletedWhen")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FormUrl")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxAttendees")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(400)");

                    b.Property<int>("TrainingPoint")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UniversityUnitId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("EventId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("LastModifiedByUserId");

                    b.HasIndex("UniversityUnitId");

                    b.ToTable("Events", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedWhen = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Nước nha cái ừ một. Quê quần bàn năm thương. Nón nước đâu đập nhà bạn phá tôi. Trời leo khâu dép nón.",
                            EndDate = new DateTime(2024, 7, 11, 8, 8, 59, 269, DateTimeKind.Local).AddTicks(3132),
                            FormUrl = "http://thiênthêu.info",
                            IsDeleted = false,
                            IsPublished = true,
                            Location = "296 Đông Nghi Mountain, Hậu Giang, Palestine",
                            MaxAttendees = 48,
                            StartDate = new DateTime(2024, 6, 11, 13, 59, 56, 427, DateTimeKind.Local).AddTicks(2865),
                            Title = "Thế tàu chết bàn.",
                            TrainingPoint = 5,
                            Type = "Workshop",
                            UniversityUnitId = 7
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedWhen = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Đã đỏ nhà. Nón mua lỗi đâu hết. Chín lỗi núi tui bàn. Nha áo chìm đồng nha ờ thôi gió quần được. Đâu á ba ba xanh ruộng khâu đang. Thôi lầu cái thương gì núi.",
                            EndDate = new DateTime(2023, 4, 26, 6, 56, 8, 934, DateTimeKind.Local).AddTicks(5211),
                            FormUrl = "https://tùngquang.info",
                            IsDeleted = false,
                            IsPublished = false,
                            Location = "8350 Phương Loan Ports, Trà Vinh, Vatican",
                            MaxAttendees = 23,
                            StartDate = new DateTime(2023, 4, 13, 7, 37, 49, 211, DateTimeKind.Local).AddTicks(8880),
                            Title = "Xe phá quê thế bảy bạn khoảng mượn đang.",
                            TrainingPoint = 5,
                            Type = "Webinar",
                            UniversityUnitId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedWhen = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Thôi nhà xanh tui áo ờ hết bơi thì máy. Bè mướn em xanh hết hương khoan đỏ chỉ. Xanh sáu một xanh biết áo. Tím ác máy ghế tui chỉ mây thương lầu độc.",
                            EndDate = new DateTime(2023, 10, 19, 14, 18, 33, 977, DateTimeKind.Local).AddTicks(1414),
                            FormUrl = "https://sơnquân.com",
                            IsDeleted = false,
                            IsPublished = false,
                            Location = "0771 Nguyễn Squares, Cao Bằng, Bénin",
                            MaxAttendees = 44,
                            StartDate = new DateTime(2023, 10, 3, 23, 10, 47, 361, DateTimeKind.Local).AddTicks(7029),
                            Title = "Áo hàng tô khâu viết.",
                            TrainingPoint = 4,
                            Type = "Workshop",
                            UniversityUnitId = 7
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedWhen = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Nhà chỉ hết vàng chỉ tàu hết. Thôi trăng ghế độc đâu nha làm phá bàn. Ghế đỏ bơi đâu á.",
                            EndDate = new DateTime(2022, 8, 17, 17, 54, 32, 866, DateTimeKind.Local).AddTicks(5281),
                            FormUrl = "https://phươngtrang.com.vn",
                            IsDeleted = false,
                            IsPublished = false,
                            Location = "47036 Ðắc Trọng Stream, Kon Tum, Samoa",
                            MaxAttendees = 46,
                            StartDate = new DateTime(2022, 8, 7, 2, 7, 41, 665, DateTimeKind.Local).AddTicks(8173),
                            Title = "Hương may đạp đang không áo khoan tàu ghét.",
                            TrainingPoint = 1,
                            Type = "Other",
                            UniversityUnitId = 9
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletedWhen = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Anh thì đồng làm gì gì bè đá ruộng đâu. Một bè gì mây hết vẽ được mượn hết. Thế ờ chết bảy thế cửa đồng phá tôi tô.",
                            EndDate = new DateTime(2022, 11, 27, 14, 58, 8, 557, DateTimeKind.Local).AddTicks(9058),
                            FormUrl = "http://ngọcquyên.info",
                            IsDeleted = false,
                            IsPublished = false,
                            Location = "056 Dương Extensions, Yên Bái, Venezuela",
                            MaxAttendees = 55,
                            StartDate = new DateTime(2022, 11, 17, 7, 34, 14, 183, DateTimeKind.Local).AddTicks(7517),
                            Title = "Năm ba thích thuyền chìm.",
                            TrainingPoint = 5,
                            Type = "Seminar",
                            UniversityUnitId = 3
                        });
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Events.EventImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id")
                        .HasName("EventImageId");

                    b.HasIndex("EventId");

                    b.ToTable("EventImages", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EventId = 2,
                            ImageUrl = "https://picsum.photos/640/480/?image=120"
                        },
                        new
                        {
                            Id = 2,
                            EventId = 4,
                            ImageUrl = "https://picsum.photos/640/480/?image=438"
                        },
                        new
                        {
                            Id = 3,
                            EventId = 2,
                            ImageUrl = "https://picsum.photos/640/480/?image=756"
                        },
                        new
                        {
                            Id = 4,
                            EventId = 5,
                            ImageUrl = "https://picsum.photos/640/480/?image=1075"
                        },
                        new
                        {
                            Id = 5,
                            EventId = 2,
                            ImageUrl = "https://picsum.photos/640/480/?image=308"
                        },
                        new
                        {
                            Id = 6,
                            EventId = 5,
                            ImageUrl = "https://picsum.photos/640/480/?image=626"
                        },
                        new
                        {
                            Id = 7,
                            EventId = 2,
                            ImageUrl = "https://picsum.photos/640/480/?image=945"
                        },
                        new
                        {
                            Id = 8,
                            EventId = 5,
                            ImageUrl = "https://picsum.photos/640/480/?image=178"
                        },
                        new
                        {
                            Id = 9,
                            EventId = 3,
                            ImageUrl = "https://picsum.photos/640/480/?image=497"
                        },
                        new
                        {
                            Id = 10,
                            EventId = 5,
                            ImageUrl = "https://picsum.photos/640/480/?image=815"
                        },
                        new
                        {
                            Id = 11,
                            EventId = 3,
                            ImageUrl = "https://picsum.photos/640/480/?image=48"
                        },
                        new
                        {
                            Id = 12,
                            EventId = 5,
                            ImageUrl = "https://picsum.photos/640/480/?image=367"
                        },
                        new
                        {
                            Id = 13,
                            EventId = 3,
                            ImageUrl = "https://picsum.photos/640/480/?image=685"
                        },
                        new
                        {
                            Id = 14,
                            EventId = 1,
                            ImageUrl = "https://picsum.photos/640/480/?image=1003"
                        },
                        new
                        {
                            Id = 15,
                            EventId = 3,
                            ImageUrl = "https://picsum.photos/640/480/?image=237"
                        },
                        new
                        {
                            Id = 16,
                            EventId = 1,
                            ImageUrl = "https://picsum.photos/640/480/?image=555"
                        },
                        new
                        {
                            Id = 17,
                            EventId = 4,
                            ImageUrl = "https://picsum.photos/640/480/?image=873"
                        },
                        new
                        {
                            Id = 18,
                            EventId = 1,
                            ImageUrl = "https://picsum.photos/640/480/?image=107"
                        },
                        new
                        {
                            Id = 19,
                            EventId = 4,
                            ImageUrl = "https://picsum.photos/640/480/?image=425"
                        },
                        new
                        {
                            Id = 20,
                            EventId = 1,
                            ImageUrl = "https://picsum.photos/640/480/?image=743"
                        });
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Events.EventRegistration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AttendedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAttended")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRegistered")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("EventRegistrationId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("EventId");

                    b.HasIndex("LastModifiedByUserId");

                    b.HasIndex("StudentId");

                    b.ToTable("EventRegistrations", null, t =>
                        {
                            t.HasCheckConstraint("CK_EventRegistration_AttendedDate_GreaterThan_RegistrationDate", "AttendedDate IS NULL OR RegisterDate IS NULL OR AttendedDate >= RegisterDate");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 3, 12, 9, 42, 33, 130, DateTimeKind.Local).AddTicks(8638),
                            StudentId = 4
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 6, 17, 1, 9, 58, 772, DateTimeKind.Local).AddTicks(9108),
                            StudentId = 12
                        },
                        new
                        {
                            Id = 3,
                            AttendedDate = new DateTime(2023, 4, 9, 10, 28, 52, 664, DateTimeKind.Local).AddTicks(4403),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 4, 4, 11, 41, 30, 366, DateTimeKind.Local).AddTicks(6263),
                            StudentId = 21
                        },
                        new
                        {
                            Id = 4,
                            AttendedDate = new DateTime(2022, 10, 21, 11, 30, 3, 784, DateTimeKind.Local).AddTicks(2564),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 10, 21, 3, 41, 38, 776, DateTimeKind.Local).AddTicks(1168),
                            StudentId = 29
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 2, 28, 13, 40, 27, 602, DateTimeKind.Local).AddTicks(3888),
                            StudentId = 9
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 11, 14, 0, 46, 46, 261, DateTimeKind.Local).AddTicks(3884),
                            StudentId = 17
                        },
                        new
                        {
                            Id = 7,
                            AttendedDate = new DateTime(2023, 3, 31, 5, 23, 53, 155, DateTimeKind.Local).AddTicks(7973),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 3, 23, 15, 39, 24, 838, DateTimeKind.Local).AddTicks(1514),
                            StudentId = 26
                        },
                        new
                        {
                            Id = 8,
                            AttendedDate = new DateTime(2022, 11, 10, 3, 22, 32, 302, DateTimeKind.Local).AddTicks(449),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 10, 8, 21, 51, 53, 746, DateTimeKind.Local).AddTicks(6599),
                            StudentId = 5
                        },
                        new
                        {
                            Id = 9,
                            AttendedDate = new DateTime(2023, 8, 22, 23, 34, 11, 973, DateTimeKind.Local).AddTicks(8029),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 3,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 8, 7, 12, 1, 0, 667, DateTimeKind.Local).AddTicks(2469),
                            StudentId = 14
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 11, 1, 18, 57, 1, 231, DateTimeKind.Local).AddTicks(9315),
                            StudentId = 22
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 3,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 8, 31, 9, 6, 8, 152, DateTimeKind.Local).AddTicks(5185),
                            StudentId = 2
                        },
                        new
                        {
                            Id = 12,
                            AttendedDate = new DateTime(2022, 10, 28, 21, 20, 4, 146, DateTimeKind.Local).AddTicks(6683),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 9, 26, 16, 2, 8, 717, DateTimeKind.Local).AddTicks(2031),
                            StudentId = 10
                        },
                        new
                        {
                            Id = 13,
                            AttendedDate = new DateTime(2023, 9, 24, 23, 44, 35, 217, DateTimeKind.Local).AddTicks(5412),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 3,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 9, 24, 6, 11, 15, 637, DateTimeKind.Local).AddTicks(7901),
                            StudentId = 19
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 5, 14, 19, 32, 58, 446, DateTimeKind.Local).AddTicks(95),
                            StudentId = 27
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 3,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 8, 19, 3, 16, 23, 123, DateTimeKind.Local).AddTicks(616),
                            StudentId = 7
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 6, 7, 16, 38, 5, 931, DateTimeKind.Local).AddTicks(2810),
                            StudentId = 15
                        },
                        new
                        {
                            Id = 17,
                            AttendedDate = new DateTime(2022, 8, 4, 11, 35, 22, 798, DateTimeKind.Local).AddTicks(1751),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 7, 16, 3, 18, 24, 912, DateTimeKind.Local).AddTicks(4476),
                            StudentId = 24
                        },
                        new
                        {
                            Id = 18,
                            AttendedDate = new DateTime(2024, 5, 15, 21, 16, 42, 674, DateTimeKind.Local).AddTicks(5496),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 5, 2, 13, 43, 13, 416, DateTimeKind.Local).AddTicks(5526),
                            StudentId = 3
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 6, 10, 0, 23, 32, 397, DateTimeKind.Local).AddTicks(7192),
                            StudentId = 12
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 5, 26, 10, 48, 20, 901, DateTimeKind.Local).AddTicks(8242),
                            StudentId = 20
                        },
                        new
                        {
                            Id = 21,
                            AttendedDate = new DateTime(2022, 7, 27, 9, 27, 23, 85, DateTimeKind.Local).AddTicks(2515),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 7, 3, 21, 28, 39, 882, DateTimeKind.Local).AddTicks(9908),
                            StudentId = 29
                        },
                        new
                        {
                            Id = 22,
                            AttendedDate = new DateTime(2023, 2, 28, 18, 48, 26, 142, DateTimeKind.Local).AddTicks(7433),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 2, 21, 18, 31, 34, 106, DateTimeKind.Local).AddTicks(3703),
                            StudentId = 8
                        },
                        new
                        {
                            Id = 23,
                            AttendedDate = new DateTime(2022, 8, 2, 20, 40, 38, 457, DateTimeKind.Local).AddTicks(1364),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 7, 27, 18, 33, 47, 368, DateTimeKind.Local).AddTicks(2623),
                            StudentId = 17
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 3, 16, 20, 30, 31, 342, DateTimeKind.Local).AddTicks(1328),
                            StudentId = 25
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 6, 21, 15, 38, 54, 853, DateTimeKind.Local).AddTicks(5339),
                            StudentId = 5
                        },
                        new
                        {
                            Id = 26,
                            AttendedDate = new DateTime(2023, 4, 13, 1, 48, 43, 890, DateTimeKind.Local).AddTicks(6331),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 4, 8, 22, 29, 28, 577, DateTimeKind.Local).AddTicks(8953),
                            StudentId = 13
                        },
                        new
                        {
                            Id = 27,
                            AttendedDate = new DateTime(2022, 11, 3, 16, 38, 55, 213, DateTimeKind.Local).AddTicks(9637),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 10, 25, 18, 10, 34, 856, DateTimeKind.Local).AddTicks(7399),
                            StudentId = 22
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 3, 5, 0, 28, 25, 813, DateTimeKind.Local).AddTicks(6578),
                            StudentId = 1
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 9, 19, 15, 15, 42, 342, DateTimeKind.Local).AddTicks(115),
                            StudentId = 10
                        },
                        new
                        {
                            Id = 30,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 3, 28, 2, 27, 23, 49, DateTimeKind.Local).AddTicks(4204),
                            StudentId = 18
                        },
                        new
                        {
                            Id = 31,
                            AttendedDate = new DateTime(2022, 10, 20, 13, 8, 18, 187, DateTimeKind.Local).AddTicks(3263),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 10, 13, 12, 20, 49, 827, DateTimeKind.Local).AddTicks(2830),
                            StudentId = 27
                        },
                        new
                        {
                            Id = 32,
                            AttendedDate = new DateTime(2023, 9, 15, 15, 40, 45, 909, DateTimeKind.Local).AddTicks(9595),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 3,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 8, 12, 2, 29, 56, 747, DateTimeKind.Local).AddTicks(8700),
                            StudentId = 6
                        },
                        new
                        {
                            Id = 33,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 11, 6, 9, 25, 57, 312, DateTimeKind.Local).AddTicks(5546),
                            StudentId = 15
                        },
                        new
                        {
                            Id = 34,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 3,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 9, 4, 23, 35, 4, 233, DateTimeKind.Local).AddTicks(1416),
                            StudentId = 24
                        },
                        new
                        {
                            Id = 35,
                            AttendedDate = new DateTime(2024, 4, 25, 22, 1, 2, 138, DateTimeKind.Local).AddTicks(6935),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 4, 25, 12, 56, 47, 41, DateTimeKind.Local).AddTicks(3610),
                            StudentId = 3
                        },
                        new
                        {
                            Id = 36,
                            AttendedDate = new DateTime(2023, 10, 1, 4, 57, 56, 322, DateTimeKind.Local).AddTicks(6496),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 3,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 9, 28, 20, 40, 11, 718, DateTimeKind.Local).AddTicks(4132),
                            StudentId = 12
                        },
                        new
                        {
                            Id = 37,
                            AttendedDate = new DateTime(2024, 6, 9, 12, 31, 15, 597, DateTimeKind.Local).AddTicks(16),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 5, 19, 10, 1, 54, 526, DateTimeKind.Local).AddTicks(6326),
                            StudentId = 20
                        },
                        new
                        {
                            Id = 38,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 3,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 8, 23, 17, 45, 19, 203, DateTimeKind.Local).AddTicks(6848),
                            StudentId = 29
                        },
                        new
                        {
                            Id = 39,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 4, 13, 7, 7, 2, 11, DateTimeKind.Local).AddTicks(9041),
                            StudentId = 8
                        },
                        new
                        {
                            Id = 40,
                            AttendedDate = new DateTime(2022, 7, 25, 8, 18, 42, 42, DateTimeKind.Local).AddTicks(5797),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 7, 20, 17, 47, 20, 993, DateTimeKind.Local).AddTicks(707),
                            StudentId = 17
                        },
                        new
                        {
                            Id = 41,
                            AttendedDate = new DateTime(2024, 6, 1, 13, 27, 46, 286, DateTimeKind.Local).AddTicks(1073),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 5, 7, 4, 12, 9, 497, DateTimeKind.Local).AddTicks(1757),
                            StudentId = 25
                        },
                        new
                        {
                            Id = 42,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 6, 14, 14, 52, 28, 478, DateTimeKind.Local).AddTicks(3423),
                            StudentId = 5
                        },
                        new
                        {
                            Id = 43,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2024, 5, 31, 1, 17, 16, 982, DateTimeKind.Local).AddTicks(4473),
                            StudentId = 13
                        },
                        new
                        {
                            Id = 44,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 7, 8, 11, 57, 35, 963, DateTimeKind.Local).AddTicks(6139),
                            StudentId = 22
                        },
                        new
                        {
                            Id = 45,
                            AttendedDate = new DateTime(2023, 3, 22, 7, 48, 10, 445, DateTimeKind.Local).AddTicks(5616),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 2, 26, 5, 19, 32, 317, DateTimeKind.Local).AddTicks(6393),
                            StudentId = 1
                        },
                        new
                        {
                            Id = 46,
                            AttendedDate = new DateTime(2022, 8, 6, 22, 36, 56, 851, DateTimeKind.Local).AddTicks(4294),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 4,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 8, 1, 9, 2, 43, 448, DateTimeKind.Local).AddTicks(8855),
                            StudentId = 10
                        },
                        new
                        {
                            Id = 47,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 3, 21, 7, 18, 29, 553, DateTimeKind.Local).AddTicks(4018),
                            StudentId = 18
                        },
                        new
                        {
                            Id = 48,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = false,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 10, 6, 11, 34, 23, 452, DateTimeKind.Local).AddTicks(914),
                            StudentId = 27
                        },
                        new
                        {
                            Id = 49,
                            AttendedDate = new DateTime(2023, 3, 5, 10, 28, 56, 114, DateTimeKind.Local).AddTicks(606),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2023, 2, 14, 9, 17, 26, 789, DateTimeKind.Local).AddTicks(1643),
                            StudentId = 6
                        },
                        new
                        {
                            Id = 50,
                            AttendedDate = new DateTime(2022, 11, 13, 8, 54, 28, 500, DateTimeKind.Local).AddTicks(9225),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 5,
                            IsAttended = true,
                            IsRegistered = true,
                            RegisterDate = new DateTime(2022, 10, 30, 8, 39, 30, 937, DateTimeKind.Local).AddTicks(3630),
                            StudentId = 15
                        });
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Students.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("LastModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("StudentCode")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("StudentId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("LastModifiedByUserId");

                    b.HasIndex("StudentCode")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Students", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1954, 12, 25, 10, 1, 55, 364, DateTimeKind.Local).AddTicks(3601),
                            FirstName = "Minh Cảnh",
                            LastName = "Lâm",
                            StudentCode = 230465,
                            UserId = 19
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2004, 2, 4, 10, 41, 22, 355, DateTimeKind.Local).AddTicks(5004),
                            FirstName = "Ðông Nguyên",
                            LastName = "Hà",
                            StudentCode = 197741,
                            UserId = 34
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2002, 12, 16, 13, 46, 36, 792, DateTimeKind.Local).AddTicks(1343),
                            FirstName = "Tú Tâm",
                            LastName = "Hoàng",
                            StudentCode = 134950,
                            UserId = 20
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1985, 5, 7, 14, 35, 33, 97, DateTimeKind.Local).AddTicks(9580),
                            FirstName = "Phương An",
                            LastName = "Bùi",
                            StudentCode = 206711,
                            UserId = 36
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2000, 12, 6, 17, 31, 18, 219, DateTimeKind.Local).AddTicks(4071),
                            FirstName = "Hải Hà",
                            LastName = "Đoàn",
                            StudentCode = 143920,
                            UserId = 22
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1995, 5, 16, 23, 45, 34, 433, DateTimeKind.Local).AddTicks(7800),
                            FirstName = "Ái Nhân",
                            LastName = "Phùng",
                            StudentCode = 111196,
                            UserId = 37
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1998, 11, 27, 21, 15, 59, 646, DateTimeKind.Local).AddTicks(6057),
                            FirstName = "Thanh Trang",
                            LastName = "Nguyễn",
                            StudentCode = 248405,
                            UserId = 23
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1975, 5, 17, 19, 37, 21, 891, DateTimeKind.Local).AddTicks(1999),
                            FirstName = "Hữu Minh",
                            LastName = "Phan",
                            StudentCode = 215681,
                            UserId = 38
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1996, 11, 18, 1, 0, 41, 73, DateTimeKind.Local).AddTicks(7852),
                            FirstName = "Bình Quân",
                            LastName = "Hồ",
                            StudentCode = 152890,
                            UserId = 24
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1970, 11, 13, 14, 53, 1, 787, DateTimeKind.Local).AddTicks(3723),
                            FirstName = "Thư Sương",
                            LastName = "Trịnh",
                            StudentCode = 224651,
                            UserId = 40
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1994, 11, 9, 4, 45, 22, 500, DateTimeKind.Local).AddTicks(9536),
                            FirstName = "Mạnh Dũng",
                            LastName = "Tô",
                            StudentCode = 257376,
                            UserId = 25
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1960, 5, 14, 6, 12, 16, 67, DateTimeKind.Local).AddTicks(3483),
                            FirstName = "Ðình Quảng",
                            LastName = "Lê",
                            StudentCode = 120166,
                            UserId = 39
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1992, 10, 30, 8, 30, 3, 928, DateTimeKind.Local).AddTicks(1294),
                            FirstName = "Tâm Ðoan",
                            LastName = "Tăng",
                            StudentCode = 161860,
                            UserId = 26
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1991, 8, 16, 10, 6, 26, 809, DateTimeKind.Local).AddTicks(6802),
                            FirstName = "Nhật Linh",
                            LastName = "Dương",
                            StudentCode = 299070,
                            UserId = 12
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1980, 5, 20, 17, 8, 37, 992, DateTimeKind.Local).AddTicks(543),
                            FirstName = "Gia Thịnh",
                            LastName = "Đinh",
                            StudentCode = 170830,
                            UserId = 28
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1972, 11, 16, 14, 0, 37, 552, DateTimeKind.Local).AddTicks(89),
                            FirstName = "Yến Nhi",
                            LastName = "Hà",
                            StudentCode = 108039,
                            UserId = 14
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1988, 10, 11, 15, 59, 26, 782, DateTimeKind.Local).AddTicks(4765),
                            FirstName = "Thanh Ngân",
                            LastName = "Lý",
                            StudentCode = 275316,
                            UserId = 29
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2004, 2, 18, 17, 54, 48, 294, DateTimeKind.Local).AddTicks(3304),
                            FirstName = "Hữu Ðạt",
                            LastName = "Bùi",
                            StudentCode = 212525,
                            UserId = 15
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1986, 10, 2, 19, 44, 8, 209, DateTimeKind.Local).AddTicks(6259),
                            FirstName = "Bảo Thạch",
                            LastName = "Đào",
                            StudentCode = 284286,
                            UserId = 31
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1985, 5, 21, 21, 48, 59, 36, DateTimeKind.Local).AddTicks(6380),
                            FirstName = "Thúy Minh",
                            LastName = "Phùng",
                            StudentCode = 117009,
                            UserId = 16
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1984, 9, 22, 23, 28, 49, 636, DateTimeKind.Local).AddTicks(7866),
                            FirstName = "Mỹ Hiệp",
                            LastName = "Nguyễn",
                            StudentCode = 188771,
                            UserId = 32
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1966, 8, 23, 1, 43, 9, 778, DateTimeKind.Local).AddTicks(9503),
                            FirstName = "Ðình Hợp",
                            LastName = "Phan",
                            StudentCode = 221495,
                            UserId = 17
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1982, 9, 14, 3, 13, 31, 63, DateTimeKind.Local).AddTicks(9411),
                            FirstName = "Tuệ Mẫn",
                            LastName = "Hồ",
                            StudentCode = 293256,
                            UserId = 33
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1997, 11, 24, 5, 37, 20, 521, DateTimeKind.Local).AddTicks(2705),
                            FirstName = "Như Ngọc",
                            LastName = "Vương",
                            StudentCode = 125979,
                            UserId = 18
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1980, 9, 4, 6, 58, 12, 491, DateTimeKind.Local).AddTicks(914),
                            FirstName = "Gia Huy",
                            LastName = "Tô",
                            StudentCode = 179800,
                            UserId = 30
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1954, 8, 30, 20, 50, 33, 204, DateTimeKind.Local).AddTicks(6686),
                            FirstName = "Việt Hoàng",
                            LastName = "Trần",
                            StudentCode = 239435,
                            UserId = 21
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1978, 8, 26, 10, 42, 53, 918, DateTimeKind.Local).AddTicks(2489),
                            FirstName = "Thanh Hạnh",
                            LastName = "Tăng",
                            StudentCode = 102225,
                            UserId = 35
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(2002, 8, 22, 0, 35, 14, 631, DateTimeKind.Local).AddTicks(8264),
                            FirstName = "Hướng Dương",
                            LastName = "Ngô",
                            StudentCode = 203554,
                            UserId = 13
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1976, 8, 16, 14, 27, 35, 345, DateTimeKind.Local).AddTicks(4004),
                            FirstName = "Bảo Hiển",
                            LastName = "Đinh",
                            StudentCode = 266346,
                            UserId = 27
                        });
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.UniversityUnit.UniversityUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LastModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("UniversityUnitId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("LastModifiedByUserId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UniversityUnits", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bàn độc việc nước nha cái ừ một tám.",
                            Name = "Trần and Sons",
                            UserId = 10
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bảy bạn khoảng.",
                            Name = "Bùi, Lý and Hà",
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Khâu viết một nước.",
                            Name = "Trịnh Group",
                            UserId = 4
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Không áo khoan.",
                            Name = "Hà, Dương and Bùi",
                            UserId = 6
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Thuyền chìm đá nước anh thì đồng làm.",
                            Name = "Vũ - Phan",
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bạn anh khoan giày lầu dép đá giết em viết.",
                            Name = "Đào, Hà and Phùng",
                            UserId = 8
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Nghỉ tủ á.",
                            Name = "Mai - Vương",
                            UserId = 9
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chỉ lầu khoan ruộng mượn vẽ dép là con.",
                            Name = "Lý, Đặng and Phan",
                            UserId = 5
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ba ác xuồng ngọt đâu anh.",
                            Name = "Đỗ - Nguyễn",
                            UserId = 7
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sáu nhà thuyền mướn ruộng bàn bốn đỏ.",
                            Name = "Đinh, Đinh and Trịnh",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AvatarUrl")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id")
                        .HasName("UserId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=269",
                            ConcurrencyStamp = "9fa39535-6bb7-43d4-9029-bbe7a4c713f6",
                            Email = "149733@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "149733@GM.UIT.EDU.VN",
                            NormalizedUserName = "149733",
                            PasswordHash = "AQAAAAIAAYagAAAAEBqrzngvRvPq4KdTi0TxvqFvK8GPXxuh0JyetFoMZ3QQAOEa+ebIq6VjkqBhAvJF9A==",
                            PhoneNumber = "024 7643 9160",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "3e912a10-f7bb-4dd3-a21c-c22595e15da2",
                            TwoFactorEnabled = false,
                            UserName = "149733"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=31",
                            ConcurrencyStamp = "8cb7ff19-ea93-4f7d-9b17-bec5dd117932",
                            Email = "254219@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "254219@GM.UIT.EDU.VN",
                            NormalizedUserName = "254219",
                            PasswordHash = "AQAAAAIAAYagAAAAEPhXLgwn6Tvjb7pjDTe5AMGC6PnDTggBhgJfUUD4d8zYDaUu0pMezPJPzZ4sXLaQeA==",
                            PhoneNumber = "021 9138 4207",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "03be654b-14c0-48a3-b932-0b2a8a7f9ec7",
                            TwoFactorEnabled = false,
                            UserName = "254219"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=754",
                            ConcurrencyStamp = "3b2e46e4-776c-405b-8079-b24d4adc5439",
                            Email = "158704@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "158704@GM.UIT.EDU.VN",
                            NormalizedUserName = "158704",
                            PasswordHash = "AQAAAAIAAYagAAAAEIEvoBePZbiABjdV6OslY7UUHf7/AOYUdvYNFEGGBOrhg+QEIXbtyzcmyLUe2fbmgg==",
                            PhoneNumber = "0281 5129 3358",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "7b1d8636-ac16-46aa-8771-711466965915",
                            TwoFactorEnabled = false,
                            UserName = "158704"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=414",
                            ConcurrencyStamp = "fdd8c6b5-a2a8-428a-9164-454af1a04d0a",
                            Email = "263189@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "263189@GM.UIT.EDU.VN",
                            NormalizedUserName = "263189",
                            PasswordHash = "AQAAAAIAAYagAAAAEJDKnSP+zYA2IHRJ4xWN0n4uFxVNoIWaXV256exQ+beSmj7rrTI9M/bykQN0852KBA==",
                            PhoneNumber = "0254 0064 4725",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "c2fa927b-c907-477c-8217-41e92607692c",
                            TwoFactorEnabled = false,
                            UserName = "263189"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=402",
                            ConcurrencyStamp = "d542af94-479b-4633-870b-b75a374bd510",
                            Email = "167674@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "167674@GM.UIT.EDU.VN",
                            NormalizedUserName = "167674",
                            PasswordHash = "AQAAAAIAAYagAAAAEIgqhpHLXmV5K9NAFnul67i67PayNCC0ohWXsd9hk6YvXDSOGJb4nvYZET4wO5QhhQ==",
                            PhoneNumber = "022 6491 9519",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "3d5e423b-a00e-437e-bdb8-a1195ab0390d",
                            TwoFactorEnabled = false,
                            UserName = "167674"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=821",
                            ConcurrencyStamp = "801591df-0b67-40de-80a7-447749cc9978",
                            Email = "272159@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "272159@GM.UIT.EDU.VN",
                            NormalizedUserName = "272159",
                            PasswordHash = "AQAAAAIAAYagAAAAEGRgGdAqqojUvW3p3nJ9JhedamsSjN4wDaInKC8pksoJG6z7b9Ck3VNTr/xhs49jSw==",
                            PhoneNumber = "0298 9854 7471",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "9a575041-2850-4fd1-85c7-b71e9b442494",
                            TwoFactorEnabled = false,
                            UserName = "272159"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=482",
                            ConcurrencyStamp = "3144d40e-5b7e-4d7c-8ac9-11c258647718",
                            Email = "176644@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "176644@GM.UIT.EDU.VN",
                            NormalizedUserName = "176644",
                            PasswordHash = "AQAAAAIAAYagAAAAEF6TSIOFaVNJ6d6hy9lZwpOBJZKnT5MSa5crk6cMbu2DWACS2kYwx5UNI1/5BLMQpg==",
                            PhoneNumber = "0260 3609 8849",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "d551c2d9-a475-4720-846f-f72a9540b8f3",
                            TwoFactorEnabled = false,
                            UserName = "176644"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=773",
                            ConcurrencyStamp = "285b82c9-1871-40a6-aae3-5727ec5190eb",
                            Email = "281130@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "281130@GM.UIT.EDU.VN",
                            NormalizedUserName = "281130",
                            PasswordHash = "AQAAAAIAAYagAAAAELXk040bJSueO4DA8fjwO8bn7t3XYdKEG+mumfrR6PdJdZztMz5yH9o2gu/PiBSA4A==",
                            PhoneNumber = "023 2854 4921",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "8b984eb6-34da-4712-9ee6-a9de905445ba",
                            TwoFactorEnabled = false,
                            UserName = "281130"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=535",
                            ConcurrencyStamp = "cabb50f8-1efb-4af0-8b31-3663a05c8d40",
                            Email = "185614@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "185614@GM.UIT.EDU.VN",
                            NormalizedUserName = "185614",
                            PasswordHash = "AQAAAAIAAYagAAAAEGCgYz75iux2EFBnZ4XP+2FEMgB3AG3kTVFfjBvux7e4qpuZYKXhwYLUW9hlRHBgWA==",
                            PhoneNumber = "020 4249 9059",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "ed1e38e6-222b-432b-a425-6c6f867fd70e",
                            TwoFactorEnabled = false,
                            UserName = "185614"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=550",
                            ConcurrencyStamp = "a97a2efd-3451-4e6e-ac2a-7a1037646151",
                            Email = "290100@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "290100@GM.UIT.EDU.VN",
                            NormalizedUserName = "290100",
                            PasswordHash = "AQAAAAIAAYagAAAAEAmPDse/DPT5qEsZMKIQDxx2eC8TXI1Ib/rhhQroCwtzQ5D+nUUf92wboDPGPBKdeQ==",
                            PhoneNumber = "0276 7234 2962",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "86e6e992-83de-4fad-82ae-cfa1f6644752",
                            TwoFactorEnabled = false,
                            UserName = "290100"
                        },
                        new
                        {
                            Id = 11,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=59",
                            ConcurrencyStamp = "ce12b4fc-ef15-48aa-a651-9088d895cd1c",
                            Email = "194584@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "194584@GM.UIT.EDU.VN",
                            NormalizedUserName = "194584",
                            PasswordHash = "AQAAAAIAAYagAAAAEA3ib39kCRM4n5+tvlFUp2U4LDzXFCgX6bfUZsCG1JFSswZv8TiK/WgfVrsYLV5WMw==",
                            PhoneNumber = "024 9118 9333",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "50859b85-28e8-4eac-933b-b45a0f8aea0d",
                            TwoFactorEnabled = false,
                            UserName = "194584"
                        },
                        new
                        {
                            Id = 12,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=906",
                            ConcurrencyStamp = "94053576-62a2-48bb-b7cc-a03df86107de",
                            Email = "299070@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "299070@GM.UIT.EDU.VN",
                            NormalizedUserName = "299070",
                            PasswordHash = "AQAAAAIAAYagAAAAEGBaA7730iu+jhFyLbiEEgbhfp3+0y/jHyuIdfL2JzGBHS7d/BUcYj383Ms3XGZwUA==",
                            PhoneNumber = "021 1602 4461",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "56fa5f9d-0eb7-45d7-a679-8b6427428a46",
                            TwoFactorEnabled = false,
                            UserName = "299070"
                        },
                        new
                        {
                            Id = 13,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=617",
                            ConcurrencyStamp = "1c0379ad-a1d0-44f7-bcc8-018d1cd9e6dc",
                            Email = "203554@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "203554@GM.UIT.EDU.VN",
                            NormalizedUserName = "203554",
                            PasswordHash = "AQAAAAIAAYagAAAAEDF9+lGro5RYJ/4EGdnsCpdGn4dJ7tvce75bqZysqLXKAuoGbd5sii9nmTsTUqsQww==",
                            PhoneNumber = "0283 0979 5086",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "6ca95246-4247-4739-98c7-e6a89938dc4d",
                            TwoFactorEnabled = false,
                            UserName = "203554"
                        },
                        new
                        {
                            Id = 14,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=278",
                            ConcurrencyStamp = "d39735b1-5489-41a3-9707-e9a97117153f",
                            Email = "108039@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "108039@GM.UIT.EDU.VN",
                            NormalizedUserName = "108039",
                            PasswordHash = "AQAAAAIAAYagAAAAEHVWe46P5VzWWQ28z1nEWsnZdAX1mZhwzkTHUGt7bId94XFTtHtB3WyAUytTNcJ5bA==",
                            PhoneNumber = "0255 5714 7463",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "1919a69c-98eb-4c3f-9b00-213a4e2ef4af",
                            TwoFactorEnabled = false,
                            UserName = "108039"
                        },
                        new
                        {
                            Id = 15,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=193",
                            ConcurrencyStamp = "4c483e53-e155-44b2-a8e7-5603b6b410d5",
                            Email = "212525@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "212525@GM.UIT.EDU.VN",
                            NormalizedUserName = "212525",
                            PasswordHash = "AQAAAAIAAYagAAAAEMH9dRoaweA6ioqC9BEjj+HI8CQB1VX5MAGZXpvC0frZ4idWiuDyVGPuc7JaummnyQ==",
                            PhoneNumber = "022 7966 9883",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "4e31c5e2-c4f3-4c66-a377-6817381bff19",
                            TwoFactorEnabled = false,
                            UserName = "212525"
                        },
                        new
                        {
                            Id = 16,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=685",
                            ConcurrencyStamp = "d9a5d691-366e-4e09-8c86-3c8876f096f8",
                            Email = "117009@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "117009@GM.UIT.EDU.VN",
                            NormalizedUserName = "117009",
                            PasswordHash = "AQAAAAIAAYagAAAAEOeGrFxr47Fw4iVZdgk2EGkuGKPvKXBr8/Xxca3kMsTJ2z2Gz5CbHB2vKETxys92Pg==",
                            PhoneNumber = "0299 4504 9109",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "acd852e8-2753-4785-a36f-ffb9f68195aa",
                            TwoFactorEnabled = false,
                            UserName = "117009"
                        },
                        new
                        {
                            Id = 17,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=346",
                            ConcurrencyStamp = "67ae061d-9c1f-4cd3-af10-54c3279f51ce",
                            Email = "221495@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "221495@GM.UIT.EDU.VN",
                            NormalizedUserName = "221495",
                            PasswordHash = "AQAAAAIAAYagAAAAEFf1GM2D5Y6MwclbODbxGvZmlmvqJA+TrES7/kMmwstJELku3/3LGo1W6iTohPVH3Q==",
                            PhoneNumber = "0261 8459 0587",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "d00c95a6-d9d7-4c79-b81f-3276de006f5f",
                            TwoFactorEnabled = false,
                            UserName = "221495"
                        },
                        new
                        {
                            Id = 18,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=564",
                            ConcurrencyStamp = "0ed127da-33c5-4e85-8d7f-e72169278b36",
                            Email = "125979@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "125979@GM.UIT.EDU.VN",
                            NormalizedUserName = "125979",
                            PasswordHash = "AQAAAAIAAYagAAAAEPRCevZRrSipwtLBiFBlestQBNURUuLqtl1WyDLmlcOdoICnonOsh7wR8V4jvqqs6g==",
                            PhoneNumber = "023 4329 4295",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "a8c50ba3-1ddc-42a3-8af2-c935fbdae32e",
                            TwoFactorEnabled = false,
                            UserName = "125979"
                        },
                        new
                        {
                            Id = 19,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=326",
                            ConcurrencyStamp = "4befdcc4-3fe5-49b4-9ff1-b382b61e4e35",
                            Email = "230465@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "230465@GM.UIT.EDU.VN",
                            NormalizedUserName = "230465",
                            PasswordHash = "AQAAAAIAAYagAAAAEAOZZ605gQ7AEM2BWvWrqOIS9P09Evzs9IqRAAZmW+27XWheqkxGYkEZSzRD9JJyfA==",
                            PhoneNumber = "020 6714 9322",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "3fbc8140-4025-4096-b3cb-2a31e3565831",
                            TwoFactorEnabled = false,
                            UserName = "230465"
                        },
                        new
                        {
                            Id = 20,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=414",
                            ConcurrencyStamp = "911a370c-b301-4cbc-ad70-7ad245a21348",
                            Email = "134950@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "134950@GM.UIT.EDU.VN",
                            NormalizedUserName = "134950",
                            PasswordHash = "AQAAAAIAAYagAAAAEIIQ5+jd7oQAKmH2Allr+izzzgJfk10xNaADkzgB4rGIuWnvdLoZgD594JpNsTf+DA==",
                            PhoneNumber = "0278 2084 4600",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "4627e375-61bd-4e86-ad03-ea4fd2d9aaee",
                            TwoFactorEnabled = false,
                            UserName = "134950"
                        },
                        new
                        {
                            Id = 21,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=75",
                            ConcurrencyStamp = "f6cab5f3-ef8e-4d85-a8d5-1c0a00f26b32",
                            Email = "239435@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "239435@GM.UIT.EDU.VN",
                            NormalizedUserName = "239435",
                            PasswordHash = "AQAAAAIAAYagAAAAEPH4W+byVGQKFSx9uIWAlwwLgK46u1BTFCVgg87pwU8YFY5FcIznd/3RjI4nFZLiTA==",
                            PhoneNumber = "0240 6939 5078",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "9abe9032-fd41-41f5-bc32-21768527a49c",
                            TwoFactorEnabled = false,
                            UserName = "239435"
                        },
                        new
                        {
                            Id = 22,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=697",
                            ConcurrencyStamp = "c1fa5f25-1809-49cc-b448-8989576b3ef9",
                            Email = "143920@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "143920@GM.UIT.EDU.VN",
                            NormalizedUserName = "143920",
                            PasswordHash = "AQAAAAIAAYagAAAAEDf0QV7KB47610d/oSeBwnrAhFtjW/h1RWMaz4CX3XGZlFripIRQc6OPzpceEpd5HQ==",
                            PhoneNumber = "021 2177 4634",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "2db12db0-f3f1-40ae-8ae6-35b1803b30e0",
                            TwoFactorEnabled = false,
                            UserName = "143920"
                        },
                        new
                        {
                            Id = 23,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=481",
                            ConcurrencyStamp = "f4989562-efcd-4009-a209-f5418b3e1f6f",
                            Email = "248405@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "248405@GM.UIT.EDU.VN",
                            NormalizedUserName = "248405",
                            PasswordHash = "AQAAAAIAAYagAAAAEE9YId8tq+LilHatuty3XDKlE17cXmPJZKG4NQQBufvpEhHWuN0DQkssj9CR+wIYQw==",
                            PhoneNumber = "0284 5629 8724",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "ac04d26d-3cd6-4c3a-9619-cfe83b99e063",
                            TwoFactorEnabled = false,
                            UserName = "248405"
                        },
                        new
                        {
                            Id = 24,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=142",
                            ConcurrencyStamp = "d347673d-7e2b-4aba-af10-83a5a65f709f",
                            Email = "152890@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "152890@GM.UIT.EDU.VN",
                            NormalizedUserName = "152890",
                            PasswordHash = "AQAAAAIAAYagAAAAEM0uoWFtlhBRm1bHA4SYGN+dviCgqDf8M3o1xX6Zeu+XxYniwxufDV+1GTppfW9g3Q==",
                            PhoneNumber = "0256 0564 9192",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "73e60e65-c09d-4265-8b8d-18b01bdbb932",
                            TwoFactorEnabled = false,
                            UserName = "152890"
                        },
                        new
                        {
                            Id = 25,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=1068",
                            ConcurrencyStamp = "c1601450-2bf2-4a76-a1a9-677109366605",
                            Email = "257376@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "257376@GM.UIT.EDU.VN",
                            NormalizedUserName = "257376",
                            PasswordHash = "AQAAAAIAAYagAAAAENrXhqhXAgnn9oB4jUh136+PVaBl2xY62tYG8S/7pORgg7HRcJs43NVG75op61BXAQ==",
                            PhoneNumber = "022 8441 9047",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "1d341219-c1cc-4939-8191-cb85e75c9e54",
                            TwoFactorEnabled = false,
                            UserName = "257376"
                        },
                        new
                        {
                            Id = 26,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=830",
                            ConcurrencyStamp = "09d84cb8-27ae-4030-bc58-95ca94761de2",
                            Email = "161860@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "161860@GM.UIT.EDU.VN",
                            NormalizedUserName = "161860",
                            PasswordHash = "AQAAAAIAAYagAAAAEKTX35e24Jv74svFCwkUmhXZsK+zSrosISvIuZXYUmITfOwSQsO+71XPLlgl6+r1jA==",
                            PhoneNumber = "029 1925 4184",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "0cf8d41f-4f03-4f17-af92-e388c2529841",
                            TwoFactorEnabled = false,
                            UserName = "161860"
                        },
                        new
                        {
                            Id = 27,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=210",
                            ConcurrencyStamp = "84007f12-8da5-464b-86cd-e802796163ac",
                            Email = "266346@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "266346@GM.UIT.EDU.VN",
                            NormalizedUserName = "266346",
                            PasswordHash = "AQAAAAIAAYagAAAAEH8WagSDXYJvc9eeJJvgELOJ7HOib40lR5+0jMWgBbMG0xPMUdejkRfLuLyi7UBbJA==",
                            PhoneNumber = "0263 3109 3215",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "80ef7baa-83c5-4a51-acb9-f554b225db13",
                            TwoFactorEnabled = false,
                            UserName = "266346"
                        },
                        new
                        {
                            Id = 28,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=355",
                            ConcurrencyStamp = "caabd986-bffd-47d3-ae00-e0b0dfc3c0a5",
                            Email = "170830@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "170830@GM.UIT.EDU.VN",
                            NormalizedUserName = "170830",
                            PasswordHash = "AQAAAAIAAYagAAAAEHcO/n0YP9Kb/wAUwUAt8/fj8VGnof/oiwrxqFKuKhxVHHfJd4OpgcxtSUWFO+/BTg==",
                            PhoneNumber = "023 5804 4459",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "b4eeb2f7-0300-4520-9bc0-9f286a0b3e3a",
                            TwoFactorEnabled = false,
                            UserName = "170830"
                        },
                        new
                        {
                            Id = 29,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=117",
                            ConcurrencyStamp = "bb531194-9f6a-4fce-a2fb-f42cbcc4320e",
                            Email = "275316@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "275316@GM.UIT.EDU.VN",
                            NormalizedUserName = "275316",
                            PasswordHash = "AQAAAAIAAYagAAAAECcxOIq+umAS03r6FXdLLeH2olr5ic6/r4WeyWFCSK8EYmkj3++7XulaZAMf2G3WBQ==",
                            PhoneNumber = "020 7298 9596",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "d6d34844-a5ac-4b33-840f-684ef532304a",
                            TwoFactorEnabled = false,
                            UserName = "275316"
                        },
                        new
                        {
                            Id = 30,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=277",
                            ConcurrencyStamp = "8fc0cfe3-5c57-4eb2-92c5-5a153e596d0b",
                            Email = "179800@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "179800@GM.UIT.EDU.VN",
                            NormalizedUserName = "179800",
                            PasswordHash = "AQAAAAIAAYagAAAAEOdHV6Z/5hWwBzttRnnF7QrOUERfzHSQyqGcU3Io31U09hGGIyEEXsZNQZwNo1uJCA==",
                            PhoneNumber = "0279 7734 6338",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "9a069d19-34f2-4ef4-aa80-2da6a676c6d8",
                            TwoFactorEnabled = false,
                            UserName = "179800"
                        },
                        new
                        {
                            Id = 31,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=1023",
                            ConcurrencyStamp = "7a796a28-1f07-4d96-a8e5-8ef5fe60834b",
                            Email = "284286@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "284286@GM.UIT.EDU.VN",
                            NormalizedUserName = "284286",
                            PasswordHash = "AQAAAAIAAYagAAAAEP9UwxvSAmNmWWnEyL+2VH0EOtnBS2hQZXs0GYWu3cYBisUNPOfeuQl5debAmSrpHg==",
                            PhoneNumber = "0241 2679 8716",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "c1a5c133-cdcd-4104-9120-038d06ec3626",
                            TwoFactorEnabled = false,
                            UserName = "284286"
                        },
                        new
                        {
                            Id = 32,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=488",
                            ConcurrencyStamp = "ba432aad-613b-4abb-ab56-3401ff2bcca3",
                            Email = "188771@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "188771@GM.UIT.EDU.VN",
                            NormalizedUserName = "188771",
                            PasswordHash = "AQAAAAIAAYagAAAAEH+g8rUgwbdnQPoxwiOkX6rFumpqulPgL0NK0q29/eKVeSLsR/l5Z+3oKPTi16tw0Q==",
                            PhoneNumber = "021 3652 4908",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "a39208a2-8f92-45e5-87fa-6f68ae6fc82f",
                            TwoFactorEnabled = false,
                            UserName = "188771"
                        },
                        new
                        {
                            Id = 33,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=345",
                            ConcurrencyStamp = "37f62b7f-4e92-4231-9780-4fd237094b5a",
                            Email = "293256@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "293256@GM.UIT.EDU.VN",
                            NormalizedUserName = "293256",
                            PasswordHash = "AQAAAAIAAYagAAAAEMk9hoo4rFwQrza/9Qq+TXqFIHjShPB527lMxRhYENo6LZbyZBp7VOmS/mpay+88lQ==",
                            PhoneNumber = "0286 1369 0462",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "e28a9968-ca12-43e7-9976-83f32dde97e6",
                            TwoFactorEnabled = false,
                            UserName = "293256"
                        },
                        new
                        {
                            Id = 34,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=6",
                            ConcurrencyStamp = "6f51005c-c2e4-4e79-8380-16543209d467",
                            Email = "197741@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "197741@GM.UIT.EDU.VN",
                            NormalizedUserName = "197741",
                            PasswordHash = "AQAAAAIAAYagAAAAEK+CHuHw7WtQ+Dv3CXGOhLFlUaSLWTQKkGjsztTx7lQl2BrBwvSpU37LqGGeyY70AA==",
                            PhoneNumber = "0258 5214 1830",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "d89e6919-5d37-4155-92b3-4526267fe74e",
                            TwoFactorEnabled = false,
                            UserName = "197741"
                        },
                        new
                        {
                            Id = 35,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=859",
                            ConcurrencyStamp = "c1e68322-e1b2-4c10-990b-c7d47e392c29",
                            Email = "102225@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "102225@GM.UIT.EDU.VN",
                            NormalizedUserName = "102225",
                            PasswordHash = "AQAAAAIAAYagAAAAEB/BLnrj1ISV6J8Yy3aCmtbzF+1jTc0rtfbiM1gr53g6eMag0sV2Q8Iahe//doD9wA==",
                            PhoneNumber = "022 0015 0310",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "fd16f2ac-7040-4006-bb8b-f4f29f73527c",
                            TwoFactorEnabled = false,
                            UserName = "102225"
                        },
                        new
                        {
                            Id = 36,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=621",
                            ConcurrencyStamp = "ddded855-7e13-4217-94af-cf007bc23891",
                            Email = "206711@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "206711@GM.UIT.EDU.VN",
                            NormalizedUserName = "206711",
                            PasswordHash = "AQAAAAIAAYagAAAAENnMVSPULL70EVD8w7VEzSW/FQkV9Erz2I8Y9cwuFSk1lmVsg2GOv/HdOh5at/Qaow==",
                            PhoneNumber = "029 2400 5458",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "783d7478-90e5-44d6-8a3f-dd2e18d46743",
                            TwoFactorEnabled = false,
                            UserName = "206711"
                        },
                        new
                        {
                            Id = 37,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=74",
                            ConcurrencyStamp = "c5f85179-f4cd-4e46-9167-704384a06062",
                            Email = "111196@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "111196@GM.UIT.EDU.VN",
                            NormalizedUserName = "111196",
                            PasswordHash = "AQAAAAIAAYagAAAAEASjF8f6srVXPgU3cQ7y23EsqG3PZeN27qwf1801EHNgc0sNDFmlmII42k1H5haY1A==",
                            PhoneNumber = "0264 9840 5953",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "f9ddacdf-82ab-422f-940a-d77dc7ea79ee",
                            TwoFactorEnabled = false,
                            UserName = "111196"
                        },
                        new
                        {
                            Id = 38,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=820",
                            ConcurrencyStamp = "728da2da-643d-421d-bb9a-e9a3ab5353de",
                            Email = "215681@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "215681@GM.UIT.EDU.VN",
                            NormalizedUserName = "215681",
                            PasswordHash = "AQAAAAIAAYagAAAAEKDJbI5SsX7JQSVNva+9tqR2R4qKuYNYGNF9Cx+Ngid+0Oiz7MwjMCbYrGmsAD87jw==",
                            PhoneNumber = "0236 3795 6221",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "b16951a4-859b-4bb4-868e-be61305867c6",
                            TwoFactorEnabled = false,
                            UserName = "215681"
                        },
                        new
                        {
                            Id = 39,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=992",
                            ConcurrencyStamp = "454a9eef-c44c-4211-95bb-1d8d9153f5a7",
                            Email = "120166@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "120166@GM.UIT.EDU.VN",
                            NormalizedUserName = "120166",
                            PasswordHash = "AQAAAAIAAYagAAAAEE4HIIWoCmSgeYs7gnie2fbRE2Jd0LFGc5IStupgo9pRgJRukS7et5xwWHPMpfet6Q==",
                            PhoneNumber = "020 8863 0860",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "33dec8a9-164c-4b53-9b81-4c721bd3c218",
                            TwoFactorEnabled = false,
                            UserName = "120166"
                        },
                        new
                        {
                            Id = 40,
                            AccessFailedCount = 0,
                            AvatarUrl = "https://picsum.photos/640/480/?image=141",
                            ConcurrencyStamp = "478e7755-8e7a-4834-810e-5e9876581bcf",
                            Email = "224651@gm.uit.edu.vn",
                            EmailConfirmed = true,
                            IsActive = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "224651@GM.UIT.EDU.VN",
                            NormalizedUserName = "224651",
                            PasswordHash = "AQAAAAIAAYagAAAAEGNH1znigvA1z1SZJDSpSrKAAluvlA4ex0wSAFZHYc7gvBbxs05/Td65J4NgIdNCCA==",
                            PhoneNumber = "0270 2585 9076",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "5371a980-72ac-40ca-bc11-41f982dcd95f",
                            TwoFactorEnabled = false,
                            UserName = "224651"
                        });
                });

            modelBuilder.Entity("UITEventAPI.Application.Infrastructure.Identity.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RefreshTokenId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("ExpiryDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UITEventAPI.Application.Domain.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Events.Event", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "LastModifiedByUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UITEventAPI.Application.Domain.UniversityUnit.UniversityUnit", "UniversityUnit")
                        .WithMany("HostedEvents")
                        .HasForeignKey("UniversityUnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("LastModifiedByUser");

                    b.Navigation("UniversityUnit");
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Events.EventImage", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Events.Event", "Event")
                        .WithMany("Images")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Events.EventRegistration", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UITEventAPI.Application.Domain.Events.Event", "Event")
                        .WithMany("Registrations")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "LastModifiedByUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UITEventAPI.Application.Domain.Students.Student", "Student")
                        .WithMany("RegisteredEvents")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("Event");

                    b.Navigation("LastModifiedByUser");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Students.Student", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "LastModifiedByUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "User")
                        .WithOne()
                        .HasForeignKey("UITEventAPI.Application.Domain.Students.Student", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("LastModifiedByUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.UniversityUnit.UniversityUnit", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "LastModifiedByUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "User")
                        .WithOne()
                        .HasForeignKey("UITEventAPI.Application.Domain.UniversityUnit.UniversityUnit", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("LastModifiedByUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UITEventAPI.Application.Infrastructure.Identity.RefreshToken", b =>
                {
                    b.HasOne("UITEventAPI.Application.Domain.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("User");
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Events.Event", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Registrations");
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.Students.Student", b =>
                {
                    b.Navigation("RegisteredEvents");
                });

            modelBuilder.Entity("UITEventAPI.Application.Domain.UniversityUnit.UniversityUnit", b =>
                {
                    b.Navigation("HostedEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
